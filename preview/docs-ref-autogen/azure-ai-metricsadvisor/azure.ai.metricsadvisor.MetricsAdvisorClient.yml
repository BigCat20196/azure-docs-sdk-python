### YamlMime:PythonClass
uid: azure.ai.metricsadvisor.MetricsAdvisorClient
name: MetricsAdvisorClient
fullName: azure.ai.metricsadvisor.MetricsAdvisorClient
module: azure.ai.metricsadvisor
inheritances:
- builtins.object
summary: Represents an client that calls restful API of Azure Metrics Advisor service.
constructor:
  syntax: MetricsAdvisorClient(endpoint, credential, **kwargs)
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoints (protocol and hostname,

      for example: [https://](https://)`<resource-name>`.cognitiveservices.azure.com).'
    types:
    - <xref:str>
  - name: credential
    description: 'An instance of ~azure.ai.metricsadvisor.MetricsAdvisorKeyCredential.

      Requires both subscription key and API key.'
    types:
    - <xref:azure.ai.metricsadvisor.MetricsAdvisorKeyCredential>
  - name: pipeline
    description: If omitted, the standard pipeline is used.
    types:
    - <xref:Pipeline>
  - name: transport
    description: If omitted, the standard pipeline is used.
    types:
    - <xref:HttpTransport>
  - name: policies
    description: If omitted, the standard pipeline is used.
    types:
    - <xref:list>[<xref:HTTPPolicy>]
methods:
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.add_feedback
  name: add_feedback
  summary: Create a new metric feedback.
  signature: add_feedback(feedback, **kwargs)
  parameters:
  - name: feedback
    description: metric feedback.
    isRequired: true
    types:
    - <xref:azure.ai.metricsadvisor.models.AnomalyFeedback>
    - <xref:azure.ai.metricsadvisor.models.ChangePointFeedback>
    - <xref:azure.ai.metricsadvisor.models.CommentFeedback>
    - <xref:azure.ai.metricsadvisor.models.PeriodFeedback>
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "Add new feedback.<!--[!code-python[Main](les\\sample_feedback.py )]-->\n\n<!--\
    \ literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [],\
    \ \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\29\\\\azure-ai-metricsadvisor-1.0.0b1\\\
    \\samples\\\\sample_feedback.py\", \"xml:space\": \"preserve\", \"language\":\
    \ \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\
    \n````python\n\n   from azure.ai.metricsadvisor import MetricsAdvisorKeyCredential,\
    \ MetricsAdvisorClient\n   from azure.ai.metricsadvisor.models import AnomalyFeedback,\
    \ ChangePointFeedback, CommentFeedback, PeriodFeedback\n\n   service_endpoint\
    \ = os.getenv(\"METRICS_ADVISOR_ENDPOINT\")\n   subscription_key = os.getenv(\"\
    METRICS_ADVISOR_SUBSCRIPTION_KEY\")\n   api_key = os.getenv(\"METRICS_ADVISOR_API_KEY\"\
    )\n   metric_id = os.getenv(\"METRICS_ADVISOR_METRIC_ID\")\n\n   client = MetricsAdvisorClient(service_endpoint,\n\
    \                                 MetricsAdvisorKeyCredential(subscription_key,\
    \ api_key))\n\n   anomaly_feedback = AnomalyFeedback(metric_id=metric_id,\n  \
    \                                    dimension_key={\"Dim1\": \"Common Lime\"\
    },\n                                      start_time=datetime.datetime(2020, 8,\
    \ 5),\n                                      end_time=datetime.datetime(2020,\
    \ 8, 7),\n                                      value=\"NotAnomaly\")\n   client.add_feedback(anomaly_feedback)\n\
    \n   change_point_feedback = ChangePointFeedback(metric_id=metric_id,\n      \
    \                                         dimension_key={\"Dim1\": \"Common Lime\"\
    },\n                                               start_time=datetime.datetime(2020,\
    \ 8, 5),\n                                               end_time=datetime.datetime(2020,\
    \ 8, 7),\n                                               value=\"NotChangePoint\"\
    )\n   client.add_feedback(change_point_feedback)\n\n   comment_feedback = CommentFeedback(metric_id=metric_id,\n\
    \                                      dimension_key={\"Dim1\": \"Common Lime\"\
    },\n                                      start_time=datetime.datetime(2020, 8,\
    \ 5),\n                                      end_time=datetime.datetime(2020,\
    \ 8, 7),\n                                      value=\"comment\")\n   client.add_feedback(comment_feedback)\n\
    \n   period_feedback = PeriodFeedback(metric_id=metric_id,\n                 \
    \                   dimension_key={\"Dim1\": \"Common Lime\"},\n             \
    \                       start_time=datetime.datetime(2020, 8, 5),\n          \
    \                          end_time=datetime.datetime(2020, 8, 7),\n         \
    \                           period_type=\"AssignValue\",\n                   \
    \                 value=2)\n   client.add_feedback(period_feedback)\n\n   ````\n"
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.close
  name: close
  summary: Close the <xref:azure.ai.metricsadvisor.MetricsAdvisorClient> session.
  signature: close()
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.get_feedback
  name: get_feedback
  summary: Get a metric feedback by its id.
  signature: get_feedback(feedback_id, **kwargs)
  parameters:
  - name: feedback_id
    description: the id of the feedback.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The feedback object
    types:
    - <xref:azure.ai.metricsadvisor.models.AnomalyFeedback>
    - <xref:azure.ai.metricsadvisor.models.ChangePointFeedback>
    - <xref:azure.ai.metricsadvisor.models.CommentFeedback>
    - <xref:azure.ai.metricsadvisor.models.PeriodFeedback>
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "Get a metric feedback by its id.<!--[!code-python[Main](les\\sample_feedback.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\29\\\\azure-ai-metricsadvisor-1.0.0b1\\\\samples\\\\sample_feedback.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.ai.metricsadvisor import\
    \ MetricsAdvisorKeyCredential, MetricsAdvisorClient\n\n   service_endpoint = os.getenv(\"\
    METRICS_ADVISOR_ENDPOINT\")\n   subscription_key = os.getenv(\"METRICS_ADVISOR_SUBSCRIPTION_KEY\"\
    )\n   api_key = os.getenv(\"METRICS_ADVISOR_API_KEY\")\n   feedback_id = os.getenv(\"\
    METRICS_ADVISOR_FEEDBACK_ID\")\n\n   client = MetricsAdvisorClient(service_endpoint,\n\
    \                                 MetricsAdvisorKeyCredential(subscription_key,\
    \ api_key))\n\n   result = client.get_feedback(feedback_id=feedback_id)\n   print(\"\
    Type: {}; Id: {}\".format(result.feedback_type, result.id))\n\n   ````\n"
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_alerts_for_alert_configuration
  name: list_alerts_for_alert_configuration
  summary: Query alerts under anomaly alert configuration.
  signature: list_alerts_for_alert_configuration(alert_configuration_id, start_time,
    end_time, time_mode, **kwargs)
  parameters:
  - name: alert_configuration_id
    description: anomaly alert configuration unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: start_time
    description: start time.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: end time.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: time_mode
    description: 'time mode. Possible values include: "AnomalyTime", "CreatedTime",

      "ModifiedTime".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.ai.metricsadvisor.models.TimeMode>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  return:
    description: Alerts under anomaly alert configuration.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.Alert>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "Query anomaly detection results.<!--[!code-python[Main](les\\sample_anomaly_alert_configuration.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\29\\\\azure-ai-metricsadvisor-1.0.0b1\\\\samples\\\\sample_anomaly_alert_configuration.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   import datetime\n\
    \   from azure.ai.metricsadvisor import MetricsAdvisorKeyCredential, MetricsAdvisorClient\n\
    \n   service_endpoint = os.getenv(\"METRICS_ADVISOR_ENDPOINT\")\n   subscription_key\
    \ = os.getenv(\"METRICS_ADVISOR_SUBSCRIPTION_KEY\")\n   api_key = os.getenv(\"\
    METRICS_ADVISOR_API_KEY\")\n\n   client = MetricsAdvisorClient(service_endpoint,\n\
    \                                 MetricsAdvisorKeyCredential(subscription_key,\
    \ api_key))\n\n   results = client.list_alerts_for_alert_configuration(\n    \
    \   alert_configuration_id=alert_config_id,\n       start_time=datetime.datetime(2020,\
    \ 1, 1),\n       end_time=datetime.datetime(2020, 9, 9),\n       time_mode=\"\
    AnomalyTime\",\n   )\n   for result in results:\n       print(\"Alert id: {}\"\
    .format(result.id))\n       print(\"Create on: {}\".format(result.created_on))\n\
    \   return results\n\n\n   ````\n"
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_anomalies_for_alert
  name: list_anomalies_for_alert
  summary: Query anomalies under a specific alert.
  signature: list_anomalies_for_alert(alert_configuration_id, alert_id, **kwargs)
  parameters:
  - name: alert_configuration_id
    description: anomaly alert configuration unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: alert_id
    description: alert id.
    isRequired: true
    types:
    - <xref:str>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  return:
    description: Anomalies under a specific alert.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.Anomaly>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "Query anomalies using alert id.<!--[!code-python[Main](les\\sample_anomaly_alert_configuration.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\29\\\\azure-ai-metricsadvisor-1.0.0b1\\\\samples\\\\sample_anomaly_alert_configuration.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.ai.metricsadvisor\
    \ import MetricsAdvisorKeyCredential, MetricsAdvisorClient\n\n   service_endpoint\
    \ = os.getenv(\"METRICS_ADVISOR_ENDPOINT\")\n   subscription_key = os.getenv(\"\
    METRICS_ADVISOR_SUBSCRIPTION_KEY\")\n   api_key = os.getenv(\"METRICS_ADVISOR_API_KEY\"\
    )\n\n   client = MetricsAdvisorClient(service_endpoint,\n                    \
    \             MetricsAdvisorKeyCredential(subscription_key, api_key))\n\n   results\
    \ = client.list_anomalies_for_alert(\n           alert_configuration_id=alert_config_id,\n\
    \           alert_id=alert_id,\n       )\n   for result in results:\n       print(\"\
    Create on: {}\".format(result.created_on))\n       print(\"Severity: {}\".format(result.severity))\n\
    \       print(\"Status: {}\".format(result.status))\n\n\n   ````\n"
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_anomalies_for_detection_configuration
  name: list_anomalies_for_detection_configuration
  summary: Query anomalies under anomaly detection configuration.
  signature: list_anomalies_for_detection_configuration(detection_configuration_id,
    start_time, end_time, **kwargs)
  parameters:
  - name: detection_configuration_id
    description: anomaly detection configuration unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: start_time
    description: start time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: end time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  - name: filter
    isRequired: true
    types:
    - <xref:azure.ai.metricsadvisor.models.DetectionAnomalyFilterCondition>
  return:
    description: Anomalies under anomaly detection configuration.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.Anomaly>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_dimension_values_for_detection_configuration
  name: list_dimension_values_for_detection_configuration
  summary: Query dimension values of anomalies.
  signature: list_dimension_values_for_detection_configuration(detection_configuration_id,
    dimension_name, start_time, end_time, **kwargs)
  parameters:
  - name: detection_configuration_id
    description: anomaly detection configuration unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: dimension_name
    description: dimension to query.
    isRequired: true
    types:
    - <xref:str>
  - name: start_time
    description: start time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: end time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  - name: dimension_name
    description: The dimension name to query.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Dimension values of anomalies.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:str>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_feedbacks
  name: list_feedbacks
  summary: List feedback on the given metric.
  signature: list_feedbacks(metric_id, **kwargs)
  parameters:
  - name: metric_id
    description: filter feedbacks by metric id
    isRequired: true
    types:
    - <xref:str>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  - name: dimension_key
    description: filter specfic dimension name and values
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: feedback_type
    description: 'filter feedbacks by type. Possible values include: "Anomaly",

      "ChangePoint", "Period", "Comment".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.ai.metricsadvisor.models.FeedbackType>
  - name: start_time
    description: start time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: end time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: time_mode
    description: 'time mode to filter feedback. Possible values include: "MetricTimestamp",

      "FeedbackCreatedTime".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.ai.metricsadvisor.models.FeedbackQueryTimeMode>
  return:
    description: Pageable list of MetricFeedback
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:Union>[<xref:AnomalyFeedback>, <xref:ChangePointFeedback>,
      <xref:CommentFeedback>, <xref:PeriodFeedback>]]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  examples:
  - "List feedback on the given metric.<!--[!code-python[Main](les\\sample_feedback.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\29\\\\azure-ai-metricsadvisor-1.0.0b1\\\\samples\\\\sample_feedback.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.ai.metricsadvisor import\
    \ MetricsAdvisorKeyCredential, MetricsAdvisorClient\n\n   service_endpoint = os.getenv(\"\
    METRICS_ADVISOR_ENDPOINT\")\n   subscription_key = os.getenv(\"METRICS_ADVISOR_SUBSCRIPTION_KEY\"\
    )\n   api_key = os.getenv(\"METRICS_ADVISOR_API_KEY\")\n   metric_id = os.getenv(\"\
    METRICS_ADVISOR_METRIC_ID\")\n\n   client = MetricsAdvisorClient(service_endpoint,\n\
    \                                 MetricsAdvisorKeyCredential(subscription_key,\
    \ api_key))\n\n   results = client.list_feedbacks(metric_id=metric_id)\n   for\
    \ result in results:\n       print(\"Type: {}; Id: {}\".format(result.feedback_type,\
    \ result.id))\n\n   ````\n"
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_incident_root_causes
  name: list_incident_root_causes
  summary: Query root cause for incident.
  signature: list_incident_root_causes(detection_configuration_id, incident_id, **kwargs)
  parameters:
  - name: detection_configuration_id
    description: anomaly detection configuration unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: incident_id
    description: incident id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Pageable of root cause for incident
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.IncidentRootCause>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_incidents_for_alert
  name: list_incidents_for_alert
  summary: Query incidents under a specific alert.
  signature: list_incidents_for_alert(alert_configuration_id, alert_id, **kwargs)
  parameters:
  - name: alert_configuration_id
    description: anomaly alerting configuration unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: alert_id
    description: alert id.
    isRequired: true
    types:
    - <xref:str>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  return:
    description: Incidents under a specific alert.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.Incident>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_incidents_for_detection_configuration
  name: list_incidents_for_detection_configuration
  summary: Query incidents under a specific alert.
  signature: list_incidents_for_detection_configuration(detection_configuration_id,
    start_time, end_time, **kwargs)
  parameters:
  - name: detection_configuration_id
    description: anomaly detection configuration unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: start_time
    description: start time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: end time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: filter
    isRequired: true
    types:
    - <xref:azure.ai.metricsadvisor.models.DetectionIncidentFilterCondition>
  return:
    description: Incidents under a specific alert.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.Incident>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_metric_dimension_values
  name: list_metric_dimension_values
  summary: List dimension from certain metric.
  signature: list_metric_dimension_values(metric_id, dimension_name, **kwargs)
  parameters:
  - name: metric_id
    description: metric unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: dimension_name
    description: the dimension name
    isRequired: true
    types:
    - <xref:str>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  - name: dimension_value_filter
    description: dimension value to be filtered.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Dimension from certain metric.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:str>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_metric_enriched_series_data
  name: list_metric_enriched_series_data
  summary: Query series enriched by anomaly detection.
  signature: list_metric_enriched_series_data(detection_configuration_id, series,
    start_time, end_time, **kwargs)
  parameters:
  - name: detection_configuration_id
    description: anomaly alerting configuration unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: series
    description: List of dimensions specified for series.
    isRequired: true
    types:
    - <xref:azure.ai.metricsadvisor.models.SeriesIdentity>
    - <xref:list>[<xref:dict>[<xref:str>, <xref:str>]]
  - name: start_time
    description: start time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: end time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  return:
    description: Pageable of SeriesResult
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.SeriesResult>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_metric_enrichment_status
  name: list_metric_enrichment_status
  summary: Query anomaly detection status.
  signature: list_metric_enrichment_status(metric_id, start_time, end_time, **kwargs)
  parameters:
  - name: metric_id
    description: filter feedbacks by metric id.
    isRequired: true
    types:
    - <xref:str>
  - name: start_time
    description: start time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: end time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  return:
    description: Anomaly detection status.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.EnrichmentStatus>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_metric_series_definitions
  name: list_metric_series_definitions
  summary: List series (dimension combinations) from metric.
  signature: list_metric_series_definitions(metric_id, active_since, **kwargs)
  parameters:
  - name: metric_id
    description: metric unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: active_since
    description: 'Required. query series ingested after this time, the format should
      be

      yyyy-MM-ddTHH:mm:ssZ.'
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: skip
    isRequired: true
    types:
    - <xref:int>
  - name: active_since
    description: 'query series ingested after this time, the format should be

      yyyy-MM-ddTHH:mm:ssZ.'
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: dimension_filter
    description: filter specfic dimension name and values.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:list>[<xref:str>]]
  return:
    description: Series (dimension combinations) from metric.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.MetricSeriesDefinition>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
- uid: azure.ai.metricsadvisor.MetricsAdvisorClient.list_metrics_series_data
  name: list_metrics_series_data
  summary: Get time series data from metric.
  signature: list_metrics_series_data(metric_id, start_time, end_time, series_to_filter,
    **kwargs)
  parameters:
  - name: metric_id
    description: metric unique id.
    isRequired: true
    types:
    - <xref:str>
  - name: start_time
    description: start time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: end_time
    description: end time filter under chosen time mode.
    isRequired: true
    types:
    - <xref:datetime.datetime>
  - name: series_to_filter
    description: query specific series.
    isRequired: true
    types:
    - <xref:list>[<xref:dict>[<xref:str>, <xref:str>]]
  return:
    description: Time series data from metric.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.metricsadvisor.models.MetricSeriesData>]
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
