### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.ai.metricsadvisor.models.PeriodFeedback
  fullName: azure.ai.metricsadvisor.models.PeriodFeedback
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.ai.metricsadvisor.models
  name: PeriodFeedback
  summary: 'PeriodFeedback.


    Variables are only populated by the server, and will be ignored when sending a
    request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: PeriodFeedback(metric_id, dimension_key, value, period_type, **kwargs)
    parameters:
    - description: 'Required. feedback type.Constant filled by server.  Possible values

        include: "Anomaly", "ChangePoint", "Period", "Comment".'
      id: feedback_type
      type:
      - str
      - azure.ai.metricsadvisor.models.FeedbackType
    - description: Required. metric unique id.
      id: metric_id
      type:
      - str
    - description: Required. metric dimension filter.
      id: dimension_key
      type:
      - dict[str, str]
    - description: Required.
      id: value
      type:
      - int
    - description: 'Required. the type of setting period. Possible values include:

        "AutoDetect", "AssignValue".'
      id: period_type
      type:
      - str
      - azure.ai.metricsadvisor.models.PeriodType
    variables:
    - description: feedback unique id.
      id: id
      type:
      - str
    - description: feedback created time.
      id: created_time
      type:
      - datetime.datetime
    - description: user who gives this feedback.
      id: user_principal
      type:
      - str
  type: class
  uid: azure.ai.metricsadvisor.models.PeriodFeedback
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
