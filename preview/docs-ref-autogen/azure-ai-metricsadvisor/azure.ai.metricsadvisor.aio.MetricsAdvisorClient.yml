### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.add_feedback
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.close
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.get_feedback
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_alerts_for_alert_configuration
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_alert
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_detection_configuration
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_dimension_values_for_detection_configuration
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_feedbacks
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incident_root_causes
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_alert
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_detection_configuration
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_dimension_values
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enriched_series_data
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enrichment_status
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_series_definitions
  - azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metrics_series_data
  class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: MetricsAdvisorClient
  summary: Represents an client that calls restful API of Azure Metrics Advisor service.
  syntax:
    content: MetricsAdvisorClient(endpoint, credential, **kwargs)
    parameters:
    - description: 'Supported Cognitive Services endpoints (protocol and hostname,

        for example: [https://](https://)`<resource-name>`.cognitiveservices.azure.com).'
      id: endpoint
      type:
      - str
    - description: 'An instance of ~azure.ai.metricsadvisor.MetricsAdvisorKeyCredential.

        Requires both subscription key and API key.'
      id: credential
      type:
      - azure.ai.metricsadvisor.MetricsAdvisorKeyCredential
    - description: If omitted, the standard pipeline is used.
      id: pipeline
      type:
      - Pipeline
    - description: If omitted, the standard pipeline is used.
      id: transport
      type:
      - HttpTransport
    - description: If omitted, the standard pipeline is used.
      id: policies
      type:
      - list[HTTPPolicy]
  type: class
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  example:
  - "Add new feedback.<!--[!code-python[Main](les\\async_samples\\sample_feedback_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\31\\\\azure-ai-metricsadvisor-1.0.0b1\\\\samples\\\\async_samples\\\\sample_feedback_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.ai.metricsadvisor\
    \ import MetricsAdvisorKeyCredential\n   from azure.ai.metricsadvisor.aio import\
    \ MetricsAdvisorClient\n   from azure.ai.metricsadvisor.models import AnomalyFeedback,\
    \ ChangePointFeedback, CommentFeedback, PeriodFeedback\n\n   service_endpoint\
    \ = os.getenv(\"METRICS_ADVISOR_ENDPOINT\")\n   subscription_key = os.getenv(\"\
    METRICS_ADVISOR_SUBSCRIPTION_KEY\")\n   api_key = os.getenv(\"METRICS_ADVISOR_API_KEY\"\
    )\n   metric_id = os.getenv(\"METRICS_ADVISOR_METRIC_ID\")\n\n   client = MetricsAdvisorClient(service_endpoint,\n\
    \                                 MetricsAdvisorKeyCredential(subscription_key,\
    \ api_key))\n\n   anomaly_feedback = AnomalyFeedback(metric_id=metric_id,\n  \
    \                                    dimension_key={\"Dim1\": \"Common Lime\"\
    },\n                                      start_time=datetime.datetime(2020, 8,\
    \ 5),\n                                      end_time=datetime.datetime(2020,\
    \ 8, 7),\n                                      value=\"NotAnomaly\")\n   await\
    \ client.add_feedback(anomaly_feedback)\n\n   change_point_feedback = ChangePointFeedback(metric_id=metric_id,\n\
    \                                               dimension_key={\"Dim1\": \"Common\
    \ Lime\"},\n                                               start_time=datetime.datetime(2020,\
    \ 8, 5),\n                                               end_time=datetime.datetime(2020,\
    \ 8, 7),\n                                               value=\"NotChangePoint\"\
    )\n   await client.add_feedback(change_point_feedback)\n\n   comment_feedback\
    \ = CommentFeedback(metric_id=metric_id,\n                                   \
    \   dimension_key={\"Dim1\": \"Common Lime\"},\n                             \
    \         start_time=datetime.datetime(2020, 8, 5),\n                        \
    \              end_time=datetime.datetime(2020, 8, 7),\n                     \
    \                 value=\"comment\")\n   await client.add_feedback(comment_feedback)\n\
    \n   period_feedback = PeriodFeedback(metric_id=metric_id,\n                 \
    \                   dimension_key={\"Dim1\": \"Common Lime\"},\n             \
    \                       start_time=datetime.datetime(2020, 8, 5),\n          \
    \                          end_time=datetime.datetime(2020, 8, 7),\n         \
    \                           period_type=\"AssignValue\",\n                   \
    \                 value=2)\n   await client.add_feedback(period_feedback)\n\n\
    \   ````\n"
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.add_feedback
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: add_feedback(feedback, **kwargs)
  namewithoutparameters: add_feedback
  summary: Create a new metric feedback.
  syntax:
    content: add_feedback(feedback, **kwargs)
    parameters:
    - description: metric feedback.
      id: feedback
      isRequired: true
      type:
      - azure.ai.metricsadvisor.models.AnomalyFeedback
      - azure.ai.metricsadvisor.models.ChangePointFeedback
      - azure.ai.metricsadvisor.models.CommentFeedback
      - azure.ai.metricsadvisor.models.PeriodFeedback
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.add_feedback
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.close
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: close() -> None
  namewithoutparameters: close
  summary: Close the <xref:azure.ai.metricsadvisor.aio.MetricsAdvisorClient> session.
  syntax:
    content: close() -> None
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.close
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  example:
  - "Get a metric feedback by its id.<!--[!code-python[Main](les\\async_samples\\\
    sample_feedback_async.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\31\\\\azure-ai-metricsadvisor-1.0.0b1\\\\samples\\\
    \\async_samples\\\\sample_feedback_async.py\", \"xml:space\": \"preserve\", \"\
    language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   from azure.ai.metricsadvisor import MetricsAdvisorKeyCredential,\
    \ MetricsAdvisorClient\n\n   service_endpoint = os.getenv(\"METRICS_ADVISOR_ENDPOINT\"\
    )\n   subscription_key = os.getenv(\"METRICS_ADVISOR_SUBSCRIPTION_KEY\")\n   api_key\
    \ = os.getenv(\"METRICS_ADVISOR_API_KEY\")\n   feedback_id = os.getenv(\"METRICS_ADVISOR_FEEDBACK_ID\"\
    )\n\n   client = MetricsAdvisorClient(service_endpoint,\n                    \
    \             MetricsAdvisorKeyCredential(subscription_key, api_key))\n\n   result\
    \ = await client.get_feedback(feedback_id=feedback_id)\n   print(\"Type: {}; Id:\
    \ {}\".format(result.feedback_type, result.id))\n\n   ````\n"
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.get_feedback
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: get_feedback(feedback_id, **kwargs)
  namewithoutparameters: get_feedback
  summary: Get a metric feedback by its id.
  syntax:
    content: get_feedback(feedback_id, **kwargs)
    parameters:
    - description: the id of the feedback.
      id: feedback_id
      isRequired: true
      type:
      - str
    return:
      description: The feedback object
      type:
      - azure.ai.metricsadvisor.models.AnomalyFeedback
      - azure.ai.metricsadvisor.models.ChangePointFeedback
      - azure.ai.metricsadvisor.models.CommentFeedback
      - azure.ai.metricsadvisor.models.PeriodFeedback
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.get_feedback
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  example:
  - "Query anomaly detection results.<!--[!code-python[Main](les\\async_samples\\\
    sample_anomaly_alert_configuration_async.py )]-->\n\n<!-- literal_block {\"ids\"\
    : [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\31\\\\azure-ai-metricsadvisor-1.0.0b1\\\\\
    samples\\\\async_samples\\\\sample_anomaly_alert_configuration_async.py\", \"\
    xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   import datetime\n   from azure.ai.metricsadvisor\
    \ import MetricsAdvisorKeyCredential\n   from azure.ai.metricsadvisor.aio import\
    \ MetricsAdvisorClient\n\n   service_endpoint = os.getenv(\"METRICS_ADVISOR_ENDPOINT\"\
    )\n   subscription_key = os.getenv(\"METRICS_ADVISOR_SUBSCRIPTION_KEY\")\n   api_key\
    \ = os.getenv(\"METRICS_ADVISOR_API_KEY\")\n\n   client = MetricsAdvisorClient(service_endpoint,\n\
    \                                 MetricsAdvisorKeyCredential(subscription_key,\
    \ api_key))\n\n   async with client:\n       results = client.list_alerts_for_alert_configuration(\n\
    \           alert_configuration_id=alert_config_id,\n           start_time=datetime.datetime(2020,\
    \ 1, 1),\n           end_time=datetime.datetime(2020, 9, 9),\n           time_mode=\"\
    AnomalyTime\",\n       )\n       tolist = []\n       async for result in results:\n\
    \           tolist.append(result)\n           print(\"Alert id: {}\".format(result.id))\n\
    \           print(\"Create on: {}\".format(result.created_on))\n       return\
    \ tolist\n\n\n   ````\n"
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_alerts_for_alert_configuration
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_alerts_for_alert_configuration(alert_configuration_id, start_time, end_time,
    time_mode, **kwargs)
  namewithoutparameters: list_alerts_for_alert_configuration
  summary: Query alerts under anomaly alert configuration.
  syntax:
    content: list_alerts_for_alert_configuration(alert_configuration_id, start_time,
      end_time, time_mode, **kwargs)
    parameters:
    - description: anomaly alert configuration unique id.
      id: alert_configuration_id
      isRequired: true
      type:
      - str
    - description: start time.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: end time.
      id: end_time
      isRequired: true
      type:
      - datetime.datetime
    - description: 'time mode. Possible values include: "AnomalyTime", "CreatedTime",

        "ModifiedTime".'
      id: time_mode
      isRequired: true
      type:
      - str
      - azure.ai.metricsadvisor.models.TimeMode
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    return:
      description: Alerts under anomaly alert configuration.
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Alert]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_alerts_for_alert_configuration
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  example:
  - "Query anomalies using alert id.<!--[!code-python[Main](les\\async_samples\\sample_anomaly_alert_configuration_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\31\\\\azure-ai-metricsadvisor-1.0.0b1\\\\samples\\\\async_samples\\\\sample_anomaly_alert_configuration_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.ai.metricsadvisor\
    \ import MetricsAdvisorKeyCredential\n   from azure.ai.metricsadvisor.aio import\
    \ MetricsAdvisorClient\n\n   service_endpoint = os.getenv(\"METRICS_ADVISOR_ENDPOINT\"\
    )\n   subscription_key = os.getenv(\"METRICS_ADVISOR_SUBSCRIPTION_KEY\")\n   api_key\
    \ = os.getenv(\"METRICS_ADVISOR_API_KEY\")\n\n   client = MetricsAdvisorClient(service_endpoint,\n\
    \                                 MetricsAdvisorKeyCredential(subscription_key,\
    \ api_key))\n\n   async with client:\n       results = client.list_anomalies_for_alert(\n\
    \           alert_configuration_id=alert_config_id,\n           alert_id=alert_id,\n\
    \       )\n       async for result in results:\n           print(\"Create on:\
    \ {}\".format(result.created_on))\n           print(\"Severity: {}\".format(result.severity))\n\
    \           print(\"Status: {}\".format(result.status))\n\n\n   ````\n"
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_alert
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_anomalies_for_alert(alert_configuration_id, alert_id, **kwargs)
  namewithoutparameters: list_anomalies_for_alert
  summary: Query anomalies under a specific alert.
  syntax:
    content: list_anomalies_for_alert(alert_configuration_id, alert_id, **kwargs)
    parameters:
    - description: anomaly alert configuration unique id.
      id: alert_configuration_id
      isRequired: true
      type:
      - str
    - description: alert id.
      id: alert_id
      isRequired: true
      type:
      - str
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    return:
      description: Anomalies under a specific alert.
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Anomaly]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_alert
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_detection_configuration
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_anomalies_for_detection_configuration(detection_configuration_id, start_time,
    end_time, **kwargs)
  namewithoutparameters: list_anomalies_for_detection_configuration
  summary: Query anomalies under anomaly detection configuration.
  syntax:
    content: list_anomalies_for_detection_configuration(detection_configuration_id,
      start_time, end_time, **kwargs)
    parameters:
    - description: anomaly detection configuration unique id.
      id: detection_configuration_id
      isRequired: true
      type:
      - str
    - description: start time filter under chosen time mode.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: end time filter under chosen time mode.
      id: end_time
      isRequired: true
      type:
      - datetime.datetime
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    - description: ''
      id: filter
      isRequired: true
      type:
      - azure.ai.metricsadvisor.models.DetectionAnomalyFilterCondition
    return:
      description: Anomalies under anomaly detection configuration.
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Anomaly]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_detection_configuration
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_dimension_values_for_detection_configuration
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_dimension_values_for_detection_configuration(detection_configuration_id,
    dimension_name, start_time, end_time, **kwargs)
  namewithoutparameters: list_dimension_values_for_detection_configuration
  summary: Query dimension values of anomalies.
  syntax:
    content: list_dimension_values_for_detection_configuration(detection_configuration_id,
      dimension_name, start_time, end_time, **kwargs)
    parameters:
    - description: anomaly detection configuration unique id.
      id: detection_configuration_id
      isRequired: true
      type:
      - str
    - description: dimension to query.
      id: dimension_name
      isRequired: true
      type:
      - str
    - description: start time filter under chosen time mode.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: end time filter under chosen time mode.
      id: end_time
      isRequired: true
      type:
      - datetime.datetime
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    - description: The dimension name to query.
      id: dimension_name
      isRequired: true
      type:
      - str
    return:
      description: Dimension values of anomalies.
      type:
      - azure.core.async_paging.AsyncItemPaged[str]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_dimension_values_for_detection_configuration
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  example:
  - "List feedback on the given metric.<!--[!code-python[Main](les\\async_samples\\\
    sample_feedback_async.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\31\\\\azure-ai-metricsadvisor-1.0.0b1\\\\samples\\\
    \\async_samples\\\\sample_feedback_async.py\", \"xml:space\": \"preserve\", \"\
    language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
    : 1}} -->\n\n````python\n\n   from azure.ai.metricsadvisor import MetricsAdvisorKeyCredential,\
    \ MetricsAdvisorClient\n\n   service_endpoint = os.getenv(\"METRICS_ADVISOR_ENDPOINT\"\
    )\n   subscription_key = os.getenv(\"METRICS_ADVISOR_SUBSCRIPTION_KEY\")\n   api_key\
    \ = os.getenv(\"METRICS_ADVISOR_API_KEY\")\n   metric_id = os.getenv(\"METRICS_ADVISOR_METRIC_ID\"\
    )\n\n   client = MetricsAdvisorClient(service_endpoint,\n                    \
    \             MetricsAdvisorKeyCredential(subscription_key, api_key))\n\n   results\
    \ = client.list_feedbacks(metric_id=metric_id)\n   async for result in results:\n\
    \       print(\"Type: {}; Id: {}\".format(result.feedback_type, result.id))\n\n\
    \   ````\n"
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_feedbacks
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_feedbacks(metric_id, **kwargs)
  namewithoutparameters: list_feedbacks
  summary: List feedback on the given metric.
  syntax:
    content: list_feedbacks(metric_id, **kwargs)
    parameters:
    - description: filter feedbacks by metric id
      id: metric_id
      isRequired: true
      type:
      - str
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    - description: filter specfic dimension name and values
      id: dimension_key
      isRequired: true
      type:
      - dict[str, str]
    - description: 'filter feedbacks by type. Possible values include: "Anomaly",

        "ChangePoint", "Period", "Comment".'
      id: feedback_type
      isRequired: true
      type:
      - str
      - azure.ai.metricsadvisor.models.FeedbackType
    - description: start time filter under chosen time mode.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: end time filter under chosen time mode.
      id: end_time
      isRequired: true
      type:
      - datetime.datetime
    - description: 'time mode to filter feedback. Possible values include: "MetricTimestamp",

        "FeedbackCreatedTime".'
      id: time_mode
      isRequired: true
      type:
      - str
      - azure.ai.metricsadvisor.models.FeedbackQueryTimeMode
    return:
      description: Pageable list of MetricFeedback
      type:
      - azure.core.async_paging.AsyncItemPaged[Union[AnomalyFeedback, ChangePointFeedback,
        CommentFeedback, PeriodFeedback]]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_feedbacks
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incident_root_causes
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_incident_root_causes(detection_configuration_id, incident_id, **kwargs)
  namewithoutparameters: list_incident_root_causes
  summary: Query root cause for incident.
  syntax:
    content: list_incident_root_causes(detection_configuration_id, incident_id, **kwargs)
    parameters:
    - description: anomaly detection configuration unique id.
      id: detection_configuration_id
      isRequired: true
      type:
      - str
    - description: incident id.
      id: incident_id
      isRequired: true
      type:
      - str
    return:
      description: Pageable of root cause for incident
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.IncidentRootCause]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incident_root_causes
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_alert
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_incidents_for_alert(alert_configuration_id, alert_id, **kwargs)
  namewithoutparameters: list_incidents_for_alert
  summary: Query incidents under a specific alert.
  syntax:
    content: list_incidents_for_alert(alert_configuration_id, alert_id, **kwargs)
    parameters:
    - description: anomaly alerting configuration unique id.
      id: alert_configuration_id
      isRequired: true
      type:
      - str
    - description: alert id.
      id: alert_id
      isRequired: true
      type:
      - str
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    return:
      description: Incidents under a specific alert.
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Incident]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_alert
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_detection_configuration
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_incidents_for_detection_configuration(detection_configuration_id, start_time,
    end_time, **kwargs)
  namewithoutparameters: list_incidents_for_detection_configuration
  summary: Query incidents under a specific alert.
  syntax:
    content: list_incidents_for_detection_configuration(detection_configuration_id,
      start_time, end_time, **kwargs)
    parameters:
    - description: anomaly detection configuration unique id.
      id: detection_configuration_id
      isRequired: true
      type:
      - str
    - description: start time filter under chosen time mode.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: end time filter under chosen time mode.
      id: end_time
      isRequired: true
      type:
      - datetime.datetime
    - description: ''
      id: filter
      isRequired: true
      type:
      - azure.ai.metricsadvisor.models.DetectionIncidentFilterCondition
    return:
      description: Incidents under a specific alert.
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Incident]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_detection_configuration
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_dimension_values
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_metric_dimension_values(metric_id, dimension_name, **kwargs)
  namewithoutparameters: list_metric_dimension_values
  summary: List dimension from certain metric.
  syntax:
    content: list_metric_dimension_values(metric_id, dimension_name, **kwargs)
    parameters:
    - description: metric unique id.
      id: metric_id
      isRequired: true
      type:
      - str
    - description: the dimension name
      id: dimension_name
      isRequired: true
      type:
      - str
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    - description: dimension value to be filtered.
      id: dimension_value_filter
      isRequired: true
      type:
      - str
    return:
      description: Dimension from certain metric.
      type:
      - azure.core.async_paging.AsyncItemPaged[str]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_dimension_values
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enriched_series_data
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_metric_enriched_series_data(detection_configuration_id, series, start_time,
    end_time, **kwargs)
  namewithoutparameters: list_metric_enriched_series_data
  summary: Query series enriched by anomaly detection.
  syntax:
    content: list_metric_enriched_series_data(detection_configuration_id, series,
      start_time, end_time, **kwargs)
    parameters:
    - description: anomaly alerting configuration unique id.
      id: detection_configuration_id
      isRequired: true
      type:
      - str
    - description: List of dimensions specified for series.
      id: series
      isRequired: true
      type:
      - azure.ai.metricsadvisor.models.SeriesIdentity
      - list[dict[str, str]]
    - description: start time filter under chosen time mode.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: end time filter under chosen time mode.
      id: end_time
      isRequired: true
      type:
      - datetime.datetime
    return:
      description: Pageable of SeriesResult
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.SeriesResult]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enriched_series_data
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enrichment_status
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_metric_enrichment_status(metric_id, start_time, end_time, **kwargs)
  namewithoutparameters: list_metric_enrichment_status
  summary: Query anomaly detection status.
  syntax:
    content: list_metric_enrichment_status(metric_id, start_time, end_time, **kwargs)
    parameters:
    - description: filter feedbacks by metric id.
      id: metric_id
      isRequired: true
      type:
      - str
    - description: start time filter under chosen time mode.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: end time filter under chosen time mode.
      id: end_time
      isRequired: true
      type:
      - datetime.datetime
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    return:
      description: Anomaly detection status.
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.EnrichmentStatus]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enrichment_status
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_series_definitions
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_metric_series_definitions(metric_id, active_since, **kwargs)
  namewithoutparameters: list_metric_series_definitions
  summary: List series (dimension combinations) from metric.
  syntax:
    content: list_metric_series_definitions(metric_id, active_since, **kwargs)
    parameters:
    - description: metric unique id.
      id: metric_id
      isRequired: true
      type:
      - str
    - description: 'Required. query series ingested after this time, the format should
        be

        yyyy-MM-ddTHH:mm:ssZ.'
      id: active_since
      isRequired: true
      type:
      - datetime.datetime
    - description: ''
      id: skip
      isRequired: true
      type:
      - int
    - description: 'query series ingested after this time, the format should be

        yyyy-MM-ddTHH:mm:ssZ.'
      id: active_since
      isRequired: true
      type:
      - datetime.datetime
    - description: filter specfic dimension name and values.
      id: dimension_filter
      isRequired: true
      type:
      - dict[str, list[str]]
    return:
      description: Series (dimension combinations) from metric.
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.MetricSeriesDefinition]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_series_definitions
- class: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metrics_series_data
  langs:
  - python
  module: azure.ai.metricsadvisor.aio
  name: list_metrics_series_data(metric_id, start_time, end_time, series_to_filter,
    **kwargs)
  namewithoutparameters: list_metrics_series_data
  summary: Get time series data from metric.
  syntax:
    content: list_metrics_series_data(metric_id, start_time, end_time, series_to_filter,
      **kwargs)
    parameters:
    - description: metric unique id.
      id: metric_id
      isRequired: true
      type:
      - str
    - description: start time filter under chosen time mode.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: end time filter under chosen time mode.
      id: end_time
      isRequired: true
      type:
      - datetime.datetime
    - description: query specific series.
      id: series_to_filter
      isRequired: true
      type:
      - list[dict[str, str]]
    return:
      description: Time series data from metric.
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.MetricSeriesData]
  type: method
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metrics_series_data
references:
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.add_feedback
  isExternal: false
  name: add_feedback(feedback, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.add_feedback
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.close
  isExternal: false
  name: close() -> None
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.close
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.get_feedback
  isExternal: false
  name: get_feedback(feedback_id, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.get_feedback
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_alerts_for_alert_configuration
  isExternal: false
  name: list_alerts_for_alert_configuration(alert_configuration_id, start_time, end_time,
    time_mode, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_alerts_for_alert_configuration
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_alert
  isExternal: false
  name: list_anomalies_for_alert(alert_configuration_id, alert_id, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_alert
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_detection_configuration
  isExternal: false
  name: list_anomalies_for_detection_configuration(detection_configuration_id, start_time,
    end_time, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_anomalies_for_detection_configuration
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_dimension_values_for_detection_configuration
  isExternal: false
  name: list_dimension_values_for_detection_configuration(detection_configuration_id,
    dimension_name, start_time, end_time, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_dimension_values_for_detection_configuration
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_feedbacks
  isExternal: false
  name: list_feedbacks(metric_id, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_feedbacks
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incident_root_causes
  isExternal: false
  name: list_incident_root_causes(detection_configuration_id, incident_id, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incident_root_causes
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_alert
  isExternal: false
  name: list_incidents_for_alert(alert_configuration_id, alert_id, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_alert
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_detection_configuration
  isExternal: false
  name: list_incidents_for_detection_configuration(detection_configuration_id, start_time,
    end_time, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_incidents_for_detection_configuration
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_dimension_values
  isExternal: false
  name: list_metric_dimension_values(metric_id, dimension_name, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_dimension_values
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enriched_series_data
  isExternal: false
  name: list_metric_enriched_series_data(detection_configuration_id, series, start_time,
    end_time, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enriched_series_data
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enrichment_status
  isExternal: false
  name: list_metric_enrichment_status(metric_id, start_time, end_time, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_enrichment_status
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_series_definitions
  isExternal: false
  name: list_metric_series_definitions(metric_id, active_since, **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metric_series_definitions
- fullName: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metrics_series_data
  isExternal: false
  name: list_metrics_series_data(metric_id, start_time, end_time, series_to_filter,
    **kwargs)
  parent: azure.ai.metricsadvisor.aio.MetricsAdvisorClient
  uid: azure.ai.metricsadvisor.aio.MetricsAdvisorClient.list_metrics_series_data
- fullName: list[HTTPPolicy]
  name: list[HTTPPolicy]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: HTTPPolicy
    name: HTTPPolicy
    uid: HTTPPolicy
  - fullName: ']'
    name: ']'
  uid: list[HTTPPolicy]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Alert]
  name: AsyncItemPaged[Alert]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.ai.metricsadvisor.models.Alert
    name: Alert
    uid: azure.ai.metricsadvisor.models.Alert
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Alert]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Anomaly]
  name: AsyncItemPaged[Anomaly]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.ai.metricsadvisor.models.Anomaly
    name: Anomaly
    uid: azure.ai.metricsadvisor.models.Anomaly
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Anomaly]
- fullName: azure.core.async_paging.AsyncItemPaged[str]
  name: AsyncItemPaged[str]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[str]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: azure.core.async_paging.AsyncItemPaged[Union[AnomalyFeedback, ChangePointFeedback,
    CommentFeedback, PeriodFeedback]]
  name: AsyncItemPaged[Union[AnomalyFeedback, ChangePointFeedback, CommentFeedback,
    PeriodFeedback]]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: Union
    name: Union
    uid: Union
  - fullName: '['
    name: '['
  - fullName: AnomalyFeedback
    name: AnomalyFeedback
    uid: AnomalyFeedback
  - fullName: ', '
    name: ', '
  - fullName: ChangePointFeedback
    name: ChangePointFeedback
    uid: ChangePointFeedback
  - fullName: ', '
    name: ', '
  - fullName: CommentFeedback
    name: CommentFeedback
    uid: CommentFeedback
  - fullName: ', '
    name: ', '
  - fullName: PeriodFeedback
    name: PeriodFeedback
    uid: PeriodFeedback
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[Union[AnomalyFeedback, ChangePointFeedback,
    CommentFeedback, PeriodFeedback]]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.IncidentRootCause]
  name: AsyncItemPaged[IncidentRootCause]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.ai.metricsadvisor.models.IncidentRootCause
    name: IncidentRootCause
    uid: azure.ai.metricsadvisor.models.IncidentRootCause
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.IncidentRootCause]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Incident]
  name: AsyncItemPaged[Incident]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.ai.metricsadvisor.models.Incident
    name: Incident
    uid: azure.ai.metricsadvisor.models.Incident
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.Incident]
- fullName: list[dict[str, str]]
  name: list[dict[str, str]]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: list[dict[str, str]]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.SeriesResult]
  name: AsyncItemPaged[SeriesResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.ai.metricsadvisor.models.SeriesResult
    name: SeriesResult
    uid: azure.ai.metricsadvisor.models.SeriesResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.SeriesResult]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.EnrichmentStatus]
  name: AsyncItemPaged[EnrichmentStatus]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.ai.metricsadvisor.models.EnrichmentStatus
    name: EnrichmentStatus
    uid: azure.ai.metricsadvisor.models.EnrichmentStatus
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.EnrichmentStatus]
- fullName: dict[str, list[str]]
  name: dict[str, list[str]]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: dict[str, list[str]]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.MetricSeriesDefinition]
  name: AsyncItemPaged[MetricSeriesDefinition]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.ai.metricsadvisor.models.MetricSeriesDefinition
    name: MetricSeriesDefinition
    uid: azure.ai.metricsadvisor.models.MetricSeriesDefinition
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.MetricSeriesDefinition]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.MetricSeriesData]
  name: AsyncItemPaged[MetricSeriesData]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.ai.metricsadvisor.models.MetricSeriesData
    name: MetricSeriesData
    uid: azure.ai.metricsadvisor.models.MetricSeriesData
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.ai.metricsadvisor.models.MetricSeriesData]
