### YamlMime:PythonClass
uid: azure.servicebus.BatchMessage
name: BatchMessage
fullName: azure.servicebus.BatchMessage
module: azure.servicebus
inheritances:
- builtins.object
summary: 'A batch of messages.


  Sending messages in a batch is more performant than sending individual message.

  BatchMessage helps you create the maximum allowed size batch of *Message* to improve
  sending performance.


  Use the *add* method to add messages until the maximum batch size limit in bytes
  has been reached -

  at which point a *ValueError* will be raised.


  **Please use the create_batch method of ServiceBusSender

  to create a BatchMessage object instead of instantiating a BatchMessage object directly.**'
constructor:
  syntax: BatchMessage(max_size_in_bytes=None)
  parameters:
  - name: max_size_in_bytes
    description: The maximum size of bytes data that a BatchMessage object can hold.
    types:
    - <xref:int>
variables:
- description: The maximum size of bytes data that a BatchMessage object can hold.
  name: max_size_in_bytes
  types:
  - int
- description: Internal AMQP BatchMessage object.
  name: message
  types:
  - uamqp.BatchMessage
methods:
- uid: azure.servicebus.BatchMessage.add
  name: add
  summary: 'Try to add a single Message to the batch.


    The total size of an added message is the sum of its body, properties, etc.

    If this added size results in the batch exceeding the maximum batch size, a *ValueError*
    will

    be raised.'
  signature: add(message)
  parameters:
  - name: message
    description: The Message to be added to the batch.
    isRequired: true
    types:
    - <xref:azure.servicebus.Message>
  return:
    types:
    - <xref:None>
attributes:
- uid: azure.servicebus.BatchMessage.size_in_bytes
  name: size_in_bytes
  summary: The combined size of the events in the batch, in bytes.
  return:
    types:
    - <xref:int>
