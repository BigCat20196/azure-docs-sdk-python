### YamlMime:PythonClass
uid: azure.servicebus.aio.ServiceBusSession
name: ServiceBusSession
fullName: azure.servicebus.aio.ServiceBusSession
module: azure.servicebus.aio
inheritances:
- azure.servicebus._servicebus_session.BaseSession
summary: 'The ServiceBusSession is used for manage session states and lock renewal.


  **Please use the instance variable `session` on the ServiceBusReceiver to get the
  corresponding ServiceBusSession

  object linked with the receiver instead of instantiating a ServiceBusSession object
  directly.**'
constructor:
  syntax: ServiceBusSession(session_id, receiver, encoding='UTF-8')
examples:
- "Get session from a receiver<!--[!code-python[Main](les\\async_samples\\sample_code_servicebus_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\8\\\\azure-servicebus-7.0.0b3\\\
  \\samples\\\\async_samples\\\\sample_code_servicebus_async.py\", \"xml:space\":\
  \ \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
  : {\"linenostart\": 1}} -->\n\n````python\n\n       async with servicebus_client.get_queue_session_receiver(queue_name=queue_name,\
  \ session_id=session_id) as receiver:\n           session = receiver.session\n\n\
  \   ````\n"
methods:
- uid: azure.servicebus.aio.ServiceBusSession.get_session_state
  name: get_session_state
  summary: 'Get the session state.


    Returns None if no state has been set.'
  signature: get_session_state()
  return:
    types:
    - <xref:str>
  examples:
  - "Get the session state<!--[!code-python[Main](les\\async_samples\\sample_code_servicebus_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\8\\\\azure-servicebus-7.0.0b3\\\\samples\\\\async_samples\\\\sample_code_servicebus_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n       async with\
    \ servicebus_client.get_queue_session_receiver(queue_name=queue_name, session_id=session_id)\
    \ as receiver:\n           session = receiver.session\n           session_state\
    \ = await session.get_session_state()\n\n   ````\n"
- uid: azure.servicebus.aio.ServiceBusSession.renew_lock
  name: renew_lock
  summary: 'Renew the session lock.


    This operation must be performed periodically in order to retain a lock on the

    session to continue message processing.

    Once the lock is lost the connection will be closed. This operation can

    also be performed as a threaded background task by registering the session

    with an *azure.servicebus.aio.AutoLockRenew* instance.'
  signature: renew_lock()
  examples:
  - "Renew the session lock before it expires<!--[!code-python[Main](les\\async_samples\\\
    sample_code_servicebus_async.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\8\\\\azure-servicebus-7.0.0b3\\\\samples\\\\async_samples\\\
    \\sample_code_servicebus_async.py\", \"xml:space\": \"preserve\", \"language\"\
    : \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\
    \n````python\n\n       async with servicebus_client.get_queue_session_receiver(queue_name=queue_name,\
    \ session_id=session_id) as receiver:\n           session = receiver.session\n\
    \           session_state = await session.renew_lock()\n\n   ````\n"
- uid: azure.servicebus.aio.ServiceBusSession.set_session_state
  name: set_session_state
  summary: Set the session state.
  signature: set_session_state(state)
  parameters:
  - name: state
    description: The state value.
    isRequired: true
    types:
    - <xref:str>, <xref:bytes>
    - <xref:bytearray>
  examples:
  - "Set the session state<!--[!code-python[Main](les\\async_samples\\sample_code_servicebus_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\8\\\\azure-servicebus-7.0.0b3\\\\samples\\\\async_samples\\\\sample_code_servicebus_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n       async with\
    \ servicebus_client.get_queue_session_receiver(queue_name=queue_name, session_id=session_id)\
    \ as receiver:\n           session = receiver.session\n           session_state\
    \ = await session.set_session_state(\"START\")\n\n   ````\n"
