### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.management.ServiceBusAdministrationClient.close
  - azure.servicebus.management.ServiceBusAdministrationClient.create_queue
  - azure.servicebus.management.ServiceBusAdministrationClient.create_rule
  - azure.servicebus.management.ServiceBusAdministrationClient.create_subscription
  - azure.servicebus.management.ServiceBusAdministrationClient.create_topic
  - azure.servicebus.management.ServiceBusAdministrationClient.delete_queue
  - azure.servicebus.management.ServiceBusAdministrationClient.delete_rule
  - azure.servicebus.management.ServiceBusAdministrationClient.delete_subscription
  - azure.servicebus.management.ServiceBusAdministrationClient.delete_topic
  - azure.servicebus.management.ServiceBusAdministrationClient.from_connection_string
  - azure.servicebus.management.ServiceBusAdministrationClient.get_namespace_properties
  - azure.servicebus.management.ServiceBusAdministrationClient.get_queue
  - azure.servicebus.management.ServiceBusAdministrationClient.get_queue_runtime_properties
  - azure.servicebus.management.ServiceBusAdministrationClient.get_rule
  - azure.servicebus.management.ServiceBusAdministrationClient.get_subscription
  - azure.servicebus.management.ServiceBusAdministrationClient.get_subscription_runtime_properties
  - azure.servicebus.management.ServiceBusAdministrationClient.get_topic
  - azure.servicebus.management.ServiceBusAdministrationClient.get_topic_runtime_properties
  - azure.servicebus.management.ServiceBusAdministrationClient.list_queues
  - azure.servicebus.management.ServiceBusAdministrationClient.list_queues_runtime_properties
  - azure.servicebus.management.ServiceBusAdministrationClient.list_rules
  - azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions
  - azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions_runtime_properties
  - azure.servicebus.management.ServiceBusAdministrationClient.list_topics
  - azure.servicebus.management.ServiceBusAdministrationClient.list_topics_runtime_properties
  - azure.servicebus.management.ServiceBusAdministrationClient.update_queue
  - azure.servicebus.management.ServiceBusAdministrationClient.update_rule
  - azure.servicebus.management.ServiceBusAdministrationClient.update_subscription
  - azure.servicebus.management.ServiceBusAdministrationClient.update_topic
  class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.servicebus.management
  name: ServiceBusAdministrationClient
  summary: Use this client to create, update, list, and delete resources of a ServiceBus
    namespace.
  syntax:
    content: ServiceBusAdministrationClient(fully_qualified_namespace, credential,
      **kwargs)
    parameters:
    - description: The fully qualified host name for the Service Bus namespace.
      id: fully_qualified_namespace
      type:
      - str
    - description: To authenticate to manage the entities of the ServiceBus namespace.
      id: credential
      type:
      - TokenCredential
  type: class
  uid: azure.servicebus.management.ServiceBusAdministrationClient
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.close
  langs:
  - python
  module: azure.servicebus.management
  name: close()
  namewithoutparameters: close
  syntax:
    content: close()
    parameters: []
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.close
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.create_queue
  langs:
  - python
  module: azure.servicebus.management
  name: create_queue(name, **kwargs)
  namewithoutparameters: create_queue
  summary: Create a queue.
  syntax:
    content: create_queue(name, **kwargs)
    parameters:
    - description: Name of the queue.
      id: name
      isRequired: true
      type:
      - str
    - description: Authorization rules for resource.
      id: authorization_rules
      isRequired: true
    - description: 'ISO 8601 timeSpan idle interval after which the queue is

        automatically deleted. The minimum duration is 5 minutes.'
      id: auto_delete_on_idle
      isRequired: true
    - description: 'A value that indicates whether this queue has dead

        letter support when a message expires.'
      id: dead_lettering_on_message_expiration
      isRequired: true
    - description: 'ISO 8601 default message timespan to live value. This is

        the duration after which the message expires, starting from when the message
        is sent to Service

        Bus. This is the default value used when TimeToLive is not set on a message
        itself.'
      id: default_message_time_to_live
      isRequired: true
    - description: 'ISO 8601 timeSpan structure that defines the

        duration of the duplicate detection history. The default value is 10 minutes.'
      id: duplicate_detection_history_time_window
      isRequired: true
    - description: 'Value that indicates whether server-side batched operations

        are enabled.'
      id: enable_batched_operations
      isRequired: true
    - description: 'A value that indicates whether Express Entities are enabled. An
        express

        queue holds a message in memory temporarily before writing it to persistent
        storage.'
      id: enable_express
      isRequired: true
    - description: 'A value that indicates whether the queue is to be partitioned

        across multiple message brokers.'
      id: enable_partitioning
      isRequired: true
    - description: 'ISO 8601 timespan duration of a peek-lock; that is, the amount
        of time

        that the message is locked for other receivers. The maximum value for LockDuration
        is 5

        minutes; the default value is 1 minute.'
      id: lock_duration
      isRequired: true
    - description: 'The maximum delivery count. A message is automatically deadlettered

        after this number of deliveries. Default value is 10.'
      id: max_delivery_count
      isRequired: true
    - description: 'The maximum size of the queue in megabytes, which is the size
        of

        memory allocated for the queue.'
      id: max_size_in_megabytes
      isRequired: true
    - description: 'A value indicating if this queue requires duplicate

        detection.'
      id: requires_duplicate_detection
      isRequired: true
    - description: 'A value that indicates whether the queue supports the concept
        of

        sessions.'
      id: requires_session
      isRequired: true
    - description: 'The name of the recipient entity to which all the messages sent
        to the queue

        are forwarded to.'
      id: forward_to
      isRequired: true
    - description: 'Custom metdata that user can associate with the description. Max
        length

        is 1024 chars.'
      id: user_metadata
      isRequired: true
    - description: 'The name of the recipient entity to which all the

        dead-lettered messages of this subscription are forwarded to.'
      id: forward_dead_lettered_messages_to
      isRequired: true
    return:
      type:
      - azure.servicebus.management.QueueProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.create_queue
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.create_rule
  langs:
  - python
  module: azure.servicebus.management
  name: create_rule(topic_name, subscription_name, name, **kwargs)
  namewithoutparameters: create_rule
  summary: Create a rule for a topic subscription.
  syntax:
    content: create_rule(topic_name, subscription_name, name, **kwargs)
    parameters:
    - description: 'The topic that will own the

        to-be-created subscription rule.'
      id: topic_name
      isRequired: true
      type:
      - str
    - description: 'The subscription that

        will own the to-be-created rule.'
      id: subscription_name
      isRequired: true
      type:
      - str
    - description: Name of the rule.
      id: name
      isRequired: true
      type:
      - str
    - description: The filter of the rule.
      id: filter
      isRequired: true
    - description: The action of the rule.
      id: action
      isRequired: true
    return:
      type:
      - azure.servicebus.management.RuleProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.create_rule
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.create_subscription
  langs:
  - python
  module: azure.servicebus.management
  name: create_subscription(topic_name, name, **kwargs)
  namewithoutparameters: create_subscription
  summary: Create a topic subscription.
  syntax:
    content: create_subscription(topic_name, name, **kwargs)
    parameters:
    - description: 'The topic that will own the

        to-be-created subscription.'
      id: topic_name
      isRequired: true
      type:
      - str
    - description: Name of the subscription.
      id: name
      isRequired: true
      type:
      - str
    - description: 'ISO 8601 timespan duration of a peek-lock; that is, the amount
        of time

        that the message is locked for other receivers. The maximum value for LockDuration
        is 5

        minutes; the default value is 1 minute.'
      id: lock_duration
      isRequired: true
    - description: 'A value that indicates whether the queue supports the concept
        of

        sessions.'
      id: requires_session
      isRequired: true
    - description: 'ISO 8601 default message timespan to live value. This is

        the duration after which the message expires, starting from when the message
        is sent to Service

        Bus. This is the default value used when TimeToLive is not set on a message
        itself.'
      id: default_message_time_to_live
      isRequired: true
    - description: 'A value that indicates whether this subscription

        has dead letter support when a message expires.'
      id: dead_lettering_on_message_expiration
      isRequired: true
    - description: 'A value that indicates whether this

        subscription has dead letter support when a message expires.'
      id: dead_lettering_on_filter_evaluation_exceptions
      isRequired: true
    - description: 'The maximum delivery count. A message is automatically deadlettered

        after this number of deliveries. Default value is 10.'
      id: max_delivery_count
      isRequired: true
    - description: 'Value that indicates whether server-side batched operations

        are enabled.'
      id: enable_batched_operations
      isRequired: true
    - description: 'The name of the recipient entity to which all the messages sent
        to the

        subscription are forwarded to.'
      id: forward_to
      isRequired: true
    - description: 'Metadata associated with the subscription. Maximum number of characters

        is 1024.'
      id: user_metadata
      isRequired: true
    - description: 'The name of the recipient entity to which all the

        messages sent to the subscription are forwarded to.'
      id: forward_dead_lettered_messages_to
      isRequired: true
    - description: 'ISO 8601 timeSpan idle interval after which the subscription is

        automatically deleted. The minimum duration is 5 minutes.'
      id: auto_delete_on_idle
      isRequired: true
    return:
      type:
      - azure.servicebus.management.SubscriptionProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.create_subscription
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.create_topic
  langs:
  - python
  module: azure.servicebus.management
  name: create_topic(name, **kwargs)
  namewithoutparameters: create_topic
  summary: Create a topic.
  syntax:
    content: create_topic(name, **kwargs)
    parameters:
    - description: Name of the topic.
      id: name
      isRequired: true
      type:
      - str
    - description: 'ISO 8601 default message timespan to live value. This is

        the duration after which the message expires, starting from when the message
        is sent to Service

        Bus. This is the default value used when TimeToLive is not set on a message
        itself.'
      id: default_message_time_to_live
      isRequired: true
    - description: 'The maximum size of the topic in megabytes, which is the size
        of

        memory allocated for the topic.'
      id: max_size_in_megabytes
      isRequired: true
    - description: 'A value indicating if this topic requires duplicate

        detection.'
      id: requires_duplicate_detection
      isRequired: true
    - description: 'ISO 8601 timeSpan structure that defines the

        duration of the duplicate detection history. The default value is 10 minutes.'
      id: duplicate_detection_history_time_window
      isRequired: true
    - description: 'Value that indicates whether server-side batched operations

        are enabled.'
      id: enable_batched_operations
      isRequired: true
    - description: The size of the topic, in bytes.
      id: size_in_bytes
      isRequired: true
    - description: Filter messages before publishing.
      id: filtering_messages_before_publishing
      isRequired: true
    - description: Authorization rules for resource.
      id: authorization_rules
      isRequired: true
    - description: A value that indicates whether the topic supports ordering.
      id: support_ordering
      isRequired: true
    - description: 'ISO 8601 timeSpan idle interval after which the topic is

        automatically deleted. The minimum duration is 5 minutes.'
      id: auto_delete_on_idle
      isRequired: true
    - description: 'A value that indicates whether the topic is to be partitioned

        across multiple message brokers.'
      id: enable_partitioning
      isRequired: true
    - description: 'A value that indicates whether Express Entities are enabled. An
        express

        queue holds a message in memory temporarily before writing it to persistent
        storage.'
      id: enable_express
      isRequired: true
    - description: Metadata associated with the topic.
      id: user_metadata
      isRequired: true
    return:
      type:
      - azure.servicebus.management.TopicProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.create_topic
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.delete_queue
  langs:
  - python
  module: azure.servicebus.management
  name: delete_queue(queue_name, **kwargs)
  namewithoutparameters: delete_queue
  summary: Delete a queue.
  syntax:
    content: delete_queue(queue_name, **kwargs)
    parameters:
    - description: 'The name of the queue or

        a *QueueProperties* with name.'
      id: queue
      isRequired: true
      type:
      - str
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.delete_queue
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.delete_rule
  langs:
  - python
  module: azure.servicebus.management
  name: delete_rule(topic_name, subscription_name, rule_name, **kwargs)
  namewithoutparameters: delete_rule
  summary: Delete a topic subscription rule.
  syntax:
    content: delete_rule(topic_name, subscription_name, rule_name, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: 'The subscription that

        owns the topic.'
      id: subscription_name
      isRequired: true
      type:
      - str
    - description: The to-be-deleted rule.
      id: rule_name
      isRequired: true
      type:
      - str
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.delete_rule
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.delete_subscription
  langs:
  - python
  module: azure.servicebus.management
  name: delete_subscription(topic_name, subscription_name, **kwargs)
  namewithoutparameters: delete_subscription
  summary: Delete a topic subscription.
  syntax:
    content: delete_subscription(topic_name, subscription_name, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: 'The subscription to

        be deleted.'
      id: subscription_name
      isRequired: true
      type:
      - str
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.delete_subscription
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.delete_topic
  langs:
  - python
  module: azure.servicebus.management
  name: delete_topic(topic_name, **kwargs)
  namewithoutparameters: delete_topic
  summary: Delete a topic.
  syntax:
    content: delete_topic(topic_name, **kwargs)
    parameters:
    - description: The topic to be deleted.
      id: topic_name
      isRequired: true
      type:
      - str
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.delete_topic
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.from_connection_string
  langs:
  - python
  module: azure.servicebus.management
  name: from_connection_string(conn_str, **kwargs)
  namewithoutparameters: from_connection_string
  summary: Create a client from connection string.
  syntax:
    content: from_connection_string(conn_str, **kwargs)
    parameters:
    - description: The connection string of the Service Bus Namespace.
      id: conn_str
      isRequired: true
      type:
      - str
    - id: conn_str
      isRequired: true
    return:
      type:
      - azure.servicebus.management.ServiceBusAdministrationClient
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.from_connection_string
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_namespace_properties
  langs:
  - python
  module: azure.servicebus.management
  name: get_namespace_properties(**kwargs)
  namewithoutparameters: get_namespace_properties
  summary: Get the namespace properties
  syntax:
    content: get_namespace_properties(**kwargs)
    parameters: []
    return:
      type:
      - azure.servicebus.management.NamespaceProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_namespace_properties
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_queue
  langs:
  - python
  module: azure.servicebus.management
  name: get_queue(queue_name, **kwargs)
  namewithoutparameters: get_queue
  summary: Get the properties of a queue.
  syntax:
    content: get_queue(queue_name, **kwargs)
    parameters:
    - description: The name of the queue.
      id: queue_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.management.QueueProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_queue
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_queue_runtime_properties
  langs:
  - python
  module: azure.servicebus.management
  name: get_queue_runtime_properties(queue_name, **kwargs)
  namewithoutparameters: get_queue_runtime_properties
  summary: Get the runtime information of a queue.
  syntax:
    content: get_queue_runtime_properties(queue_name, **kwargs)
    parameters:
    - description: The name of the queue.
      id: queue_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.management.QueueRuntimeProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_queue_runtime_properties
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_rule
  langs:
  - python
  module: azure.servicebus.management
  name: get_rule(topic_name, subscription_name, rule_name, **kwargs)
  namewithoutparameters: get_rule
  summary: Get the properties of a topic subscription rule.
  syntax:
    content: get_rule(topic_name, subscription_name, rule_name, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: 'The subscription that

        owns the rule.'
      id: subscription_name
      isRequired: true
      type:
      - str
    - description: Name of the rule.
      id: rule_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.management.RuleProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_rule
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_subscription
  langs:
  - python
  module: azure.servicebus.management
  name: get_subscription(topic_name, subscription_name, **kwargs)
  namewithoutparameters: get_subscription
  summary: Get the properties of a topic subscription.
  syntax:
    content: get_subscription(topic_name, subscription_name, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: name of the subscription.
      id: subscription_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.management.SubscriptionProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_subscription
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_subscription_runtime_properties
  langs:
  - python
  module: azure.servicebus.management
  name: get_subscription_runtime_properties(topic_name, subscription_name, **kwargs)
  namewithoutparameters: get_subscription_runtime_properties
  summary: Get a topic subscription runtime info.
  syntax:
    content: get_subscription_runtime_properties(topic_name, subscription_name, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: name of the subscription.
      id: subscription_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.management.SubscriptionRuntimeProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_subscription_runtime_properties
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_topic
  langs:
  - python
  module: azure.servicebus.management
  name: get_topic(topic_name, **kwargs)
  namewithoutparameters: get_topic
  summary: Get the properties of a topic.
  syntax:
    content: get_topic(topic_name, **kwargs)
    parameters:
    - description: The name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.management.TopicProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_topic
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_topic_runtime_properties
  langs:
  - python
  module: azure.servicebus.management
  name: get_topic_runtime_properties(topic_name, **kwargs)
  namewithoutparameters: get_topic_runtime_properties
  summary: Get a the runtime information of a topic.
  syntax:
    content: get_topic_runtime_properties(topic_name, **kwargs)
    parameters:
    - description: The name of the topic.
      id: topic_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.servicebus.management.TopicRuntimeProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_topic_runtime_properties
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_queues
  langs:
  - python
  module: azure.servicebus.management
  name: list_queues(**kwargs)
  namewithoutparameters: list_queues
  summary: List the queues of a ServiceBus namespace.
  syntax:
    content: list_queues(**kwargs)
    parameters: []
    return:
      description: An iterable (auto-paging) response of QueueProperties.
      type:
      - azure.core.paging.ItemPaged[azure.servicebus.management.QueueProperties]
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_queues
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_queues_runtime_properties
  langs:
  - python
  module: azure.servicebus.management
  name: list_queues_runtime_properties(**kwargs)
  namewithoutparameters: list_queues_runtime_properties
  summary: List the runtime information of the queues in a ServiceBus namespace.
  syntax:
    content: list_queues_runtime_properties(**kwargs)
    parameters: []
    return:
      description: An iterable (auto-paging) response of QueueRuntimeProperties.
      type:
      - azure.core.paging.ItemPaged[azure.servicebus.management.QueueRuntimeProperties]
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_queues_runtime_properties
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_rules
  langs:
  - python
  module: azure.servicebus.management
  name: list_rules(topic_name, subscription_name, **kwargs)
  namewithoutparameters: list_rules
  summary: List the rules of a topic subscription.
  syntax:
    content: list_rules(topic_name, subscription_name, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: 'The subscription that

        owns the rules.'
      id: subscription_name
      isRequired: true
      type:
      - str
    return:
      description: An iterable (auto-paging) response of RuleProperties.
      type:
      - azure.core.paging.ItemPaged[azure.servicebus.management.RuleProperties]
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_rules
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions
  langs:
  - python
  module: azure.servicebus.management
  name: list_subscriptions(topic_name, **kwargs)
  namewithoutparameters: list_subscriptions
  summary: List the subscriptions of a ServiceBus Topic.
  syntax:
    content: list_subscriptions(topic_name, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    return:
      description: An iterable (auto-paging) response of SubscriptionProperties.
      type:
      - azure.core.paging.ItemPaged[azure.servicebus.management.SubscriptionProperties]
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions_runtime_properties
  langs:
  - python
  module: azure.servicebus.management
  name: list_subscriptions_runtime_properties(topic_name, **kwargs)
  namewithoutparameters: list_subscriptions_runtime_properties
  summary: List the subscriptions runtime information of a ServiceBus Topic.
  syntax:
    content: list_subscriptions_runtime_properties(topic_name, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    return:
      description: An iterable (auto-paging) response of SubscriptionRuntimeProperties.
      type:
      - azure.core.paging.ItemPaged[azure.servicebus.management.SubscriptionRuntimeProperties]
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions_runtime_properties
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_topics
  langs:
  - python
  module: azure.servicebus.management
  name: list_topics(**kwargs)
  namewithoutparameters: list_topics
  summary: List the topics of a ServiceBus namespace.
  syntax:
    content: list_topics(**kwargs)
    parameters: []
    return:
      description: An iterable (auto-paging) response of TopicProperties.
      type:
      - azure.core.paging.ItemPaged[azure.servicebus.management.TopicProperties]
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_topics
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_topics_runtime_properties
  langs:
  - python
  module: azure.servicebus.management
  name: list_topics_runtime_properties(**kwargs)
  namewithoutparameters: list_topics_runtime_properties
  summary: List the topics runtime information of a ServiceBus namespace.
  syntax:
    content: list_topics_runtime_properties(**kwargs)
    parameters: []
    return:
      description: An iterable (auto-paging) response of TopicRuntimeProperties.
      type:
      - azure.core.paging.ItemPaged[azure.servicebus.management.TopicRuntimeProperties]
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_topics_runtime_properties
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.update_queue
  langs:
  - python
  module: azure.servicebus.management
  name: update_queue(queue, **kwargs)
  namewithoutparameters: update_queue
  summary: 'Update a queue.


    Before calling this method, you should use *get_queue*, *create_queue* or *list_queues*
    to get a

    *QueueProperties* instance, then update the properties. Only a portion of properties
    can

    be updated. Refer to [https://docs.microsoft.com/en-us/rest/api/servicebus/update-queue](https://docs.microsoft.com/en-us/rest/api/servicebus/update-queue).'
  syntax:
    content: update_queue(queue, **kwargs)
    parameters:
    - description: 'The queue that is returned from *get_queue*, *create_queue* or
        *list_queues* and

        has the updated properties.'
      id: queue
      isRequired: true
      type:
      - azure.servicebus.management.QueueProperties
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.update_queue
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.update_rule
  langs:
  - python
  module: azure.servicebus.management
  name: update_rule(topic_name, subscription_name, rule, **kwargs)
  namewithoutparameters: update_rule
  summary: 'Update a rule.


    Before calling this method, you should use *get_rule*, *create_rule* or *list_rules*
    to get a *RuleProperties*

    instance, then update the properties.



    *create_rule*, or *list_rules* and has the updated properties.

    :rtype: None'
  syntax:
    content: update_rule(topic_name, subscription_name, rule, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: 'The subscription that

        owns this rule.'
      id: subscription_name
      isRequired: true
      type:
      - str
    - description: The rule that is returned from *get_rule*,
      id: rule
      isRequired: true
      type:
      - azure.servicebus.management.RuleProperties
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.update_rule
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.update_subscription
  langs:
  - python
  module: azure.servicebus.management
  name: update_subscription(topic_name, subscription, **kwargs)
  namewithoutparameters: update_subscription
  summary: 'Update a subscription.


    Before calling this method, you should use *get_subscription*, *update_subscription*
    or *list_subscription*

    to get a *SubscriptionProperties* instance, then update the properties.'
  syntax:
    content: update_subscription(topic_name, subscription, **kwargs)
    parameters:
    - description: The topic that owns the subscription.
      id: topic_name
      isRequired: true
      type:
      - str
    - description: 'The subscription that is returned

        from *get_subscription*, *update_subscription* or *list_subscription* and
        has the updated properties.'
      id: subscription
      isRequired: true
      type:
      - azure.servicebus.management.SubscriptionProperties
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.update_subscription
- class: azure.servicebus.management.ServiceBusAdministrationClient
  fullName: azure.servicebus.management.ServiceBusAdministrationClient.update_topic
  langs:
  - python
  module: azure.servicebus.management
  name: update_topic(topic, **kwargs)
  namewithoutparameters: update_topic
  summary: 'Update a topic.


    Before calling this method, you should use *get_topic*, *create_topic* or *list_topics*
    to get a

    *TopicProperties* instance, then update the properties. Only a portion of properties
    can be updated.

    Refer to [https://docs.microsoft.com/en-us/rest/api/servicebus/update-topic](https://docs.microsoft.com/en-us/rest/api/servicebus/update-topic).'
  syntax:
    content: update_topic(topic, **kwargs)
    parameters:
    - description: 'The topic that is returned from *get_topic*, *create_topic*, or
        *list_topics*

        and has the updated properties.'
      id: topic
      isRequired: true
      type:
      - azure.servicebus.management.TopicProperties
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.management.ServiceBusAdministrationClient.update_topic
references:
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.close
  isExternal: false
  name: close()
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.close
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.create_queue
  isExternal: false
  name: create_queue(name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.create_queue
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.create_rule
  isExternal: false
  name: create_rule(topic_name, subscription_name, name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.create_rule
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.create_subscription
  isExternal: false
  name: create_subscription(topic_name, name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.create_subscription
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.create_topic
  isExternal: false
  name: create_topic(name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.create_topic
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.delete_queue
  isExternal: false
  name: delete_queue(queue_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.delete_queue
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.delete_rule
  isExternal: false
  name: delete_rule(topic_name, subscription_name, rule_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.delete_rule
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.delete_subscription
  isExternal: false
  name: delete_subscription(topic_name, subscription_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.delete_subscription
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.delete_topic
  isExternal: false
  name: delete_topic(topic_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.delete_topic
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.from_connection_string
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_namespace_properties
  isExternal: false
  name: get_namespace_properties(**kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_namespace_properties
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_queue
  isExternal: false
  name: get_queue(queue_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_queue
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_queue_runtime_properties
  isExternal: false
  name: get_queue_runtime_properties(queue_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_queue_runtime_properties
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_rule
  isExternal: false
  name: get_rule(topic_name, subscription_name, rule_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_rule
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_subscription
  isExternal: false
  name: get_subscription(topic_name, subscription_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_subscription
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_subscription_runtime_properties
  isExternal: false
  name: get_subscription_runtime_properties(topic_name, subscription_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_subscription_runtime_properties
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_topic
  isExternal: false
  name: get_topic(topic_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_topic
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.get_topic_runtime_properties
  isExternal: false
  name: get_topic_runtime_properties(topic_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.get_topic_runtime_properties
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_queues
  isExternal: false
  name: list_queues(**kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_queues
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_queues_runtime_properties
  isExternal: false
  name: list_queues_runtime_properties(**kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_queues_runtime_properties
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_rules
  isExternal: false
  name: list_rules(topic_name, subscription_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_rules
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions
  isExternal: false
  name: list_subscriptions(topic_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions_runtime_properties
  isExternal: false
  name: list_subscriptions_runtime_properties(topic_name, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_subscriptions_runtime_properties
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_topics
  isExternal: false
  name: list_topics(**kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_topics
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.list_topics_runtime_properties
  isExternal: false
  name: list_topics_runtime_properties(**kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.list_topics_runtime_properties
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.update_queue
  isExternal: false
  name: update_queue(queue, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.update_queue
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.update_rule
  isExternal: false
  name: update_rule(topic_name, subscription_name, rule, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.update_rule
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.update_subscription
  isExternal: false
  name: update_subscription(topic_name, subscription, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.update_subscription
- fullName: azure.servicebus.management.ServiceBusAdministrationClient.update_topic
  isExternal: false
  name: update_topic(topic, **kwargs)
  parent: azure.servicebus.management.ServiceBusAdministrationClient
  uid: azure.servicebus.management.ServiceBusAdministrationClient.update_topic
- fullName: azure.core.paging.ItemPaged[azure.servicebus.management.QueueProperties]
  name: ItemPaged[QueueProperties]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.management.QueueProperties
    name: QueueProperties
    uid: azure.servicebus.management.QueueProperties
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.servicebus.management.QueueProperties]
- fullName: azure.core.paging.ItemPaged[azure.servicebus.management.QueueRuntimeProperties]
  name: ItemPaged[QueueRuntimeProperties]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.management.QueueRuntimeProperties
    name: QueueRuntimeProperties
    uid: azure.servicebus.management.QueueRuntimeProperties
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.servicebus.management.QueueRuntimeProperties]
- fullName: azure.core.paging.ItemPaged[azure.servicebus.management.RuleProperties]
  name: ItemPaged[RuleProperties]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.management.RuleProperties
    name: RuleProperties
    uid: azure.servicebus.management.RuleProperties
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.servicebus.management.RuleProperties]
- fullName: azure.core.paging.ItemPaged[azure.servicebus.management.SubscriptionProperties]
  name: ItemPaged[SubscriptionProperties]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.management.SubscriptionProperties
    name: SubscriptionProperties
    uid: azure.servicebus.management.SubscriptionProperties
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.servicebus.management.SubscriptionProperties]
- fullName: azure.core.paging.ItemPaged[azure.servicebus.management.SubscriptionRuntimeProperties]
  name: ItemPaged[SubscriptionRuntimeProperties]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.management.SubscriptionRuntimeProperties
    name: SubscriptionRuntimeProperties
    uid: azure.servicebus.management.SubscriptionRuntimeProperties
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.servicebus.management.SubscriptionRuntimeProperties]
- fullName: azure.core.paging.ItemPaged[azure.servicebus.management.TopicProperties]
  name: ItemPaged[TopicProperties]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.management.TopicProperties
    name: TopicProperties
    uid: azure.servicebus.management.TopicProperties
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.servicebus.management.TopicProperties]
- fullName: azure.core.paging.ItemPaged[azure.servicebus.management.TopicRuntimeProperties]
  name: ItemPaged[TopicRuntimeProperties]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.management.TopicRuntimeProperties
    name: TopicRuntimeProperties
    uid: azure.servicebus.management.TopicRuntimeProperties
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.servicebus.management.TopicRuntimeProperties]
