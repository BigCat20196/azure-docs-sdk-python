### YamlMime:PythonClass
uid: azure.servicebus.Message
name: Message
fullName: azure.servicebus.Message
module: azure.servicebus
inheritances:
- builtins.object
summary: A Service Bus Message.
constructor:
  syntax: Message(body, **kwargs)
  parameters:
  - name: body
    description: The data to send in a single message.
    types:
    - <xref:Union>[<xref:str>, <xref:bytes>]
  - name: properties
    description: The user defined properties on the message.
    types:
    - <xref:dict>
  - name: session_id
    description: The session identifier of the message for a sessionful entity.
    types:
    - <xref:str>
  - name: message_id
    description: The id to identify the message.
    types:
    - <xref:str>
  - name: scheduled_enqueue_time_utc
    description: The utc scheduled enqueue time to the message.
    types:
    - <xref:datetime.datetime>
  - name: time_to_live
    description: The life duration of a message.
    types:
    - <xref:datetime.timedelta>
  - name: content_type
    description: The content type descriptor.
    types:
    - <xref:str>
  - name: correlation_id
    description: The correlation identifier.
    types:
    - <xref:str>
  - name: label
    description: The application specific label.
    types:
    - <xref:str>
  - name: partition_key
    description: The partition key for sending a message to a partitioned entity.
    types:
    - <xref:str>
  - name: via_partition_key
    description: 'The partition key for sending a message into an entity via a partitioned

      transfer queue.'
    types:
    - <xref:str>
  - name: to
    description: The *to* address used for auto_forward chaining scenarios.
    types:
    - <xref:str>
  - name: reply_to
    description: The address of an entity to send replies to.
    types:
    - <xref:str>
  - name: reply_to_session_id
    description: The session identifier augmenting the *reply_to* address.
    types:
    - <xref:str>
  - name: encoding
    description: The encoding for string data. Default is UTF-8.
    types:
    - <xref:str>
variables:
- description: Advanced use only.  The internal AMQP message payload that is sent
    or received.
  name: amqp_message
  types:
  - AMQPMessage
examples:
- "Sending a message with additional properties<!--[!code-python[Main](les\\sync_samples\\\
  sample_code_servicebus.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
  : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\
  \\1\\\\s\\\\dist_temp\\\\5\\\\azure-servicebus-7.0.0b7\\\\samples\\\\sync_samples\\\
  \\sample_code_servicebus.py\", \"xml:space\": \"preserve\", \"language\": \"python\"\
  , \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\
  \n   message = Message(\n       \"Hello World!!\",\n       session_id=\"MySessionID\"\
  ,\n       partition_key=\"UsingSpecificPartition\",\n       user_properties={'data':\
  \ 'custom_data'},\n       time_to_live=datetime.timedelta(seconds=30),\n       label='MyLabel'\n\
  \   )\n\n   ````\n"
attributes:
- uid: azure.servicebus.Message.body
  name: body
  summary: The body of the Message.
  return:
    types:
    - <xref:bytes>
    - <xref:Iterable>[<xref:bytes>]
- uid: azure.servicebus.Message.content_type
  name: content_type
  summary: 'The content type descriptor.


    Optionally describes the payload of the message, with a descriptor following the
    format of RFC2045, Section 5,

    for example "application/json".'
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.correlation_id
  name: correlation_id
  summary: 'The correlation identifier.


    Allows an application to specify a context for the message for the purposes of
    correlation, for example

    reflecting the MessageId of a message that is being replied to.


    See Message Routing and Correlation in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation*.'
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.label
  name: label
  summary: 'The application specific label.


    This property enables the application to indicate the purpose of the message to
    the receiver in a standardized

    fashion, similar to an email subject line.'
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.message_id
  name: message_id
  summary: "The id to identify the message.\n\nThe message identifier is an application-defined\
    \ value that uniquely identifies the message and its payload.\nThe identifier\
    \ is a free-form string and can reflect a GUID or an identifier derived from the\n\
    application context.  If enabled, the duplicate detection (see\n*https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection*)\n\
    \n\n   feature identifies and removes second and further submissions of messages\
    \ with the same message id."
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.partition_key
  name: partition_key
  summary: 'The partition key for sending a message to a partitioned entity.


    Setting this value enables assigning related messages to the same internal partition,
    so that submission

    sequence order is correctly recorded.

    The partition is chosen by a hash function over this value and cannot be chosen
    directly.


    See Partitioned queues and topics in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning*.'
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.properties
  name: properties
  summary: The user defined properties on the message.
  return:
    types:
    - <xref:dict>
- uid: azure.servicebus.Message.reply_to
  name: reply_to
  summary: 'The address of an entity to send replies to.


    This optional and application-defined value is a standard way to express a reply
    path to the receiver of

    the message. When a sender expects a reply, it sets the value to the absolute
    or relative path of the queue

    or topic it expects the reply to be sent to.


    See Message Routing and Correlation in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation*.'
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.reply_to_session_id
  name: reply_to_session_id
  summary: 'The session identifier augmenting the *reply_to* address.


    This value augments the *reply_to* information and specifies which session id
    should be set for the reply

    when sent to the reply entity.


    See Message Routing and Correlation in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation*.'
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.scheduled_enqueue_time_utc
  name: scheduled_enqueue_time_utc
  summary: 'The utc scheduled enqueue time to the message.


    This property can be used for scheduling when sending a message through *ServiceBusSender.send*
    method.

    If cancelling scheduled messages is required, you should use the *ServiceBusSender.schedule*
    method,

    which returns sequence numbers that can be used for future cancellation.

    *scheduled_enqueue_time_utc* is None if not set.'
  return:
    types:
    - <xref:datetime.datetime>
- uid: azure.servicebus.Message.session_id
  name: session_id
  summary: 'The session identifier of the message for a sessionful entity.


    For sessionful entities, this application-defined value specifies the session
    affiliation of the message.

    Messages with the same session identifier are subject to summary locking and enable
    exact in-order

    processing and demultiplexing. For non-sessionful entities, this value is ignored.


    See Message Sessions in *https://docs.microsoft.com/azure/service-bus-messaging/message-sessions*.'
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.time_to_live
  name: time_to_live
  summary: 'The life duration of a message.


    This value is the relative duration after which the message expires, starting
    from the instant the message

    has been accepted and stored by the broker, as captured in *enqueued_time_utc*.

    When not set explicitly, the assumed value is the DefaultTimeToLive for the respective
    queue or topic.

    A message-level time-to-live value cannot be longer than the entity''s time-to-live
    setting and it is silently

    adjusted if it does.


    See Expiration in *https://docs.microsoft.com/azure/service-bus-messaging/message-expiration*'
  return:
    types:
    - <xref:datetime.timedelta>
- uid: azure.servicebus.Message.to
  name: to
  summary: 'The *to* address.


    This property is reserved for future use in routing scenarios and presently ignored
    by the broker itself.

    Applications can use this value in rule-driven auto-forward chaining scenarios
    to indicate the intended

    logical destination of the message.


    See [https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding)
    for more details.'
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.Message.via_partition_key
  name: via_partition_key
  summary: 'The partition key for sending a message into an entity via a partitioned
    transfer queue.


    If a message is sent via a transfer queue in the scope of a transaction, this
    value selects the transfer

    queue partition: This is functionally equivalent to *partition_key* and ensures
    that messages are kept

    together and in order as they are transferred.


    See Transfers and Send Via in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-transactions#transfers-and-send-via*.'
  return:
    types:
    - <xref:str>
