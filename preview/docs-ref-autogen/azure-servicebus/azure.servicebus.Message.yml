### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.Message.body
  - azure.servicebus.Message.content_type
  - azure.servicebus.Message.correlation_id
  - azure.servicebus.Message.label
  - azure.servicebus.Message.message_id
  - azure.servicebus.Message.partition_key
  - azure.servicebus.Message.properties
  - azure.servicebus.Message.reply_to
  - azure.servicebus.Message.reply_to_session_id
  - azure.servicebus.Message.scheduled_enqueue_time_utc
  - azure.servicebus.Message.session_id
  - azure.servicebus.Message.time_to_live
  - azure.servicebus.Message.to
  - azure.servicebus.Message.via_partition_key
  class: azure.servicebus.Message
  example:
  - "Sending a message with additional properties<!--[!code-python[Main](les\\sync_samples\\\
    sample_code_servicebus.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\5\\\\azure-servicebus-7.0.0b7\\\\samples\\\\sync_samples\\\
    \\sample_code_servicebus.py\", \"xml:space\": \"preserve\", \"language\": \"python\"\
    , \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\
    \n   message = Message(\n       \"Hello World!!\",\n       session_id=\"MySessionID\"\
    ,\n       partition_key=\"UsingSpecificPartition\",\n       user_properties={'data':\
    \ 'custom_data'},\n       time_to_live=datetime.timedelta(seconds=30),\n     \
    \  label='MyLabel'\n   )\n\n   ````\n"
  fullName: azure.servicebus.Message
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.servicebus
  name: Message
  summary: A Service Bus Message.
  syntax:
    content: Message(body, **kwargs)
    parameters:
    - description: The data to send in a single message.
      id: body
      type:
      - Union[str, bytes]
    - description: The user defined properties on the message.
      id: properties
      type:
      - dict
    - description: The session identifier of the message for a sessionful entity.
      id: session_id
      type:
      - str
    - description: The id to identify the message.
      id: message_id
      type:
      - str
    - description: The utc scheduled enqueue time to the message.
      id: scheduled_enqueue_time_utc
      type:
      - datetime.datetime
    - description: The life duration of a message.
      id: time_to_live
      type:
      - datetime.timedelta
    - description: The content type descriptor.
      id: content_type
      type:
      - str
    - description: The correlation identifier.
      id: correlation_id
      type:
      - str
    - description: The application specific label.
      id: label
      type:
      - str
    - description: The partition key for sending a message to a partitioned entity.
      id: partition_key
      type:
      - str
    - description: 'The partition key for sending a message into an entity via a partitioned

        transfer queue.'
      id: via_partition_key
      type:
      - str
    - description: The *to* address used for auto_forward chaining scenarios.
      id: to
      type:
      - str
    - description: The address of an entity to send replies to.
      id: reply_to
      type:
      - str
    - description: The session identifier augmenting the *reply_to* address.
      id: reply_to_session_id
      type:
      - str
    - description: The encoding for string data. Default is UTF-8.
      id: encoding
      type:
      - str
    variables:
    - description: Advanced use only.  The internal AMQP message payload that is sent
        or received.
      id: amqp_message
      type:
      - AMQPMessage
  type: class
  uid: azure.servicebus.Message
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.body
  langs:
  - python
  module: azure.servicebus
  name: body
  summary: The body of the Message.
  syntax:
    return:
      type:
      - bytes
      - Iterable[bytes]
  type: attribute
  uid: azure.servicebus.Message.body
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.content_type
  langs:
  - python
  module: azure.servicebus
  name: content_type
  summary: 'The content type descriptor.


    Optionally describes the payload of the message, with a descriptor following the
    format of RFC2045, Section 5,

    for example "application/json".'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.content_type
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.correlation_id
  langs:
  - python
  module: azure.servicebus
  name: correlation_id
  summary: 'The correlation identifier.


    Allows an application to specify a context for the message for the purposes of
    correlation, for example

    reflecting the MessageId of a message that is being replied to.


    See Message Routing and Correlation in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation*.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.correlation_id
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.label
  langs:
  - python
  module: azure.servicebus
  name: label
  summary: 'The application specific label.


    This property enables the application to indicate the purpose of the message to
    the receiver in a standardized

    fashion, similar to an email subject line.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.label
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.message_id
  langs:
  - python
  module: azure.servicebus
  name: message_id
  summary: "The id to identify the message.\n\nThe message identifier is an application-defined\
    \ value that uniquely identifies the message and its payload.\nThe identifier\
    \ is a free-form string and can reflect a GUID or an identifier derived from the\n\
    application context.  If enabled, the duplicate detection (see\n*https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection*)\n\
    \n\n   feature identifies and removes second and further submissions of messages\
    \ with the same message id."
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.message_id
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.partition_key
  langs:
  - python
  module: azure.servicebus
  name: partition_key
  summary: 'The partition key for sending a message to a partitioned entity.


    Setting this value enables assigning related messages to the same internal partition,
    so that submission

    sequence order is correctly recorded.

    The partition is chosen by a hash function over this value and cannot be chosen
    directly.


    See Partitioned queues and topics in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning*.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.partition_key
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.properties
  langs:
  - python
  module: azure.servicebus
  name: properties
  summary: The user defined properties on the message.
  syntax:
    return:
      type:
      - dict
  type: attribute
  uid: azure.servicebus.Message.properties
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.reply_to
  langs:
  - python
  module: azure.servicebus
  name: reply_to
  summary: 'The address of an entity to send replies to.


    This optional and application-defined value is a standard way to express a reply
    path to the receiver of

    the message. When a sender expects a reply, it sets the value to the absolute
    or relative path of the queue

    or topic it expects the reply to be sent to.


    See Message Routing and Correlation in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation*.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.reply_to
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.reply_to_session_id
  langs:
  - python
  module: azure.servicebus
  name: reply_to_session_id
  summary: 'The session identifier augmenting the *reply_to* address.


    This value augments the *reply_to* information and specifies which session id
    should be set for the reply

    when sent to the reply entity.


    See Message Routing and Correlation in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation*.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.reply_to_session_id
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.scheduled_enqueue_time_utc
  langs:
  - python
  module: azure.servicebus
  name: scheduled_enqueue_time_utc
  summary: 'The utc scheduled enqueue time to the message.


    This property can be used for scheduling when sending a message through *ServiceBusSender.send*
    method.

    If cancelling scheduled messages is required, you should use the *ServiceBusSender.schedule*
    method,

    which returns sequence numbers that can be used for future cancellation.

    *scheduled_enqueue_time_utc* is None if not set.'
  syntax:
    return:
      type:
      - datetime.datetime
  type: attribute
  uid: azure.servicebus.Message.scheduled_enqueue_time_utc
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.session_id
  langs:
  - python
  module: azure.servicebus
  name: session_id
  summary: 'The session identifier of the message for a sessionful entity.


    For sessionful entities, this application-defined value specifies the session
    affiliation of the message.

    Messages with the same session identifier are subject to summary locking and enable
    exact in-order

    processing and demultiplexing. For non-sessionful entities, this value is ignored.


    See Message Sessions in *https://docs.microsoft.com/azure/service-bus-messaging/message-sessions*.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.session_id
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.time_to_live
  langs:
  - python
  module: azure.servicebus
  name: time_to_live
  summary: 'The life duration of a message.


    This value is the relative duration after which the message expires, starting
    from the instant the message

    has been accepted and stored by the broker, as captured in *enqueued_time_utc*.

    When not set explicitly, the assumed value is the DefaultTimeToLive for the respective
    queue or topic.

    A message-level time-to-live value cannot be longer than the entity''s time-to-live
    setting and it is silently

    adjusted if it does.


    See Expiration in *https://docs.microsoft.com/azure/service-bus-messaging/message-expiration*'
  syntax:
    return:
      type:
      - datetime.timedelta
  type: attribute
  uid: azure.servicebus.Message.time_to_live
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.to
  langs:
  - python
  module: azure.servicebus
  name: to
  summary: 'The *to* address.


    This property is reserved for future use in routing scenarios and presently ignored
    by the broker itself.

    Applications can use this value in rule-driven auto-forward chaining scenarios
    to indicate the intended

    logical destination of the message.


    See [https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding)
    for more details.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.to
- class: azure.servicebus.Message
  fullName: azure.servicebus.Message.via_partition_key
  langs:
  - python
  module: azure.servicebus
  name: via_partition_key
  summary: 'The partition key for sending a message into an entity via a partitioned
    transfer queue.


    If a message is sent via a transfer queue in the scope of a transaction, this
    value selects the transfer

    queue partition: This is functionally equivalent to *partition_key* and ensures
    that messages are kept

    together and in order as they are transferred.


    See Transfers and Send Via in

    *https://docs.microsoft.com/azure/service-bus-messaging/service-bus-transactions#transfers-and-send-via*.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.servicebus.Message.via_partition_key
references:
- fullName: azure.servicebus.Message.body
  isExternal: false
  name: body
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.body
- fullName: azure.servicebus.Message.content_type
  isExternal: false
  name: content_type
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.content_type
- fullName: azure.servicebus.Message.correlation_id
  isExternal: false
  name: correlation_id
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.correlation_id
- fullName: azure.servicebus.Message.label
  isExternal: false
  name: label
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.label
- fullName: azure.servicebus.Message.message_id
  isExternal: false
  name: message_id
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.message_id
- fullName: azure.servicebus.Message.partition_key
  isExternal: false
  name: partition_key
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.partition_key
- fullName: azure.servicebus.Message.properties
  isExternal: false
  name: properties
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.properties
- fullName: azure.servicebus.Message.reply_to
  isExternal: false
  name: reply_to
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.reply_to
- fullName: azure.servicebus.Message.reply_to_session_id
  isExternal: false
  name: reply_to_session_id
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.reply_to_session_id
- fullName: azure.servicebus.Message.scheduled_enqueue_time_utc
  isExternal: false
  name: scheduled_enqueue_time_utc
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.scheduled_enqueue_time_utc
- fullName: azure.servicebus.Message.session_id
  isExternal: false
  name: session_id
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.session_id
- fullName: azure.servicebus.Message.time_to_live
  isExternal: false
  name: time_to_live
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.time_to_live
- fullName: azure.servicebus.Message.to
  isExternal: false
  name: to
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.to
- fullName: azure.servicebus.Message.via_partition_key
  isExternal: false
  name: via_partition_key
  parent: azure.servicebus.Message
  uid: azure.servicebus.Message.via_partition_key
- fullName: Union[str, bytes]
  name: Union[str, bytes]
  spec.python:
  - fullName: Union
    name: Union
    uid: Union
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: bytes
    name: bytes
    uid: bytes
  - fullName: ']'
    name: ']'
  uid: Union[str, bytes]
- fullName: Iterable[bytes]
  name: Iterable[bytes]
  spec.python:
  - fullName: Iterable
    name: Iterable
    uid: Iterable
  - fullName: '['
    name: '['
  - fullName: bytes
    name: bytes
    uid: bytes
  - fullName: ']'
    name: ']'
  uid: Iterable[bytes]
