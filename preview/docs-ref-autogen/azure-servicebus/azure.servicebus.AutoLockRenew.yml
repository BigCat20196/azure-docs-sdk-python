### YamlMime:PythonClass
uid: azure.servicebus.AutoLockRenew
name: AutoLockRenew
fullName: azure.servicebus.AutoLockRenew
module: azure.servicebus
inheritances:
- builtins.object
summary: Auto renew locks for messages and sessions using a background thread pool.
constructor:
  syntax: AutoLockRenew(executor=None, max_workers=None)
  parameters:
  - name: executor
    description: 'A user-specified thread pool. This cannot be combined with

      setting *max_workers*.'
    types:
    - <xref:concurrent.futures.ThreadPoolExecutor>
  - name: max_workers
    description: 'Specify the maximum workers in the thread pool. If not

      specified the number used will be derived from the core count of the environment.

      This cannot be combined with *executor*.'
    types:
    - <xref:int>
examples:
- "Automatically renew a message lock<!--[!code-python[Main](les\\sync_samples\\sample_code_servicebus.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\8\\\\azure-servicebus-7.0.0b3\\\
  \\samples\\\\sync_samples\\\\sample_code_servicebus.py\", \"xml:space\": \"preserve\"\
  , \"language\": \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\"\
  : 1}} -->\n\n````python\n\n   from azure.servicebus import AutoLockRenew\n   lock_renewal\
  \ = AutoLockRenew(max_workers=4)\n   with servicebus_receiver:\n       for message\
  \ in servicebus_receiver:\n           # Auto renew message for 1 minute.\n     \
  \      lock_renewal.register(message, timeout=60)\n           process_message(message)\n\
  \           message.complete()\n\n   ````\n\nAutomatically renew a session lock<!--[!code-python[Main](les\\\
  sync_samples\\sample_code_servicebus.py )]-->\n\n<!-- literal_block {\"ids\": [],\
  \ \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
  : \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\8\\\\azure-servicebus-7.0.0b3\\\\samples\\\
  \\sync_samples\\\\sample_code_servicebus.py\", \"xml:space\": \"preserve\", \"language\"\
  : \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\
  \n````python\n\n       from azure.servicebus import AutoLockRenew\n\n       lock_renewal\
  \ = AutoLockRenew(max_workers=4)\n       with servicebus_client.get_queue_session_receiver(queue_name=queue_name,\
  \ session_id=session_id) as receiver:\n           session = receiver.session\n \
  \          # Auto renew session lock for 2 minutes\n           lock_renewal.register(session,\
  \ timeout=120)\n           for message in receiver:\n               process_message(message)\n\
  \               message.complete()\n\n   ````\n"
methods:
- uid: azure.servicebus.AutoLockRenew.register
  name: register
  summary: Register a renewable entity for automatic lock renewal.
  signature: register(renewable, timeout=300)
  parameters:
  - name: renewable
    description: A locked entity that needs to be renewed.
    isRequired: true
    types:
    - <xref:azure.servicebus.ReceivedMessage>
    - <xref:azure.servicebus.Session>
  - name: timeout
    description: 'A time in seconds that the lock should be maintained for.

      Default value is 300 (5 minutes).'
    defaultValue: '300'
    types:
    - <xref:float>
- uid: azure.servicebus.AutoLockRenew.shutdown
  name: shutdown
  summary: Shutdown the thread pool to clean up any remaining lock renewal threads.
  signature: shutdown(wait=True)
  parameters:
  - name: wait
    description: Whether to block until thread pool has shutdown. Default is *True*.
    defaultValue: 'True'
    types:
    - <xref:bool>
