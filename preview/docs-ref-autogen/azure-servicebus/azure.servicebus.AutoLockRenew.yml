### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.AutoLockRenew.close
  - azure.servicebus.AutoLockRenew.register
  class: azure.servicebus.AutoLockRenew
  example:
  - "Automatically renew a message lock<!--[!code-python[Main](les\\sync_samples\\\
    sample_code_servicebus.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\5\\\\azure-servicebus-7.0.0b7\\\\samples\\\\sync_samples\\\
    \\sample_code_servicebus.py\", \"xml:space\": \"preserve\", \"language\": \"python\"\
    , \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\
    \n   from azure.servicebus import AutoLockRenew\n   lock_renewal = AutoLockRenew(max_workers=4)\n\
    \   with servicebus_receiver:\n       for message in servicebus_receiver:\n  \
    \         # Auto renew message for 1 minute.\n           lock_renewal.register(message,\
    \ timeout=60)\n           process_message(message)\n           message.complete()\n\
    \n   ````\n\nAutomatically renew a session lock<!--[!code-python[Main](les\\sync_samples\\\
    sample_code_servicebus.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\\
    a\\\\1\\\\s\\\\dist_temp\\\\5\\\\azure-servicebus-7.0.0b7\\\\samples\\\\sync_samples\\\
    \\sample_code_servicebus.py\", \"xml:space\": \"preserve\", \"language\": \"python\"\
    , \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\
    \n       from azure.servicebus import AutoLockRenew\n\n       lock_renewal = AutoLockRenew(max_workers=4)\n\
    \       with servicebus_client.get_queue_session_receiver(queue_name=queue_name,\
    \ session_id=session_id) as receiver:\n           session = receiver.session\n\
    \           # Auto renew session lock for 2 minutes\n           lock_renewal.register(session,\
    \ timeout=120)\n           for message in receiver:\n               process_message(message)\n\
    \               message.complete()\n\n   ````\n"
  fullName: azure.servicebus.AutoLockRenew
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.servicebus
  name: AutoLockRenew
  summary: Auto renew locks for messages and sessions using a background thread pool.
  syntax:
    content: AutoLockRenew(executor=None, max_workers=None)
    parameters:
    - description: 'A user-specified thread pool. This cannot be combined with

        setting *max_workers*.'
      id: executor
      type:
      - concurrent.futures.ThreadPoolExecutor
    - description: 'Specify the maximum workers in the thread pool. If not

        specified the number used will be derived from the core count of the environment.

        This cannot be combined with *executor*.'
      id: max_workers
      type:
      - int
  type: class
  uid: azure.servicebus.AutoLockRenew
- class: azure.servicebus.AutoLockRenew
  fullName: azure.servicebus.AutoLockRenew.close
  langs:
  - python
  module: azure.servicebus
  name: close(wait=True)
  namewithoutparameters: close
  summary: Cease autorenewal by shutting down the thread pool to clean up any remaining
    lock renewal threads.
  syntax:
    content: close(wait=True)
    parameters:
    - defaultValue: 'True'
      description: Whether to block until thread pool has shutdown. Default is *True*.
      id: wait
      type:
      - bool
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.AutoLockRenew.close
- class: azure.servicebus.AutoLockRenew
  fullName: azure.servicebus.AutoLockRenew.register
  langs:
  - python
  module: azure.servicebus
  name: register(renewable, timeout=300, on_lock_renew_failure=None)
  namewithoutparameters: register
  summary: Register a renewable entity for automatic lock renewal.
  syntax:
    content: register(renewable, timeout=300, on_lock_renew_failure=None)
    parameters:
    - description: A locked entity that needs to be renewed.
      id: renewable
      isRequired: true
      type:
      - Union[azure.servicebus.ReceivedMessage, azure.servicebus.ServiceBusSession]
    - defaultValue: '300'
      description: A time in seconds that the lock should be maintained for. Default
        value is 300 (5 minutes).
      id: timeout
      type:
      - float
    - defaultValue: None
      description: 'A callback may be specified to be called when the lock is lost
        on the renewable

        that is being registered. Default value is None (no callback).'
      id: on_lock_renew_failure
      type:
      - Optional[LockRenewFailureCallback]
    return:
      type:
      - None
  type: method
  uid: azure.servicebus.AutoLockRenew.register
references:
- fullName: azure.servicebus.AutoLockRenew.close
  isExternal: false
  name: close(wait=True)
  parent: azure.servicebus.AutoLockRenew
  uid: azure.servicebus.AutoLockRenew.close
- fullName: azure.servicebus.AutoLockRenew.register
  isExternal: false
  name: register(renewable, timeout=300, on_lock_renew_failure=None)
  parent: azure.servicebus.AutoLockRenew
  uid: azure.servicebus.AutoLockRenew.register
- fullName: Union[azure.servicebus.ReceivedMessage, azure.servicebus.ServiceBusSession]
  name: Union[ReceivedMessage, ServiceBusSession]
  spec.python:
  - fullName: Union
    name: Union
    uid: Union
  - fullName: '['
    name: '['
  - fullName: azure.servicebus.ReceivedMessage
    name: ReceivedMessage
    uid: azure.servicebus.ReceivedMessage
  - fullName: ', '
    name: ', '
  - fullName: azure.servicebus.ServiceBusSession
    name: ServiceBusSession
    uid: azure.servicebus.ServiceBusSession
  - fullName: ']'
    name: ']'
  uid: Union[azure.servicebus.ReceivedMessage, azure.servicebus.ServiceBusSession]
- fullName: Optional[LockRenewFailureCallback]
  name: Optional[LockRenewFailureCallback]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: LockRenewFailureCallback
    name: LockRenewFailureCallback
    uid: LockRenewFailureCallback
  - fullName: ']'
    name: ']'
  uid: Optional[LockRenewFailureCallback]
