### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventgrid.aio.EventGridPublisherClient.send
  class: azure.eventgrid.aio.EventGridPublisherClient
  fullName: azure.eventgrid.aio.EventGridPublisherClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.eventgrid.aio
  name: EventGridPublisherClient
  summary: Asynchronous EventGrid Python Publisher Client.
  syntax:
    content: 'EventGridPublisherClient(topic_hostname: str, credential: typing.Union[azure.core.credentials.AzureKeyCredential,
      azure.eventgrid._shared_access_signature_credential.EventGridSharedAccessSignatureCredential],
      **kwargs: typing.Any) -> None'
    parameters:
    - description: The topic endpoint to send the events to.
      id: topic_hostname
      type:
      - str
    - description: 'The credential object used for authentication which implements

        SAS key authentication or SAS token authentication.'
      id: credential
      type:
      - azure.core.credentials.AzureKeyCredential
      - EventGridSharedAccessSignatureCredential
  type: class
  uid: azure.eventgrid.aio.EventGridPublisherClient
- class: azure.eventgrid.aio.EventGridPublisherClient
  exceptions:
  - type: ValueError
  - type: ValueError
  fullName: azure.eventgrid.aio.EventGridPublisherClient.send
  langs:
  - python
  module: azure.eventgrid.aio
  name: 'send(events: typing.Union[azure.eventgrid._models.CloudEvent, azure.eventgrid._models.EventGridEvent,
    azure.eventgrid._models.CustomEvent, typing.Dict, typing.List[azure.eventgrid._models.CloudEvent],
    typing.List[azure.eventgrid._models.EventGridEvent], typing.List[azure.eventgrid._models.CustomEvent],
    typing.List[typing.Dict]], **kwargs: typing.Any) -> None'
  namewithoutparameters: send
  summary: Sends event data to topic hostname specified during client initialization.
  syntax:
    content: 'send(events: typing.Union[azure.eventgrid._models.CloudEvent, azure.eventgrid._models.EventGridEvent,
      azure.eventgrid._models.CustomEvent, typing.Dict, typing.List[azure.eventgrid._models.CloudEvent],
      typing.List[azure.eventgrid._models.EventGridEvent], typing.List[azure.eventgrid._models.CustomEvent],
      typing.List[typing.Dict]], **kwargs: typing.Any) -> None'
    parameters:
    - description: A list or an instance of CloudEvent/EventGridEvent/CustomEvent
        to be sent.
      id: events
      isRequired: true
      type:
      - SendType
    - description: 'The type of content to be used to send the events.

        Has default value "application/json; charset=utf-8" for EventGridEvents,

        with "cloudevents-batch+json" for CloudEvents'
      id: content_type
      isRequired: true
      type:
      - str
    return:
      type:
      - None
  type: method
  uid: azure.eventgrid.aio.EventGridPublisherClient.send
references:
- fullName: azure.eventgrid.aio.EventGridPublisherClient.send
  isExternal: false
  name: 'send(events: typing.Union[azure.eventgrid._models.CloudEvent, azure.eventgrid._models.EventGridEvent,
    azure.eventgrid._models.CustomEvent, typing.Dict, typing.List[azure.eventgrid._models.CloudEvent],
    typing.List[azure.eventgrid._models.EventGridEvent], typing.List[azure.eventgrid._models.CustomEvent],
    typing.List[typing.Dict]], **kwargs: typing.Any) -> None'
  parent: azure.eventgrid.aio.EventGridPublisherClient
  uid: azure.eventgrid.aio.EventGridPublisherClient.send
