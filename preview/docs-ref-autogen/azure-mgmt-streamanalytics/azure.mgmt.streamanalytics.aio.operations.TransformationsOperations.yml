### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.create_or_replace
  - azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.get
  - azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.update
  - azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.models
  class: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: TransformationsOperations
  summary: 'TransformationsOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: TransformationsOperations(client, config, serializer, deserializer) ->
      None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
- class: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.create_or_replace
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'create_or_replace(resource_group_name: str, job_name: str, transformation_name:
    str, transformation: azure.mgmt.streamanalytics.models._models_py3.Transformation,
    if_match: typing.Union[str, NoneType] = None, if_none_match: typing.Union[str,
    NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
  namewithoutparameters: create_or_replace
  summary: 'Creates a transformation or replaces an already existing transformation
    under an existing

    streaming job.'
  syntax:
    content: 'create_or_replace(resource_group_name: str, job_name: str, transformation_name:
      str, transformation: azure.mgmt.streamanalytics.models._models_py3.Transformation,
      if_match: typing.Union[str, NoneType] = None, if_none_match: typing.Union[str,
      NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: The name of the transformation.
      id: transformation_name
      isRequired: true
      type:
      - str
    - description: 'The definition of the transformation that will be used to create
        a new

        transformation or replace the existing one under the streaming job.'
      id: transformation
      isRequired: true
      type:
      - stream_analytics_management_client.models.Transformation
    - description: 'The ETag of the transformation. Omit this value to always overwrite
        the

        current transformation. Specify the last-seen ETag value to prevent accidentally
        overwriting

        concurrent changes.'
      id: if_match
      isRequired: true
      type:
      - str
    - description: 'Set to ''*'' to allow a new transformation to be created, but
        to prevent

        updating an existing transformation. Other values will result in a 412 Pre-condition
        Failed

        response.'
      id: if_none_match
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Transformation, or the result of cls(response)
      type:
      - stream_analytics_management_client.models.Transformation
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.create_or_replace
- class: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.get
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'get(resource_group_name: str, job_name: str, transformation_name: str, **kwargs)
    -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
  namewithoutparameters: get
  summary: Gets details about the specified transformation.
  syntax:
    content: 'get(resource_group_name: str, job_name: str, transformation_name: str,
      **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: The name of the transformation.
      id: transformation_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Transformation, or the result of cls(response)
      type:
      - stream_analytics_management_client.models.Transformation
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.get
- class: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.update
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'update(resource_group_name: str, job_name: str, transformation_name: str,
    transformation: azure.mgmt.streamanalytics.models._models_py3.Transformation,
    if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
  namewithoutparameters: update
  summary: 'Updates an existing transformation under an existing streaming job. This
    can be used to

    partially update (ie. update one or two properties) a transformation without affecting
    the rest

    the job or transformation definition.'
  syntax:
    content: 'update(resource_group_name: str, job_name: str, transformation_name:
      str, transformation: azure.mgmt.streamanalytics.models._models_py3.Transformation,
      if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: The name of the transformation.
      id: transformation_name
      isRequired: true
      type:
      - str
    - description: 'A Transformation object. The properties specified here will overwrite

        the corresponding properties in the existing transformation (ie. Those properties
        will be

        updated). Any properties that are set to null here will mean that the corresponding
        property in

        the existing transformation will remain the same and not change as a result
        of this PATCH

        operation.'
      id: transformation
      isRequired: true
      type:
      - stream_analytics_management_client.models.Transformation
    - description: 'The ETag of the transformation. Omit this value to always overwrite
        the

        current transformation. Specify the last-seen ETag value to prevent accidentally
        overwriting

        concurrent changes.'
      id: if_match
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Transformation, or the result of cls(response)
      type:
      - stream_analytics_management_client.models.Transformation
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.update
- class: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.models
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.streamanalytics.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\streamanalytics\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.models
references:
- fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.create_or_replace
  isExternal: false
  name: 'create_or_replace(resource_group_name: str, job_name: str, transformation_name:
    str, transformation: azure.mgmt.streamanalytics.models._models_py3.Transformation,
    if_match: typing.Union[str, NoneType] = None, if_none_match: typing.Union[str,
    NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
  parent: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.create_or_replace
- fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, job_name: str, transformation_name: str, **kwargs)
    -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
  parent: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.get
- fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.update
  isExternal: false
  name: 'update(resource_group_name: str, job_name: str, transformation_name: str,
    transformation: azure.mgmt.streamanalytics.models._models_py3.Transformation,
    if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.Transformation'
  parent: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.update
- fullName: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.TransformationsOperations.models
