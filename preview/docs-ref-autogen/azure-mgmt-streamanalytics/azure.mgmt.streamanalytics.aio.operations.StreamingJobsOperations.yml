### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_create_or_replace
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_delete
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_start
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_stop
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.get
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list_by_resource_group
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.update
  - azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.models
  class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: StreamingJobsOperations
  summary: 'StreamingJobsOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: StreamingJobsOperations(client, config, serializer, deserializer) ->
      None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_create_or_replace
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'begin_create_or_replace(resource_group_name: str, job_name: str, streaming_job:
    azure.mgmt.streamanalytics.models._models_py3.StreamingJob, if_match: typing.Union[str,
    NoneType] = None, if_none_match: typing.Union[str, NoneType] = None, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.StreamingJob'')]'
  namewithoutparameters: begin_create_or_replace
  summary: Creates a streaming job or replaces an already existing streaming job.
  syntax:
    content: 'begin_create_or_replace(resource_group_name: str, job_name: str, streaming_job:
      azure.mgmt.streamanalytics.models._models_py3.StreamingJob, if_match: typing.Union[str,
      NoneType] = None, if_none_match: typing.Union[str, NoneType] = None, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.StreamingJob'')]'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: 'The definition of the streaming job that will be used to create
        a new

        streaming job or replace the existing one.'
      id: streaming_job
      isRequired: true
      type:
      - stream_analytics_management_client.models.StreamingJob
    - description: 'The ETag of the streaming job. Omit this value to always overwrite
        the current

        record set. Specify the last-seen ETag value to prevent accidentally overwriting
        concurrent

        changes.'
      id: if_match
      isRequired: true
      type:
      - str
    - description: 'Set to ''*'' to allow a new streaming job to be created, but to
        prevent

        updating an existing record set. Other values will result in a 412 Pre-condition
        Failed

        response.'
      id: if_none_match
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either StreamingJob
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[stream_analytics_management_client.models.StreamingJob]
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_create_or_replace
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'begin_delete(resource_group_name: str, job_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_delete
  summary: Deletes a streaming job.
  syntax:
    content: 'begin_delete(resource_group_name: str, job_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_delete
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_start
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'begin_start(resource_group_name: str, job_name: str, start_job_parameters:
    typing.Union[_ForwardRef(''models.StartStreamingJobParameters''), NoneType] =
    None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_start
  summary: 'Starts a streaming job. Once a job is started it will start processing
    input events and produce

    output.'
  syntax:
    content: 'begin_start(resource_group_name: str, job_name: str, start_job_parameters:
      typing.Union[_ForwardRef(''models.StartStreamingJobParameters''), NoneType]
      = None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: Parameters applicable to a start streaming job operation.
      id: start_job_parameters
      isRequired: true
      type:
      - stream_analytics_management_client.models.StartStreamingJobParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_start
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_stop
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'begin_stop(resource_group_name: str, job_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_stop
  summary: 'Stops a running streaming job. This will cause a running streaming job
    to stop processing input

    events and producing output.'
  syntax:
    content: 'begin_stop(resource_group_name: str, job_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_stop
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.get
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'get(resource_group_name: str, job_name: str, expand: typing.Union[str, NoneType]
    = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.StreamingJob'
  namewithoutparameters: get
  summary: Gets details about the specified streaming job.
  syntax:
    content: 'get(resource_group_name: str, job_name: str, expand: typing.Union[str,
      NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.StreamingJob'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: 'The $expand OData query parameter. This is a comma-separated list
        of additional

        streaming job properties to include in the response, beyond the default set
        returned when this

        parameter is absent. The default set is all streaming job properties other
        than ''inputs'',

        ''transformation'', ''outputs'', and ''functions''.'
      id: expand
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: StreamingJob, or the result of cls(response)
      type:
      - stream_analytics_management_client.models.StreamingJob
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.get
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'list(expand: typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.StreamingJobListResult'')]'
  namewithoutparameters: list
  summary: Lists all of the streaming jobs in the given subscription.
  syntax:
    content: 'list(expand: typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.StreamingJobListResult'')]'
    parameters:
    - description: 'The $expand OData query parameter. This is a comma-separated list
        of additional

        streaming job properties to include in the response, beyond the default set
        returned when this

        parameter is absent. The default set is all streaming job properties other
        than ''inputs'',

        ''transformation'', ''outputs'', and ''functions''.'
      id: expand
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either StreamingJobListResult or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[stream_analytics_management_client.models.StreamingJobListResult]
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'list_by_resource_group(resource_group_name: str, expand: typing.Union[str,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.StreamingJobListResult'')]'
  namewithoutparameters: list_by_resource_group
  summary: Lists all of the streaming jobs in the specified resource group.
  syntax:
    content: 'list_by_resource_group(resource_group_name: str, expand: typing.Union[str,
      NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.StreamingJobListResult'')]'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The $expand OData query parameter. This is a comma-separated list
        of additional

        streaming job properties to include in the response, beyond the default set
        returned when this

        parameter is absent. The default set is all streaming job properties other
        than ''inputs'',

        ''transformation'', ''outputs'', and ''functions''.'
      id: expand
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either StreamingJobListResult or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[stream_analytics_management_client.models.StreamingJobListResult]
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list_by_resource_group
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.update
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: 'update(resource_group_name: str, job_name: str, streaming_job: azure.mgmt.streamanalytics.models._models_py3.StreamingJob,
    if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.StreamingJob'
  namewithoutparameters: update
  summary: 'Updates an existing streaming job. This can be used to partially update
    (ie. update one or two

    properties) a streaming job without affecting the rest the job definition.'
  syntax:
    content: 'update(resource_group_name: str, job_name: str, streaming_job: azure.mgmt.streamanalytics.models._models_py3.StreamingJob,
      if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.StreamingJob'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the streaming job.
      id: job_name
      isRequired: true
      type:
      - str
    - description: 'A streaming job object. The properties specified here will overwrite
        the

        corresponding properties in the existing streaming job (ie. Those properties
        will be updated).

        Any properties that are set to null here will mean that the corresponding
        property in the

        existing input will remain the same and not change as a result of this PATCH
        operation.'
      id: streaming_job
      isRequired: true
      type:
      - stream_analytics_management_client.models.StreamingJob
    - description: 'The ETag of the streaming job. Omit this value to always overwrite
        the current

        record set. Specify the last-seen ETag value to prevent accidentally overwriting
        concurrent

        changes.'
      id: if_match
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: StreamingJob, or the result of cls(response)
      type:
      - stream_analytics_management_client.models.StreamingJob
  type: method
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.update
- class: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.models
  langs:
  - python
  module: azure.mgmt.streamanalytics.aio.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.streamanalytics.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\streamanalytics\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.models
references:
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_create_or_replace
  isExternal: false
  name: 'begin_create_or_replace(resource_group_name: str, job_name: str, streaming_job:
    azure.mgmt.streamanalytics.models._models_py3.StreamingJob, if_match: typing.Union[str,
    NoneType] = None, if_none_match: typing.Union[str, NoneType] = None, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.StreamingJob'')]'
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_create_or_replace
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, job_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_delete
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_start
  isExternal: false
  name: 'begin_start(resource_group_name: str, job_name: str, start_job_parameters:
    typing.Union[_ForwardRef(''models.StartStreamingJobParameters''), NoneType] =
    None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_start
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_stop
  isExternal: false
  name: 'begin_stop(resource_group_name: str, job_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.begin_stop
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, job_name: str, expand: typing.Union[str, NoneType]
    = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.StreamingJob'
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.get
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list
  isExternal: false
  name: 'list(expand: typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.StreamingJobListResult'')]'
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list_by_resource_group
  isExternal: false
  name: 'list_by_resource_group(resource_group_name: str, expand: typing.Union[str,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.StreamingJobListResult'')]'
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.list_by_resource_group
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.update
  isExternal: false
  name: 'update(resource_group_name: str, job_name: str, streaming_job: azure.mgmt.streamanalytics.models._models_py3.StreamingJob,
    if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.streamanalytics.models._models_py3.StreamingJob'
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.update
- fullName: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations
  uid: azure.mgmt.streamanalytics.aio.operations.StreamingJobsOperations.models
- fullName: azure.core.polling.AsyncLROPoller[stream_analytics_management_client.models.StreamingJob]
  name: AsyncLROPoller[StreamingJob]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: stream_analytics_management_client.models.StreamingJob
    name: StreamingJob
    uid: stream_analytics_management_client.models.StreamingJob
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[stream_analytics_management_client.models.StreamingJob]
- fullName: azure.core.polling.AsyncLROPoller[None]
  name: AsyncLROPoller[None]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[None]
- fullName: azure.core.async_paging.AsyncItemPaged[stream_analytics_management_client.models.StreamingJobListResult]
  name: AsyncItemPaged[StreamingJobListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: stream_analytics_management_client.models.StreamingJobListResult
    name: StreamingJobListResult
    uid: stream_analytics_management_client.models.StreamingJobListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[stream_analytics_management_client.models.StreamingJobListResult]
