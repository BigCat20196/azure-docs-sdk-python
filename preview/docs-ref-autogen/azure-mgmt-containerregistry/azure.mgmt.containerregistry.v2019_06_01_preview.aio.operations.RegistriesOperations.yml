### YamlMime:PythonClass
uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations
name: RegistriesOperations
fullName: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations
module: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations
inheritances:
- builtins.object
summary: 'RegistriesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: RegistriesOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.begin_create
  name: begin_create
  summary: Creates a container registry with the specified parameters.
  signature: 'begin_create(resource_group_name: str, registry_name: str, registry:
    azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Registry,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Registry]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: registry
    description: The parameters for creating a container registry.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.Registry>
  return:
    description: An instance of AsyncLROPoller that returns either Registry or the
      result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.Registry>]
  exceptions:
  - 'type: azure.core.exceptions.HttpResponseError'
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.begin_delete
  name: begin_delete
  summary: Deletes a container registry.
  signature: 'begin_delete(resource_group_name: str, registry_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - 'type: azure.core.exceptions.HttpResponseError'
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.begin_generate_credentials
  name: begin_generate_credentials
  summary: Generate keys for a token of a specified container registry.
  signature: 'begin_generate_credentials(resource_group_name: str, registry_name:
    str, generate_credentials_parameters: azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.GenerateCredentialsParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.GenerateCredentialsResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: generate_credentials_parameters
    description: The parameters for generating credentials.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.GenerateCredentialsParameters>
  return:
    description: An instance of AsyncLROPoller that returns either GenerateCredentialsResult
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.GenerateCredentialsResult>]
  exceptions:
  - 'type: azure.core.exceptions.HttpResponseError'
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.begin_import_image
  name: begin_import_image
  summary: Copies an image to this container registry from the specified container
    registry.
  signature: 'begin_import_image(resource_group_name: str, registry_name: str, parameters:
    azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.ImportImageParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The parameters specifying the image to copy and the source container

      registry.'
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.ImportImageParameters>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - 'type: azure.core.exceptions.HttpResponseError'
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.begin_schedule_run
  name: begin_schedule_run
  summary: Schedules a new run based on the request parameters and add it to the run
    queue.
  signature: 'begin_schedule_run(resource_group_name: str, registry_name: str, run_request:
    azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.RunRequest,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Run]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: run_request
    description: The parameters of a run that needs to scheduled.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RunRequest>
  return:
    description: An instance of AsyncLROPoller that returns either Run or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.Run>]
  exceptions:
  - 'type: azure.core.exceptions.HttpResponseError'
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.begin_update
  name: begin_update
  summary: Updates a container registry with the specified parameters.
  signature: 'begin_update(resource_group_name: str, registry_name: str, registry_update_parameters:
    azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.RegistryUpdateParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Registry]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: registry_update_parameters
    description: The parameters for updating a container registry.
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegistryUpdateParameters>
  return:
    description: An instance of AsyncLROPoller that returns either Registry or the
      result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.Registry>]
  exceptions:
  - 'type: azure.core.exceptions.HttpResponseError'
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.check_name_availability
  name: check_name_availability
  summary: 'Checks whether the container registry name is available for use. The name
    must contain only

    alphanumeric characters, be globally unique, and between 5 and 50 characters in
    length.'
  signature: 'check_name_availability(registry_name_check_request: azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.RegistryNameCheckRequest,
    **kwargs) -> azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.RegistryNameStatus'
  parameters:
  - name: registry_name_check_request
    description: 'The object containing information for the availability

      request.'
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegistryNameCheckRequest>
  return:
    description: RegistryNameStatus, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegistryNameStatus>
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.get
  name: get
  summary: Gets the properties of the specified container registry.
  signature: 'get(resource_group_name: str, registry_name: str, **kwargs) -> azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Registry'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Registry, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.Registry>
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.get_build_source_upload_url
  name: get_build_source_upload_url
  summary: Get the upload location for the user to be able to upload the source.
  signature: 'get_build_source_upload_url(resource_group_name: str, registry_name:
    str, **kwargs) -> azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.SourceUploadDefinition'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SourceUploadDefinition, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.SourceUploadDefinition>
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.list
  name: list
  summary: Lists all the container registries under the specified subscription.
  signature: list(**kwargs) -> Asynctyping.Iterable[azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Registrytyping.ListResult]
  return:
    description: An iterator like instance of either RegistryListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegistryListResult>]
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: Lists all the container registries under the specified resource group.
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs) -> Asynctyping.Iterable[azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Registrytyping.ListResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An iterator like instance of either RegistryListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegistryListResult>]
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.list_credentials
  name: list_credentials
  summary: Lists the login credentials for the specified container registry.
  signature: 'list_credentials(resource_group_name: str, registry_name: str, **kwargs)
    -> azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Registrytyping.ListCredentialsResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: RegistryListCredentialsResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegistryListCredentialsResult>
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.list_usages
  name: list_usages
  summary: Gets the quota usages for the specified container registry.
  signature: 'list_usages(resource_group_name: str, registry_name: str, **kwargs)
    -> azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.RegistryUsagetyping.ListResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: RegistryUsageListResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegistryUsageListResult>
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.regenerate_credential
  name: regenerate_credential
  summary: Regenerates one of the login credentials for the specified container registry.
  signature: 'regenerate_credential(resource_group_name: str, registry_name: str,
    regenerate_credential_parameters: azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.RegenerateCredentialParameters,
    **kwargs) -> azure.mgmt.containerregistry.v2019_06_01_preview.models._models_py3.Registrytyping.ListCredentialsResult'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group to which the container registry

      belongs.'
    isRequired: true
    types:
    - <xref:str>
  - name: registry_name
    description: The name of the container registry.
    isRequired: true
    types:
    - <xref:str>
  - name: regenerate_credential_parameters
    description: "Specifies name of the password which should be\nregenerated \u2013\
      \ password or password2."
    isRequired: true
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegenerateCredentialParameters>
  return:
    description: RegistryListCredentialsResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.containerregistry.v2019_06_01_preview.models.RegistryListCredentialsResult>
attributes:
- uid: azure.mgmt.containerregistry.v2019_06_01_preview.aio.operations.RegistriesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.containerregistry.v2019_06_01_preview.models'
    from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\containerregistry\\v2019_06_01_preview\\models\\__init__.py'>
