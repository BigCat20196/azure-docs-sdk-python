### YamlMime:PythonClass
uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations
name: ResourcesOperations
fullName: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations
module: azure.mgmt.resource.resources.v2019_08_01.operations
inheritances:
- builtins.object
summary: 'ResourcesOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: ResourcesOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: "Creates a resource.\n\n   param resource_group_name:\n      The name of\
    \ the resource group for the resource. The name is case\n\n\ninsensitive.\n  \
    \ type resource_group_name:\n      str\n\n   param resource_provider_namespace:\n\
    \      The namespace of the resource provider.\n\n   type resource_provider_namespace:\n\
    \      str\n\n   param parent_resource_path:\n      The parent resource identity.\n\
    \n   type parent_resource_path:\n      str\n\n   param resource_type:\n      The\
    \ resource type of the resource to create.\n\n   type resource_type:\n      str\n\
    \n   param resource_name:\n      The name of the resource to create.\n\n   type\
    \ resource_name:\n      str\n\n   param api_version:\n      The API version to\
    \ use for the operation.\n\n   type api_version:\n      str\n\n   param parameters:\n\
    \      Parameters for creating or updating the resource.\n\n   type parameters:\n\
    \      ~azure.mgmt.resource.resources.v2019_08_01.models.GenericResource\n\n \
    \  keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either GenericResource or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.resource.resources.v2019_08_01.models.GenericResource]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  signature: begin_create_or_update(resource_group_name, resource_provider_namespace,
    parent_resource_path, resource_type, resource_name, api_version, parameters, **kwargs)
  parameters:
  - name: resource_group_name
    isRequired: true
  - name: resource_provider_namespace
    isRequired: true
  - name: parent_resource_path
    isRequired: true
  - name: resource_type
    isRequired: true
  - name: resource_name
    isRequired: true
  - name: api_version
    isRequired: true
  - name: parameters
    isRequired: true
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.begin_create_or_update_by_id
  name: begin_create_or_update_by_id
  summary: "Create a resource by ID.\n\n   param resource_id:\n      The fully qualified\
    \ ID of the resource, including the resource name and\n\n\nresource type. Use\
    \ the format, /subscriptions/{guid}/resourceGroups/{resource-group-\nname}/{resource-provider-namespace}/{resource-type}/{resource-name}.\n\
    \n\n   type resource_id:\n      str\n\n   param api_version:\n      The API version\
    \ to use for the operation.\n\n   type api_version:\n      str\n\n   param parameters:\n\
    \      Create or update resource parameters.\n\n   type parameters:\n      ~azure.mgmt.resource.resources.v2019_08_01.models.GenericResource\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either GenericResource or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.resource.resources.v2019_08_01.models.GenericResource]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  signature: begin_create_or_update_by_id(resource_id, api_version, parameters, **kwargs)
  parameters:
  - name: resource_id
    isRequired: true
  - name: api_version
    isRequired: true
  - name: parameters
    isRequired: true
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.begin_delete
  name: begin_delete
  summary: "Deletes a resource.\n\n   param resource_group_name:\n      The name of\
    \ the resource group that contains the resource to\n\n\ndelete. The name is case\
    \ insensitive.\n   type resource_group_name:\n      str\n\n   param resource_provider_namespace:\n\
    \      The namespace of the resource provider.\n\n   type resource_provider_namespace:\n\
    \      str\n\n   param parent_resource_path:\n      The parent resource identity.\n\
    \n   type parent_resource_path:\n      str\n\n   param resource_type:\n      The\
    \ resource type.\n\n   type resource_type:\n      str\n\n   param resource_name:\n\
    \      The name of the resource to delete.\n\n   type resource_name:\n      str\n\
    \n   param api_version:\n      The API version to use for the operation.\n\n \
    \  type api_version:\n      str\n\n   keyword callable cls:\n      A custom type\
    \ or function that will be passed the direct response\n\n   keyword str continuation_token:\n\
    \      A continuation token to restart a poller from a saved state.\n\n   keyword\
    \ polling:\n      True for ARMPolling, False for no polling, or a\n      polling\
    \ object for personal polling strategy\n\n   paramtype polling:\n      bool or\
    \ ~azure.core.polling.PollingMethod\n\n   keyword int polling_interval:\n    \
    \  Default waiting time between two polls for LRO operations if no Retry-After\
    \ header is present.\n\n   return:\n      An instance of LROPoller that returns\
    \ either None or the result of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[None]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  signature: begin_delete(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, api_version, **kwargs)
  parameters:
  - name: resource_group_name
    isRequired: true
  - name: resource_provider_namespace
    isRequired: true
  - name: parent_resource_path
    isRequired: true
  - name: resource_type
    isRequired: true
  - name: resource_name
    isRequired: true
  - name: api_version
    isRequired: true
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.begin_delete_by_id
  name: begin_delete_by_id
  summary: "Deletes a resource by ID.\n\n   param resource_id:\n      The fully qualified\
    \ ID of the resource, including the resource name and\n\n\nresource type. Use\
    \ the format, /subscriptions/{guid}/resourceGroups/{resource-group-\nname}/{resource-provider-namespace}/{resource-type}/{resource-name}.\n\
    \n\n   type resource_id:\n      str\n\n   param api_version:\n      The API version\
    \ to use for the operation.\n\n   type api_version:\n      str\n\n   keyword callable\
    \ cls:\n      A custom type or function that will be passed the direct response\n\
    \n   keyword str continuation_token:\n      A continuation token to restart a\
    \ poller from a saved state.\n\n   keyword polling:\n      True for ARMPolling,\
    \ False for no polling, or a\n      polling object for personal polling strategy\n\
    \n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\n \
    \  keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either None or the result of cls(response)\n\
    \n   rtype:\n      ~azure.core.polling.LROPoller[None]\n\n   raises ~azure.core.exceptions.HttpResponseError:"
  signature: begin_delete_by_id(resource_id, api_version, **kwargs)
  parameters:
  - name: resource_id
    isRequired: true
  - name: api_version
    isRequired: true
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.begin_move_resources
  name: begin_move_resources
  summary: "Moves resources from one resource group to another resource group.\n\n\
    \   The resources to move must be in the same source resource group. The target\
    \ resource group may\n\n\nbe in a different subscription. When moving resources,\
    \ both the source group and the target\ngroup are locked for the duration of the\
    \ operation. Write and delete operations are blocked on\nthe groups until the\
    \ move completes.\n\n      param source_resource_group_name:\n         The name\
    \ of the resource group containing the resources to\n\n   move.\n      type source_resource_group_name:\n\
    \         str\n\n      param parameters:\n         Parameters for moving resources.\n\
    \n      type parameters:\n         ~azure.mgmt.resource.resources.v2019_08_01.models.ResourcesMoveInfo\n\
    \n      keyword callable cls:\n         A custom type or function that will be\
    \ passed the direct response\n\n      keyword str continuation_token:\n      \
    \   A continuation token to restart a poller from a saved state.\n\n      keyword\
    \ polling:\n         True for ARMPolling, False for no polling, or a\n       \
    \  polling object for personal polling strategy\n\n      paramtype polling:\n\
    \         bool or ~azure.core.polling.PollingMethod\n\n      keyword int polling_interval:\n\
    \         Default waiting time between two polls for LRO operations if no Retry-After\
    \ header is present.\n\n      return:\n         An instance of LROPoller that\
    \ returns either None or the result of cls(response)\n\n      rtype:\n       \
    \  ~azure.core.polling.LROPoller[None]\n\n      raises ~azure.core.exceptions.HttpResponseError:"
  signature: begin_move_resources(source_resource_group_name, parameters, **kwargs)
  parameters:
  - name: source_resource_group_name
    isRequired: true
  - name: parameters
    isRequired: true
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.begin_update
  name: begin_update
  summary: "Updates a resource.\n\n   param resource_group_name:\n      The name of\
    \ the resource group for the resource. The name is case\n\n\ninsensitive.\n  \
    \ type resource_group_name:\n      str\n\n   param resource_provider_namespace:\n\
    \      The namespace of the resource provider.\n\n   type resource_provider_namespace:\n\
    \      str\n\n   param parent_resource_path:\n      The parent resource identity.\n\
    \n   type parent_resource_path:\n      str\n\n   param resource_type:\n      The\
    \ resource type of the resource to update.\n\n   type resource_type:\n      str\n\
    \n   param resource_name:\n      The name of the resource to update.\n\n   type\
    \ resource_name:\n      str\n\n   param api_version:\n      The API version to\
    \ use for the operation.\n\n   type api_version:\n      str\n\n   param parameters:\n\
    \      Parameters for updating the resource.\n\n   type parameters:\n      ~azure.mgmt.resource.resources.v2019_08_01.models.GenericResource\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either GenericResource or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.resource.resources.v2019_08_01.models.GenericResource]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  signature: begin_update(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, api_version, parameters, **kwargs)
  parameters:
  - name: resource_group_name
    isRequired: true
  - name: resource_provider_namespace
    isRequired: true
  - name: parent_resource_path
    isRequired: true
  - name: resource_type
    isRequired: true
  - name: resource_name
    isRequired: true
  - name: api_version
    isRequired: true
  - name: parameters
    isRequired: true
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.begin_update_by_id
  name: begin_update_by_id
  summary: "Updates a resource by ID.\n\n   param resource_id:\n      The fully qualified\
    \ ID of the resource, including the resource name and\n\n\nresource type. Use\
    \ the format, /subscriptions/{guid}/resourceGroups/{resource-group-\nname}/{resource-provider-namespace}/{resource-type}/{resource-name}.\n\
    \n\n   type resource_id:\n      str\n\n   param api_version:\n      The API version\
    \ to use for the operation.\n\n   type api_version:\n      str\n\n   param parameters:\n\
    \      Update resource parameters.\n\n   type parameters:\n      ~azure.mgmt.resource.resources.v2019_08_01.models.GenericResource\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.PollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of LROPoller that returns either GenericResource or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.LROPoller[~azure.mgmt.resource.resources.v2019_08_01.models.GenericResource]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  signature: begin_update_by_id(resource_id, api_version, parameters, **kwargs)
  parameters:
  - name: resource_id
    isRequired: true
  - name: api_version
    isRequired: true
  - name: parameters
    isRequired: true
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.begin_validate_move_resources
  name: begin_validate_move_resources
  summary: "Validates whether resources can be moved from one resource group to another\
    \ resource group.\n\n   This operation checks whether the specified resources\
    \ can be moved to the target. The resources\n\n\nto move must be in the same source\
    \ resource group. The target resource group may be in a\ndifferent subscription.\
    \ If validation succeeds, it returns HTTP response code 204 (no content).\nIf\
    \ validation fails, it returns HTTP response code 409 (Conflict) with an error\
    \ message.\nRetrieve the URL in the Location header value to check the result\
    \ of the long-running\noperation.\n\n      param source_resource_group_name:\n\
    \         The name of the resource group containing the resources to\n\n   validate\
    \ for move.\n      type source_resource_group_name:\n         str\n\n      param\
    \ parameters:\n         Parameters for moving resources.\n\n      type parameters:\n\
    \         ~azure.mgmt.resource.resources.v2019_08_01.models.ResourcesMoveInfo\n\
    \n      keyword callable cls:\n         A custom type or function that will be\
    \ passed the direct response\n\n      keyword str continuation_token:\n      \
    \   A continuation token to restart a poller from a saved state.\n\n      keyword\
    \ polling:\n         True for ARMPolling, False for no polling, or a\n       \
    \  polling object for personal polling strategy\n\n      paramtype polling:\n\
    \         bool or ~azure.core.polling.PollingMethod\n\n      keyword int polling_interval:\n\
    \         Default waiting time between two polls for LRO operations if no Retry-After\
    \ header is present.\n\n      return:\n         An instance of LROPoller that\
    \ returns either None or the result of cls(response)\n\n      rtype:\n       \
    \  ~azure.core.polling.LROPoller[None]\n\n      raises ~azure.core.exceptions.HttpResponseError:"
  signature: begin_validate_move_resources(source_resource_group_name, parameters,
    **kwargs)
  parameters:
  - name: source_resource_group_name
    isRequired: true
  - name: parameters
    isRequired: true
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.check_existence
  name: check_existence
  summary: Checks whether a resource exists.
  signature: check_existence(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, api_version, **kwargs)
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group containing the resource to check.

      The name is case insensitive.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The resource provider of the resource to check.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to check whether it exists.
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.check_existence_by_id
  name: check_existence_by_id
  summary: Checks by ID whether a resource exists.
  signature: check_existence_by_id(resource_id, api_version, **kwargs)
  parameters:
  - name: resource_id
    description: 'The fully qualified ID of the resource, including the resource name
      and

      resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-

      name}/{resource-provider-namespace}/{resource-type}/{resource-name}.'
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.get
  name: get
  summary: Gets a resource.
  signature: get(resource_group_name, resource_provider_namespace, parent_resource_path,
    resource_type, resource_name, api_version, **kwargs)
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group containing the resource to get. The

      name is case insensitive.'
    isRequired: true
    types:
    - <xref:str>
  - name: resource_provider_namespace
    description: The namespace of the resource provider.
    isRequired: true
    types:
    - <xref:str>
  - name: parent_resource_path
    description: The parent resource identity.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_type
    description: The resource type of the resource.
    isRequired: true
    types:
    - <xref:str>
  - name: resource_name
    description: The name of the resource to get.
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: GenericResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2019_08_01.models.GenericResource>
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.get_by_id
  name: get_by_id
  summary: Gets a resource by ID.
  signature: get_by_id(resource_id, api_version, **kwargs)
  parameters:
  - name: resource_id
    description: 'The fully qualified ID of the resource, including the resource name
      and

      resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-

      name}/{resource-provider-namespace}/{resource-type}/{resource-name}.'
    isRequired: true
    types:
    - <xref:str>
  - name: api_version
    description: The API version to use for the operation.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: GenericResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.resource.resources.v2019_08_01.models.GenericResource>
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.list
  name: list
  summary: "Get all the resources in a subscription.\n\n   param filter:\n      The\
    \ filter to apply on the operation.:code:*<br>*:code:>>`<<<br>`The properties\
    \ you\n\n\ncan use for eq (equals) or ne (not equals) are: location, resourceType,\
    \ name, resourceGroup,\nidentity, identity/principalId, plan, plan/publisher,\
    \ plan/product, plan/name, plan/version,\nand plan/promotionCode.:code:*<br>*`<br>`For\
    \ example, to filter by a resource type, use:\n$filter=resourceType eq 'Microsoft.Network/virtualNetworks':code:`<br>``<br>`You\
    \ can use\nsubstringof(value, property) in the filter. The properties you can\
    \ use for substring are: name\nand resourceGroup.:code:`<br>``<br>`For example,\
    \ to get all resources with 'demo'\nanywhere in the name, use: $filter=substringof('demo',\
    \ name):code:`<br>``<br>`You can\nlink more than one substringof together by adding\
    \ and/or operators.:code:`<br>``<br>`You\ncan filter by tag names and values.\
    \ For example, to filter for a tag name and value, use\n$filter=tagName eq 'tag1'\
    \ and tagValue eq 'Value1'. When you filter by a tag name and value,\nthe tags\
    \ for each resource are not returned in the results.:code:`<br>`:code:>>`<<<br>`You\
    \ can use\nsome properties together when filtering. The combinations you can use\
    \ are: substringof and/or\nresourceType, plan and plan/publisher and plan/name,\
    \ identity and identity/principalId.\n\n\n\n   type filter:\n      str\n\n   param\
    \ expand:\n      Comma-separated list of additional properties to be included\
    \ in the response.\n\n\nValid values include `createdTime`, `changedTime` and\
    \ `provisioningState`. For example,\n`$expand=createdTime,changedTime`.\n\n\n\
    \   type expand:\n      str\n\n   param top:\n      The number of results to return.\
    \ If null is passed, returns all resource groups.\n\n   type top:\n      int\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   return:\n      An iterator like instance of either\
    \ ResourceListResult or the result of cls(response)\n\n   rtype:\n      ~azure.core.paging.ItemPaged[~azure.mgmt.resource.resources.v2019_08_01.models.ResourceListResult]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  signature: list(filter=None, expand=None, top=None, **kwargs)
  parameters:
  - name: filter
    defaultValue: None
  - name: expand
    defaultValue: None
  - name: top
    defaultValue: None
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: "Get all the resources for a resource group.\n\n   param resource_group_name:\n\
    \      The resource group with the resources to get.\n\n   type resource_group_name:\n\
    \      str\n\n   param filter:\n      The filter to apply on the operation.:code:*<br>*:code:>>`<<<br>`The\
    \ properties you\n\n\ncan use for eq (equals) or ne (not equals) are: location,\
    \ resourceType, name, resourceGroup,\nidentity, identity/principalId, plan, plan/publisher,\
    \ plan/product, plan/name, plan/version,\nand plan/promotionCode.:code:*<br>*`<br>`For\
    \ example, to filter by a resource type, use:\n$filter=resourceType eq 'Microsoft.Network/virtualNetworks':code:`<br>``<br>`You\
    \ can use\nsubstringof(value, property) in the filter. The properties you can\
    \ use for substring are: name\nand resourceGroup.:code:`<br>``<br>`For example,\
    \ to get all resources with 'demo'\nanywhere in the name, use: $filter=substringof('demo',\
    \ name):code:`<br>``<br>`You can\nlink more than one substringof together by adding\
    \ and/or operators.:code:`<br>``<br>`You\ncan filter by tag names and values.\
    \ For example, to filter for a tag name and value, use\n$filter=tagName eq 'tag1'\
    \ and tagValue eq 'Value1'. When you filter by a tag name and value,\nthe tags\
    \ for each resource are not returned in the results.:code:`<br>`:code:>>`<<<br>`You\
    \ can use\nsome properties together when filtering. The combinations you can use\
    \ are: substringof and/or\nresourceType, plan and plan/publisher and plan/name,\
    \ identity and identity/principalId.\n\n\n\n   type filter:\n      str\n\n   param\
    \ expand:\n      Comma-separated list of additional properties to be included\
    \ in the response.\n\n\nValid values include `createdTime`, `changedTime` and\
    \ `provisioningState`. For example,\n`$expand=createdTime,changedTime`.\n\n\n\
    \   type expand:\n      str\n\n   param top:\n      The number of results to return.\
    \ If null is passed, returns all resources.\n\n   type top:\n      int\n\n   keyword\
    \ callable cls:\n      A custom type or function that will be passed the direct\
    \ response\n\n   return:\n      An iterator like instance of either ResourceListResult\
    \ or the result of cls(response)\n\n   rtype:\n      ~azure.core.paging.ItemPaged[~azure.mgmt.resource.resources.v2019_08_01.models.ResourceListResult]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  signature: list_by_resource_group(resource_group_name, filter=None, expand=None,
    top=None, **kwargs)
  parameters:
  - name: resource_group_name
    isRequired: true
  - name: filter
    defaultValue: None
  - name: expand
    defaultValue: None
  - name: top
    defaultValue: None
attributes:
- uid: azure.mgmt.resource.resources.v2019_08_01.operations.ResourcesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.resource.resources.v2019_08_01.models' from
    'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\resources\\v2019_08_01\\models\\__init__.py'>
