### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update_at_subscription_scope
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete_at_subscription_scope
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.calculate_template_hash
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel_at_subscription_scope
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence_at_subscription_scope
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template_at_subscription_scope
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get_at_subscription_scope
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_at_subscription_scope
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_by_resource_group
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate_at_subscription_scope
  - azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.models
  class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: DeploymentsOperations
  summary: 'DeploymentsOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: DeploymentsOperations(client, config, serializer, deserializer) -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'begin_create_or_update(resource_group_name: str, deployment_name: str, parameters:
    azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.DeploymentExtended'')]'
  namewithoutparameters: begin_create_or_update
  summary: 'Deploys resources to a resource group.


    You can provide the template and parameters directly in the request or link to
    JSON files.'
  syntax:
    content: 'begin_create_or_update(resource_group_name: str, deployment_name: str,
      parameters: azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.DeploymentExtended'')]'
    parameters:
    - description: 'The name of the resource group to deploy the resources to. The
        name

        is case insensitive. The resource group must already exist.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Additional parameters supplied to the operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.Deployment
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either DeploymentExtended
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExtended]
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'begin_create_or_update_at_subscription_scope(deployment_name: str, parameters:
    azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.DeploymentExtended'')]'
  namewithoutparameters: begin_create_or_update_at_subscription_scope
  summary: 'Deploys resources at subscription scope.


    You can provide the template and parameters directly in the request or link to
    JSON files.'
  syntax:
    content: 'begin_create_or_update_at_subscription_scope(deployment_name: str, parameters:
      azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.DeploymentExtended'')]'
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Additional parameters supplied to the operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.Deployment
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either DeploymentExtended
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExtended]
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update_at_subscription_scope
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'begin_delete(resource_group_name: str, deployment_name: str, **kwargs) ->
    azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_delete
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted. Deleting a
    template

    deployment removes the associated deployment operations. Deleting a template deployment
    does

    not affect the state of the resource group. This is an asynchronous operation
    that returns a

    status of 202 until the template deployment is successfully deleted. The Location
    response

    header contains the URI that is used to obtain the status of the process. While
    the process is

    running, a call to the URI in the Location header returns a status of 202. When
    the process

    finishes, the URI in the Location header returns a status of 204 on success. If
    the

    asynchronous request failed, the URI in the Location header returns an error-level
    status code.'
  syntax:
    content: 'begin_delete(resource_group_name: str, deployment_name: str, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: 'The name of the resource group with the deployment to delete.
        The

        name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment to delete.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'begin_delete_at_subscription_scope(deployment_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_delete_at_subscription_scope
  summary: 'Deletes a deployment from the deployment history.


    A template deployment that is currently running cannot be deleted. Deleting a
    template

    deployment removes the associated deployment operations. This is an asynchronous
    operation that

    returns a status of 202 until the template deployment is successfully deleted.
    The Location

    response header contains the URI that is used to obtain the status of the process.
    While the

    process is running, a call to the URI in the Location header returns a status
    of 202. When the

    process finishes, the URI in the Location header returns a status of 204 on success.
    If the

    asynchronous request failed, the URI in the Location header returns an error-level
    status code.'
  syntax:
    content: 'begin_delete_at_subscription_scope(deployment_name: str, **kwargs) ->
      azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The name of the deployment to delete.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete_at_subscription_scope
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.calculate_template_hash
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'calculate_template_hash(template: object, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.TemplateHashResult'
  namewithoutparameters: calculate_template_hash
  summary: Calculate the hash of the given template.
  syntax:
    content: 'calculate_template_hash(template: object, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.TemplateHashResult'
    parameters:
    - description: The template provided to calculate hash.
      id: template
      isRequired: true
      type:
      - object
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: TemplateHashResult, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.TemplateHashResult
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.calculate_template_hash
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'cancel(resource_group_name: str, deployment_name: str, **kwargs) -> None'
  namewithoutparameters: cancel
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted or Running.
    After the

    deployment is canceled, the provisioningState is set to Canceled. Canceling a
    template

    deployment stops the currently running template deployment and leaves the resource
    group

    partially deployed.'
  syntax:
    content: 'cancel(resource_group_name: str, deployment_name: str, **kwargs) ->
      None'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment to cancel.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'cancel_at_subscription_scope(deployment_name: str, **kwargs) -> None'
  namewithoutparameters: cancel_at_subscription_scope
  summary: 'Cancels a currently running template deployment.


    You can cancel a deployment only if the provisioningState is Accepted or Running.
    After the

    deployment is canceled, the provisioningState is set to Canceled. Canceling a
    template

    deployment stops the currently running template deployment and leaves the resources
    partially

    deployed.'
  syntax:
    content: 'cancel_at_subscription_scope(deployment_name: str, **kwargs) -> None'
    parameters:
    - description: The name of the deployment to cancel.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel_at_subscription_scope
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'check_existence(resource_group_name: str, deployment_name: str, **kwargs)
    -> bool'
  namewithoutparameters: check_existence
  summary: Checks whether the deployment exists.
  syntax:
    content: 'check_existence(resource_group_name: str, deployment_name: str, **kwargs)
      -> bool'
    parameters:
    - description: 'The name of the resource group with the deployment to check. The

        name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment to check.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: bool, or the result of cls(response)
      type:
      - bool
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'check_existence_at_subscription_scope(deployment_name: str, **kwargs) ->
    bool'
  namewithoutparameters: check_existence_at_subscription_scope
  summary: Checks whether the deployment exists.
  syntax:
    content: 'check_existence_at_subscription_scope(deployment_name: str, **kwargs)
      -> bool'
    parameters:
    - description: The name of the deployment to check.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: bool, or the result of cls(response)
      type:
      - bool
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence_at_subscription_scope
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'export_template(resource_group_name: str, deployment_name: str, **kwargs)
    -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExportResult'
  namewithoutparameters: export_template
  summary: Exports the template used for specified deployment.
  syntax:
    content: 'export_template(resource_group_name: str, deployment_name: str, **kwargs)
      -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExportResult'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment from which to get the template.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DeploymentExportResult, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExportResult
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'export_template_at_subscription_scope(deployment_name: str, **kwargs) ->
    azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExportResult'
  namewithoutparameters: export_template_at_subscription_scope
  summary: Exports the template used for specified deployment.
  syntax:
    content: 'export_template_at_subscription_scope(deployment_name: str, **kwargs)
      -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExportResult'
    parameters:
    - description: The name of the deployment from which to get the template.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DeploymentExportResult, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExportResult
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template_at_subscription_scope
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'get(resource_group_name: str, deployment_name: str, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExtended'
  namewithoutparameters: get
  summary: Gets a deployment.
  syntax:
    content: 'get(resource_group_name: str, deployment_name: str, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExtended'
    parameters:
    - description: The name of the resource group. The name is case insensitive.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment to get.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DeploymentExtended, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExtended
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'get_at_subscription_scope(deployment_name: str, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExtended'
  namewithoutparameters: get_at_subscription_scope
  summary: Gets a deployment.
  syntax:
    content: 'get_at_subscription_scope(deployment_name: str, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExtended'
    parameters:
    - description: The name of the deployment to get.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DeploymentExtended, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExtended
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get_at_subscription_scope
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'list_at_subscription_scope(filter: typing.Union[str, NoneType] = None, top:
    typing.Union[int, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.DeploymentListResult'')]'
  namewithoutparameters: list_at_subscription_scope
  summary: Get all the deployments for a subscription.
  syntax:
    content: 'list_at_subscription_scope(filter: typing.Union[str, NoneType] = None,
      top: typing.Union[int, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.DeploymentListResult'')]'
    parameters:
    - description: 'The filter to apply on the operation. For example, you can use

        $filter=provisioningState eq ''{state}''.'
      id: filter
      isRequired: true
      type:
      - str
    - description: The number of results to get. If null is passed, returns all deployments.
      id: top
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either DeploymentListResult or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.resource.resources.v2019_03_01.models.DeploymentListResult]
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_at_subscription_scope
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'list_by_resource_group(resource_group_name: str, filter: typing.Union[str,
    NoneType] = None, top: typing.Union[int, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.DeploymentListResult'')]'
  namewithoutparameters: list_by_resource_group
  summary: Get all the deployments for a resource group.
  syntax:
    content: 'list_by_resource_group(resource_group_name: str, filter: typing.Union[str,
      NoneType] = None, top: typing.Union[int, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.DeploymentListResult'')]'
    parameters:
    - description: 'The name of the resource group with the deployments to get. The

        name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The filter to apply on the operation. For example, you can use

        $filter=provisioningState eq ''{state}''.'
      id: filter
      isRequired: true
      type:
      - str
    - description: The number of results to get. If null is passed, returns all deployments.
      id: top
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either DeploymentListResult or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.resource.resources.v2019_03_01.models.DeploymentListResult]
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_by_resource_group
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'validate(resource_group_name: str, deployment_name: str, parameters: azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment,
    **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentValidateResult'
  namewithoutparameters: validate
  summary: 'Validates whether the specified template is syntactically correct and
    will be accepted by Azure

    Resource Manager..'
  syntax:
    content: 'validate(resource_group_name: str, deployment_name: str, parameters:
      azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment, **kwargs)
      -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentValidateResult'
    parameters:
    - description: 'The name of the resource group the template will be deployed to.

        The name is case insensitive.'
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Parameters to validate.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.Deployment
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DeploymentValidateResult, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.DeploymentValidateResult
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate_at_subscription_scope
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: 'validate_at_subscription_scope(deployment_name: str, parameters: azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment,
    **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentValidateResult'
  namewithoutparameters: validate_at_subscription_scope
  summary: 'Validates whether the specified template is syntactically correct and
    will be accepted by Azure

    Resource Manager..'
  syntax:
    content: 'validate_at_subscription_scope(deployment_name: str, parameters: azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment,
      **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentValidateResult'
    parameters:
    - description: The name of the deployment.
      id: deployment_name
      isRequired: true
      type:
      - str
    - description: Parameters to validate.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.Deployment
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DeploymentValidateResult, or the result of cls(response)
      type:
      - azure.mgmt.resource.resources.v2019_03_01.models.DeploymentValidateResult
  type: method
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate_at_subscription_scope
- class: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.models
  langs:
  - python
  module: azure.mgmt.resource.resources.v2019_03_01.aio.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.resource.resources.v2019_03_01.models' from
      'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\resource\\resources\\v2019_03_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.models
references:
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update
  isExternal: false
  name: 'begin_create_or_update(resource_group_name: str, deployment_name: str, parameters:
    azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.DeploymentExtended'')]'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update_at_subscription_scope
  isExternal: false
  name: 'begin_create_or_update_at_subscription_scope(deployment_name: str, parameters:
    azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.DeploymentExtended'')]'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_create_or_update_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, deployment_name: str, **kwargs) ->
    azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete_at_subscription_scope
  isExternal: false
  name: 'begin_delete_at_subscription_scope(deployment_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.begin_delete_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.calculate_template_hash
  isExternal: false
  name: 'calculate_template_hash(template: object, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.TemplateHashResult'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.calculate_template_hash
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel
  isExternal: false
  name: 'cancel(resource_group_name: str, deployment_name: str, **kwargs) -> None'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel_at_subscription_scope
  isExternal: false
  name: 'cancel_at_subscription_scope(deployment_name: str, **kwargs) -> None'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.cancel_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence
  isExternal: false
  name: 'check_existence(resource_group_name: str, deployment_name: str, **kwargs)
    -> bool'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence_at_subscription_scope
  isExternal: false
  name: 'check_existence_at_subscription_scope(deployment_name: str, **kwargs) ->
    bool'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.check_existence_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template
  isExternal: false
  name: 'export_template(resource_group_name: str, deployment_name: str, **kwargs)
    -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExportResult'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template_at_subscription_scope
  isExternal: false
  name: 'export_template_at_subscription_scope(deployment_name: str, **kwargs) ->
    azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExportResult'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.export_template_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, deployment_name: str, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExtended'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get_at_subscription_scope
  isExternal: false
  name: 'get_at_subscription_scope(deployment_name: str, **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentExtended'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.get_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_at_subscription_scope
  isExternal: false
  name: 'list_at_subscription_scope(filter: typing.Union[str, NoneType] = None, top:
    typing.Union[int, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.DeploymentListResult'')]'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_by_resource_group
  isExternal: false
  name: 'list_by_resource_group(resource_group_name: str, filter: typing.Union[str,
    NoneType] = None, top: typing.Union[int, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.DeploymentListResult'')]'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.list_by_resource_group
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate
  isExternal: false
  name: 'validate(resource_group_name: str, deployment_name: str, parameters: azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment,
    **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentValidateResult'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate_at_subscription_scope
  isExternal: false
  name: 'validate_at_subscription_scope(deployment_name: str, parameters: azure.mgmt.resource.resources.v2019_03_01.models._models_py3.Deployment,
    **kwargs) -> azure.mgmt.resource.resources.v2019_03_01.models._models_py3.DeploymentValidateResult'
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.validate_at_subscription_scope
- fullName: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations
  uid: azure.mgmt.resource.resources.v2019_03_01.aio.operations.DeploymentsOperations.models
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExtended]
  name: AsyncLROPoller[DeploymentExtended]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExtended
    name: DeploymentExtended
    uid: azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExtended
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.resource.resources.v2019_03_01.models.DeploymentExtended]
- fullName: azure.core.polling.AsyncLROPoller[None]
  name: AsyncLROPoller[None]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[None]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.resource.resources.v2019_03_01.models.DeploymentListResult]
  name: AsyncItemPaged[DeploymentListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.resource.resources.v2019_03_01.models.DeploymentListResult
    name: DeploymentListResult
    uid: azure.mgmt.resource.resources.v2019_03_01.models.DeploymentListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.resource.resources.v2019_03_01.models.DeploymentListResult]
