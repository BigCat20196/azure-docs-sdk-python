### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_change_point
  - azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_entire_series
  - azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_last_point
  class: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
  fullName: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.ai.anomalydetector.aio.operations_async
  name: AnomalyDetectorClientOperationsMixin
  summary: ''
  syntax: {}
  type: class
  uid: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
- class: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
  fullName: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_change_point
  langs:
  - python
  module: azure.ai.anomalydetector.aio.operations_async
  name: 'detect_change_point(body: azure.ai.anomalydetector.models._models_py3.ChangePointDetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.ChangePointDetectResponse'
  namewithoutparameters: detect_change_point
  summary: 'Detect change point for the entire series.


    Evaluate change point score of every series point.'
  syntax:
    content: 'detect_change_point(body: azure.ai.anomalydetector.models._models_py3.ChangePointDetectRequest,
      **kwargs) -> azure.ai.anomalydetector.models._models_py3.ChangePointDetectResponse'
    parameters:
    - description: 'Time series points and granularity is needed. Advanced model parameters
        can also

        be set in the request if needed.'
      id: body
      isRequired: true
      type:
      - azure.ai.anomalydetector.models.ChangePointDetectRequest
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ChangePointDetectResponse, or the result of cls(response)
      type:
      - azure.ai.anomalydetector.models.ChangePointDetectResponse
  type: method
  uid: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_change_point
- class: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
  fullName: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_entire_series
  langs:
  - python
  module: azure.ai.anomalydetector.aio.operations_async
  name: 'detect_entire_series(body: azure.ai.anomalydetector.models._models_py3.DetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.EntireDetectResponse'
  namewithoutparameters: detect_entire_series
  summary: 'Detect anomalies for the entire series in batch.


    This operation generates a model using an entire series, each point is detected
    with the same

    model. With this method, points before and after a certain point are used to determine
    whether

    it is an anomaly. The entire detection can give user an overall status of the
    time series.'
  syntax:
    content: 'detect_entire_series(body: azure.ai.anomalydetector.models._models_py3.DetectRequest,
      **kwargs) -> azure.ai.anomalydetector.models._models_py3.EntireDetectResponse'
    parameters:
    - description: 'Time series points and period if needed. Advanced model parameters
        can also be set

        in the request.'
      id: body
      isRequired: true
      type:
      - azure.ai.anomalydetector.models.DetectRequest
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: EntireDetectResponse, or the result of cls(response)
      type:
      - azure.ai.anomalydetector.models.EntireDetectResponse
  type: method
  uid: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_entire_series
- class: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
  fullName: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_last_point
  langs:
  - python
  module: azure.ai.anomalydetector.aio.operations_async
  name: 'detect_last_point(body: azure.ai.anomalydetector.models._models_py3.DetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.LastDetectResponse'
  namewithoutparameters: detect_last_point
  summary: 'Detect anomaly status of the latest point in time series.


    This operation generates a model using points before the latest one. With this
    method, only

    historical points are used to determine whether the target point is an anomaly.
    The latest

    point detecting operation matches the scenario of real-time monitoring of business
    metrics.'
  syntax:
    content: 'detect_last_point(body: azure.ai.anomalydetector.models._models_py3.DetectRequest,
      **kwargs) -> azure.ai.anomalydetector.models._models_py3.LastDetectResponse'
    parameters:
    - description: 'Time series points and period if needed. Advanced model parameters
        can also be set

        in the request.'
      id: body
      isRequired: true
      type:
      - azure.ai.anomalydetector.models.DetectRequest
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: LastDetectResponse, or the result of cls(response)
      type:
      - azure.ai.anomalydetector.models.LastDetectResponse
  type: method
  uid: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_last_point
references:
- fullName: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_change_point
  isExternal: false
  name: 'detect_change_point(body: azure.ai.anomalydetector.models._models_py3.ChangePointDetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.ChangePointDetectResponse'
  parent: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
  uid: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_change_point
- fullName: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_entire_series
  isExternal: false
  name: 'detect_entire_series(body: azure.ai.anomalydetector.models._models_py3.DetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.EntireDetectResponse'
  parent: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
  uid: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_entire_series
- fullName: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_last_point
  isExternal: false
  name: 'detect_last_point(body: azure.ai.anomalydetector.models._models_py3.DetectRequest,
    **kwargs) -> azure.ai.anomalydetector.models._models_py3.LastDetectResponse'
  parent: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin
  uid: azure.ai.anomalydetector.aio.operations_async.AnomalyDetectorClientOperationsMixin.detect_last_point
