### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_create_or_update
  - azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_delete
  - azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_update
  - azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.get
  - azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list
  - azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list_by_resource_group
  - azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.models
  class: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.compute.v2019_07_01.operations
  name: DiskEncryptionSetsOperations
  summary: 'DiskEncryptionSetsOperations operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: DiskEncryptionSetsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
- class: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.compute.v2019_07_01.operations
  name: begin_create_or_update(resource_group_name, disk_encryption_set_name, disk_encryption_set,
    **kwargs)
  namewithoutparameters: begin_create_or_update
  summary: Creates or updates a disk encryption set.
  syntax:
    content: begin_create_or_update(resource_group_name, disk_encryption_set_name,
      disk_encryption_set, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the disk encryption set that is being created. The

        name can''t be changed after the disk encryption set is created. Supported
        characters for the

        name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.'
      id: disk_encryption_set_name
      isRequired: true
      type:
      - str
    - description: 'disk encryption set object supplied in the body of the Put disk

        encryption set operation.'
      id: disk_encryption_set
      isRequired: true
      type:
      - azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSet
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either DiskEncryptionSet
        or the result of cls(response)
      type:
      - azure.core.polling.LROPoller[azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSet]
  type: method
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_create_or_update
- class: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.compute.v2019_07_01.operations
  name: begin_delete(resource_group_name, disk_encryption_set_name, **kwargs)
  namewithoutparameters: begin_delete
  summary: Deletes a disk encryption set.
  syntax:
    content: begin_delete(resource_group_name, disk_encryption_set_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the disk encryption set that is being created. The

        name can''t be changed after the disk encryption set is created. Supported
        characters for the

        name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.'
      id: disk_encryption_set_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_delete
- class: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_update
  langs:
  - python
  module: azure.mgmt.compute.v2019_07_01.operations
  name: begin_update(resource_group_name, disk_encryption_set_name, disk_encryption_set,
    **kwargs)
  namewithoutparameters: begin_update
  summary: Updates (patches) a disk encryption set.
  syntax:
    content: begin_update(resource_group_name, disk_encryption_set_name, disk_encryption_set,
      **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the disk encryption set that is being created. The

        name can''t be changed after the disk encryption set is created. Supported
        characters for the

        name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.'
      id: disk_encryption_set_name
      isRequired: true
      type:
      - str
    - description: 'disk encryption set object supplied in the body of the Patch disk

        encryption set operation.'
      id: disk_encryption_set
      isRequired: true
      type:
      - azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSetUpdate
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either DiskEncryptionSet
        or the result of cls(response)
      type:
      - azure.core.polling.LROPoller[azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSet]
  type: method
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_update
- class: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.get
  langs:
  - python
  module: azure.mgmt.compute.v2019_07_01.operations
  name: get(resource_group_name, disk_encryption_set_name, **kwargs)
  namewithoutparameters: get
  summary: Gets information about a disk encryption set.
  syntax:
    content: get(resource_group_name, disk_encryption_set_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the disk encryption set that is being created. The

        name can''t be changed after the disk encryption set is created. Supported
        characters for the

        name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.'
      id: disk_encryption_set_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DiskEncryptionSet, or the result of cls(response)
      type:
      - azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSet
  type: method
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.get
- class: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list
  langs:
  - python
  module: azure.mgmt.compute.v2019_07_01.operations
  name: list(**kwargs)
  namewithoutparameters: list
  summary: Lists all the disk encryption sets under a subscription.
  syntax:
    content: list(**kwargs)
    parameters:
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either DiskEncryptionSetList or the
        result of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSetList]
  type: method
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list
- class: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.compute.v2019_07_01.operations
  name: list_by_resource_group(resource_group_name, **kwargs)
  namewithoutparameters: list_by_resource_group
  summary: Lists all the disk encryption sets under a resource group.
  syntax:
    content: list_by_resource_group(resource_group_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either DiskEncryptionSetList or the
        result of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSetList]
  type: method
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list_by_resource_group
- class: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.models
  langs:
  - python
  module: azure.mgmt.compute.v2019_07_01.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.compute.v2019_07_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\compute\\v2019_07_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.models
references:
- fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_create_or_update
  isExternal: false
  name: begin_create_or_update(resource_group_name, disk_encryption_set_name, disk_encryption_set,
    **kwargs)
  parent: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_create_or_update
- fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_delete
  isExternal: false
  name: begin_delete(resource_group_name, disk_encryption_set_name, **kwargs)
  parent: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_delete
- fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_update
  isExternal: false
  name: begin_update(resource_group_name, disk_encryption_set_name, disk_encryption_set,
    **kwargs)
  parent: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.begin_update
- fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.get
  isExternal: false
  name: get(resource_group_name, disk_encryption_set_name, **kwargs)
  parent: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.get
- fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list
  isExternal: false
  name: list(**kwargs)
  parent: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list
- fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group(resource_group_name, **kwargs)
  parent: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.list_by_resource_group
- fullName: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations
  uid: azure.mgmt.compute.v2019_07_01.operations.DiskEncryptionSetsOperations.models
- fullName: azure.core.polling.LROPoller[azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSet]
  name: LROPoller[DiskEncryptionSet]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSet
    name: DiskEncryptionSet
    uid: azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSet
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSet]
- fullName: azure.core.polling.LROPoller[None]
  name: LROPoller[None]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[None]
- fullName: azure.core.paging.ItemPaged[azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSetList]
  name: ItemPaged[DiskEncryptionSetList]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSetList
    name: DiskEncryptionSetList
    uid: azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSetList
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.mgmt.compute.v2019_07_01.models.DiskEncryptionSetList]
