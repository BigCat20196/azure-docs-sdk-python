### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_create_or_update
  - azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_delete
  - azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.get
  - azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.list_by_gallery
  - azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.models
  class: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.compute.v2019_03_01.aio.operations
  name: GalleryApplicationsOperations
  summary: 'GalleryApplicationsOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: GalleryApplicationsOperations(client, config, serializer, deserializer)
      -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
- class: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.compute.v2019_03_01.aio.operations
  name: 'begin_create_or_update(resource_group_name: str, gallery_name: str, gallery_application_name:
    str, gallery_application: azure.mgmt.compute.v2019_03_01.models._models_py3.GalleryApplication,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.GalleryApplication'')]'
  namewithoutparameters: begin_create_or_update
  summary: Create or update a gallery Application Definition.
  syntax:
    content: 'begin_create_or_update(resource_group_name: str, gallery_name: str,
      gallery_application_name: str, gallery_application: azure.mgmt.compute.v2019_03_01.models._models_py3.GalleryApplication,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.GalleryApplication'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the Shared Application Gallery in which the Application

        Definition is to be created.'
      id: gallery_name
      isRequired: true
      type:
      - str
    - description: 'The name of the gallery Application Definition to be created

        or updated. The allowed characters are alphabets and numbers with dots, dashes,
        and periods

        allowed in the middle. The maximum length is 80 characters.'
      id: gallery_application_name
      isRequired: true
      type:
      - str
    - description: 'Parameters supplied to the create or update gallery Application

        operation.'
      id: gallery_application
      isRequired: true
      type:
      - azure.mgmt.compute.v2019_03_01.models.GalleryApplication
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either GalleryApplication
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.compute.v2019_03_01.models.GalleryApplication]
  type: method
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_create_or_update
- class: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.compute.v2019_03_01.aio.operations
  name: 'begin_delete(resource_group_name: str, gallery_name: str, gallery_application_name:
    str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_delete
  summary: Delete a gallery Application.
  syntax:
    content: 'begin_delete(resource_group_name: str, gallery_name: str, gallery_application_name:
      str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the Shared Application Gallery in which the Application

        Definition is to be deleted.'
      id: gallery_name
      isRequired: true
      type:
      - str
    - description: The name of the gallery Application Definition to be deleted.
      id: gallery_application_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_delete
- class: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.get
  langs:
  - python
  module: azure.mgmt.compute.v2019_03_01.aio.operations
  name: 'get(resource_group_name: str, gallery_name: str, gallery_application_name:
    str, **kwargs) -> azure.mgmt.compute.v2019_03_01.models._models_py3.GalleryApplication'
  namewithoutparameters: get
  summary: Retrieves information about a gallery Application Definition.
  syntax:
    content: 'get(resource_group_name: str, gallery_name: str, gallery_application_name:
      str, **kwargs) -> azure.mgmt.compute.v2019_03_01.models._models_py3.GalleryApplication'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the Shared Application Gallery from which the Application

        Definitions are to be retrieved.'
      id: gallery_name
      isRequired: true
      type:
      - str
    - description: 'The name of the gallery Application Definition to be

        retrieved.'
      id: gallery_application_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: GalleryApplication, or the result of cls(response)
      type:
      - azure.mgmt.compute.v2019_03_01.models.GalleryApplication
  type: method
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.get
- class: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.list_by_gallery
  langs:
  - python
  module: azure.mgmt.compute.v2019_03_01.aio.operations
  name: 'list_by_gallery(resource_group_name: str, gallery_name: str, **kwargs) ->
    typing.AsyncIterable[_ForwardRef(''models.GalleryApplicationList'')]'
  namewithoutparameters: list_by_gallery
  summary: List gallery Application Definitions in a gallery.
  syntax:
    content: 'list_by_gallery(resource_group_name: str, gallery_name: str, **kwargs)
      -> typing.AsyncIterable[_ForwardRef(''models.GalleryApplicationList'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the Shared Application Gallery from which Application

        Definitions are to be listed.'
      id: gallery_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either GalleryApplicationList or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.compute.v2019_03_01.models.GalleryApplicationList]
  type: method
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.list_by_gallery
- class: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.models
  langs:
  - python
  module: azure.mgmt.compute.v2019_03_01.aio.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.compute.v2019_03_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\compute\\v2019_03_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.models
references:
- fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_create_or_update
  isExternal: false
  name: 'begin_create_or_update(resource_group_name: str, gallery_name: str, gallery_application_name:
    str, gallery_application: azure.mgmt.compute.v2019_03_01.models._models_py3.GalleryApplication,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.GalleryApplication'')]'
  parent: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_create_or_update
- fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, gallery_name: str, gallery_application_name:
    str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.begin_delete
- fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, gallery_name: str, gallery_application_name:
    str, **kwargs) -> azure.mgmt.compute.v2019_03_01.models._models_py3.GalleryApplication'
  parent: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.get
- fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.list_by_gallery
  isExternal: false
  name: 'list_by_gallery(resource_group_name: str, gallery_name: str, **kwargs) ->
    typing.AsyncIterable[_ForwardRef(''models.GalleryApplicationList'')]'
  parent: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.list_by_gallery
- fullName: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations
  uid: azure.mgmt.compute.v2019_03_01.aio.operations.GalleryApplicationsOperations.models
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.compute.v2019_03_01.models.GalleryApplication]
  name: AsyncLROPoller[GalleryApplication]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2019_03_01.models.GalleryApplication
    name: GalleryApplication
    uid: azure.mgmt.compute.v2019_03_01.models.GalleryApplication
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.compute.v2019_03_01.models.GalleryApplication]
- fullName: azure.core.polling.AsyncLROPoller[None]
  name: AsyncLROPoller[None]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[None]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.compute.v2019_03_01.models.GalleryApplicationList]
  name: AsyncItemPaged[GalleryApplicationList]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2019_03_01.models.GalleryApplicationList
    name: GalleryApplicationList
    uid: azure.mgmt.compute.v2019_03_01.models.GalleryApplicationList
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.compute.v2019_03_01.models.GalleryApplicationList]
