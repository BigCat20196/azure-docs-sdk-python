### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.keyvault.administration.KeyVaultBackupClient.begin_full_backup
  - azure.keyvault.administration.KeyVaultBackupClient.begin_full_restore
  - azure.keyvault.administration.KeyVaultBackupClient.begin_selective_restore
  - azure.keyvault.administration.KeyVaultBackupClient.get_backup_status
  - azure.keyvault.administration.KeyVaultBackupClient.get_restore_status
  class: azure.keyvault.administration.KeyVaultBackupClient
  fullName: azure.keyvault.administration.KeyVaultBackupClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.keyvault.administration._internal.client_base.KeyVaultClientBase
  langs:
  - python
  module: azure.keyvault.administration
  name: KeyVaultBackupClient
  summary: Performs Key Vault backup and restore operations.
  syntax:
    content: KeyVaultBackupClient(vault_url, credential, **kwargs)
    parameters:
    - description: URL of the vault on which the client will operate. This is also
        called the vault's "DNS Name".
      id: vault_url
      type:
      - str
    - description: 'an object which can provide an access token for the vault, such
        as a credential from

        <xref:azure.identity>'
      id: credential
  type: class
  uid: azure.keyvault.administration.KeyVaultBackupClient
- class: azure.keyvault.administration.KeyVaultBackupClient
  fullName: azure.keyvault.administration.KeyVaultBackupClient.begin_full_backup
  langs:
  - python
  module: azure.keyvault.administration
  name: begin_full_backup(blob_storage_uri, sas_token, **kwargs)
  namewithoutparameters: begin_full_backup
  summary: Begin a full backup of the Key Vault.
  syntax:
    content: begin_full_backup(blob_storage_uri, sas_token, **kwargs)
    parameters:
    - description: URI of the blob storage resource in which the backup will be stored
      id: blob_storage_uri
      isRequired: true
      type:
      - str
    - description: a Shared Access Signature (SAS) token authorizing access to the
        blob storage resource
      id: sas_token
      isRequired: true
      type:
      - str
    - description: a continuation token to restart polling from a saved state
      id: continuation_token
      isRequired: true
      type:
      - str
    return:
      description: An instance of an LROPoller. Call *result()* on the poller object
        to get a <xref:azure.keyvault.administration.BackupOperation>.
      type:
      - azure.core.polling.LROPoller[BackupOperation]
  type: method
  uid: azure.keyvault.administration.KeyVaultBackupClient.begin_full_backup
- class: azure.keyvault.administration.KeyVaultBackupClient
  fullName: azure.keyvault.administration.KeyVaultBackupClient.begin_full_restore
  langs:
  - python
  module: azure.keyvault.administration
  name: begin_full_restore(blob_storage_uri, sas_token, folder_name, **kwargs)
  namewithoutparameters: begin_full_restore
  summary: Restore a full backup of a Key Vault.
  syntax:
    content: begin_full_restore(blob_storage_uri, sas_token, folder_name, **kwargs)
    parameters:
    - description: URI of the blob storage resource in which the backup is stored
      id: blob_storage_uri
      isRequired: true
      type:
      - str
    - description: a Shared Access Signature (SAS) token authorizing access to the
        blob storage resource
      id: sas_token
      isRequired: true
      type:
      - str
    - description: name of the blob container which contains the backup
      id: folder_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.core.polling.LROPoller[RestoreOperation]
  type: method
  uid: azure.keyvault.administration.KeyVaultBackupClient.begin_full_restore
- class: azure.keyvault.administration.KeyVaultBackupClient
  fullName: azure.keyvault.administration.KeyVaultBackupClient.begin_selective_restore
  langs:
  - python
  module: azure.keyvault.administration
  name: begin_selective_restore(blob_storage_uri, sas_token, folder_name, key_name,
    **kwargs)
  namewithoutparameters: begin_selective_restore
  summary: Restore a single key from a full Key Vault backup.
  syntax:
    content: begin_selective_restore(blob_storage_uri, sas_token, folder_name, key_name,
      **kwargs)
    parameters:
    - description: URI of the blob storage resource in which the backup is stored
      id: blob_storage_uri
      isRequired: true
      type:
      - str
    - description: a Shared Access Signature (SAS) token authorizing access to the
        blob storage resource
      id: sas_token
      isRequired: true
      type:
      - str
    - description: name of the blob container which contains the backup
      id: folder_name
      isRequired: true
      type:
      - str
    - description: name of the key to restore from the backup
      id: key_name
      isRequired: true
      type:
      - str
    return:
      type:
      - azure.core.polling.LROPoller[RestoreOperation]
  type: method
  uid: azure.keyvault.administration.KeyVaultBackupClient.begin_selective_restore
- class: azure.keyvault.administration.KeyVaultBackupClient
  fullName: azure.keyvault.administration.KeyVaultBackupClient.get_backup_status
  langs:
  - python
  module: azure.keyvault.administration
  name: get_backup_status(job_id, **kwargs)
  namewithoutparameters: get_backup_status
  summary: Returns the status of a full backup operation.
  syntax:
    content: get_backup_status(job_id, **kwargs)
    parameters:
    - description: The job ID returned as part of the backup request
      id: job_id
      isRequired: true
      type:
      - str
    return:
      description: The full backup operation status as a <xref:azure.keyvault.administration.BackupOperation>
      type:
      - BackupOperation
  type: method
  uid: azure.keyvault.administration.KeyVaultBackupClient.get_backup_status
- class: azure.keyvault.administration.KeyVaultBackupClient
  fullName: azure.keyvault.administration.KeyVaultBackupClient.get_restore_status
  langs:
  - python
  module: azure.keyvault.administration
  name: get_restore_status(job_id, **kwargs)
  namewithoutparameters: get_restore_status
  summary: Returns the status of a restore operation.
  syntax:
    content: get_restore_status(job_id, **kwargs)
    parameters:
    - description: The job ID returned as part of the restore request
      id: job_id
      isRequired: true
      type:
      - str
    return:
      description: The restore operation status as a <xref:azure.keyvault.administration.RestoreOperation>
      type:
      - RestoreOperation
  type: method
  uid: azure.keyvault.administration.KeyVaultBackupClient.get_restore_status
references:
- fullName: azure.keyvault.administration.KeyVaultBackupClient.begin_full_backup
  isExternal: false
  name: begin_full_backup(blob_storage_uri, sas_token, **kwargs)
  parent: azure.keyvault.administration.KeyVaultBackupClient
  uid: azure.keyvault.administration.KeyVaultBackupClient.begin_full_backup
- fullName: azure.keyvault.administration.KeyVaultBackupClient.begin_full_restore
  isExternal: false
  name: begin_full_restore(blob_storage_uri, sas_token, folder_name, **kwargs)
  parent: azure.keyvault.administration.KeyVaultBackupClient
  uid: azure.keyvault.administration.KeyVaultBackupClient.begin_full_restore
- fullName: azure.keyvault.administration.KeyVaultBackupClient.begin_selective_restore
  isExternal: false
  name: begin_selective_restore(blob_storage_uri, sas_token, folder_name, key_name,
    **kwargs)
  parent: azure.keyvault.administration.KeyVaultBackupClient
  uid: azure.keyvault.administration.KeyVaultBackupClient.begin_selective_restore
- fullName: azure.keyvault.administration.KeyVaultBackupClient.get_backup_status
  isExternal: false
  name: get_backup_status(job_id, **kwargs)
  parent: azure.keyvault.administration.KeyVaultBackupClient
  uid: azure.keyvault.administration.KeyVaultBackupClient.get_backup_status
- fullName: azure.keyvault.administration.KeyVaultBackupClient.get_restore_status
  isExternal: false
  name: get_restore_status(job_id, **kwargs)
  parent: azure.keyvault.administration.KeyVaultBackupClient
  uid: azure.keyvault.administration.KeyVaultBackupClient.get_restore_status
- fullName: azure.core.polling.LROPoller[BackupOperation]
  name: LROPoller[BackupOperation]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: BackupOperation
    name: BackupOperation
    uid: BackupOperation
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[BackupOperation]
- fullName: azure.core.polling.LROPoller[RestoreOperation]
  name: LROPoller[RestoreOperation]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: RestoreOperation
    name: RestoreOperation
    uid: RestoreOperation
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[RestoreOperation]
