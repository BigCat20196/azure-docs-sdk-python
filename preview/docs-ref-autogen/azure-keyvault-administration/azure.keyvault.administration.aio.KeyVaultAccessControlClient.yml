### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.keyvault.administration.aio.KeyVaultAccessControlClient.create_role_assignment
  - azure.keyvault.administration.aio.KeyVaultAccessControlClient.delete_role_assignment
  - azure.keyvault.administration.aio.KeyVaultAccessControlClient.get_role_assignment
  - azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_assignments
  - azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_definitions
  class: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.keyvault.administration._internal.async_client_base.AsyncKeyVaultClientBase
  langs:
  - python
  module: azure.keyvault.administration.aio
  name: KeyVaultAccessControlClient
  summary: Manages role-based access to Azure Key Vault.
  syntax:
    parameters:
    - description: URL of the vault the client will manage. This is also called the
        vault's "DNS Name".
      id: vault_url
      type:
      - str
    - description: 'an object which can provide an access token for the vault, such
        as a credential from

        <xref:azure.identity>'
      id: credential
  type: class
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient
- class: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.create_role_assignment
  langs:
  - python
  module: azure.keyvault.administration.aio
  name: create_role_assignment
  namewithoutparameters: create_role_assignment
  summary: Create a role assignment.
  syntax:
    parameters:
    - description: 'scope the role assignment will apply over. <xref:azure.keyvault.administration.aio.KeyVaultRoleScope>
        defines common broad

        scopes. Specify a narrower scope as a string.'
      id: role_scope
      isRequired: true
      type:
      - str
      - KeyVaultRoleScope
    - description: ID of the role's definition
      id: role_definition_id
      isRequired: true
      type:
      - str
    - description: 'Azure Active Directory object ID of the principal which will be
        assigned the role. The

        principal can be a user, service principal, or security group.'
      id: principal_id
      isRequired: true
      type:
      - str
    - description: a name for the role assignment. Must be a UUID.
      id: role_assignment_name
      isRequired: true
    return:
      type:
      - KeyVaultRoleAssignment
  type: method
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.create_role_assignment
- class: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.delete_role_assignment
  langs:
  - python
  module: azure.keyvault.administration.aio
  name: delete_role_assignment
  namewithoutparameters: delete_role_assignment
  summary: Delete a role assignment.
  syntax:
    parameters:
    - description: 'the assignment''s scope, for example "/", "/keys", or "/keys/<specific
        key identifier>".

        <xref:azure.keyvault.administration.aio.KeyVaultRoleScope> defines common
        broad scopes. Specify a narrower scope as a string.'
      id: role_scope
      isRequired: true
      type:
      - str
      - KeyVaultRoleScope
    - description: the assignment's name. Must be a UUID.
      id: role_assignment_name
      isRequired: true
      type:
      - str
      - uuid.UUID
    return:
      description: the deleted assignment
      type:
      - KeyVaultRoleAssignment
  type: method
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.delete_role_assignment
- class: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.get_role_assignment
  langs:
  - python
  module: azure.keyvault.administration.aio
  name: get_role_assignment
  namewithoutparameters: get_role_assignment
  summary: Get a role assignment.
  syntax:
    parameters:
    - description: 'the assignment''s scope, for example "/", "/keys", or "/keys/<specific
        key identifier>".

        <xref:azure.keyvault.administration.aio.KeyVaultRoleScope> defines common
        broad scopes. Specify a narrower scope as a string.'
      id: role_scope
      isRequired: true
      type:
      - str
      - KeyVaultRoleScope
    - description: the assignment's name. Must be a UUID.
      id: role_assignment_name
      isRequired: true
      type:
      - str
      - uuid.UUID
    return:
      type:
      - KeyVaultRoleAssignment
  type: method
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.get_role_assignment
- class: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_assignments
  langs:
  - python
  module: azure.keyvault.administration.aio
  name: list_role_assignments
  namewithoutparameters: list_role_assignments
  summary: List all role assignments for a scope.
  syntax:
    parameters:
    - description: 'scope of the role assignments. <xref:azure.keyvault.administration.aio.KeyVaultRoleScope>
        defines common broad

        scopes. Specify a narrower scope as a string.'
      id: role_scope
      isRequired: true
      type:
      - str
      - KeyVaultRoleScope
    return:
      type:
      - azure.core.async_paging.AsyncItemPaged[KeyVaultRoleAssignment]
  type: method
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_assignments
- class: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_definitions
  langs:
  - python
  module: azure.keyvault.administration.aio
  name: list_role_definitions
  namewithoutparameters: list_role_definitions
  summary: List all role definitions applicable at and above a scope.
  syntax:
    parameters:
    - description: 'scope of the role definitions. <xref:azure.keyvault.administration.aio.KeyVaultRoleScope>
        defines common broad

        scopes. Specify a narrower scope as a string.'
      id: role_scope
      isRequired: true
      type:
      - str
      - KeyVaultRoleScope
    return:
      type:
      - azure.core.async_paging.AsyncItemPaged[KeyVaultRoleDefinition]
  type: method
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_definitions
references:
- fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.create_role_assignment
  isExternal: false
  name: create_role_assignment
  parent: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.create_role_assignment
- fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.delete_role_assignment
  isExternal: false
  name: delete_role_assignment
  parent: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.delete_role_assignment
- fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.get_role_assignment
  isExternal: false
  name: get_role_assignment
  parent: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.get_role_assignment
- fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_assignments
  isExternal: false
  name: list_role_assignments
  parent: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_assignments
- fullName: azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_definitions
  isExternal: false
  name: list_role_definitions
  parent: azure.keyvault.administration.aio.KeyVaultAccessControlClient
  uid: azure.keyvault.administration.aio.KeyVaultAccessControlClient.list_role_definitions
- fullName: azure.core.async_paging.AsyncItemPaged[KeyVaultRoleAssignment]
  name: AsyncItemPaged[KeyVaultRoleAssignment]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: KeyVaultRoleAssignment
    name: KeyVaultRoleAssignment
    uid: KeyVaultRoleAssignment
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[KeyVaultRoleAssignment]
- fullName: azure.core.async_paging.AsyncItemPaged[KeyVaultRoleDefinition]
  name: AsyncItemPaged[KeyVaultRoleDefinition]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: KeyVaultRoleDefinition
    name: KeyVaultRoleDefinition
    uid: KeyVaultRoleDefinition
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[KeyVaultRoleDefinition]
