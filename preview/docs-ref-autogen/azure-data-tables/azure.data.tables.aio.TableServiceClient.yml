### YamlMime:PythonClass
uid: azure.data.tables.aio.TableServiceClient
name: TableServiceClient
fullName: azure.data.tables.aio.TableServiceClient
module: azure.data.tables.aio
inheritances:
- azure.data.tables.aio._base_client_async.AsyncTablesBaseClient
summary: 'A client to interact with the Table Service at the account level.


  This client provides operations to retrieve and configure the account properties

  as well as list, create and delete tables within the account.

  For operations relating to a specific table, a client for this entity

  can be retrieved using the <xref:azure.data.tables.aio.TableServiceClient.get_table_client>
  function.'
constructor:
  syntax: 'TableServiceClient(endpoint: str, credential: typing.Union[azure.core.credentials.AzureSasCredential,
    azure.core.credentials.AzureNamedKeyCredential] = None, **kwargs: typing.Any)
    -> None'
  parameters:
  - name: endpoint
    description: 'The URL to the table service endpoint. Any other entities included

      in the URL path (e.g. table) will be discarded. This URL can be optionally

      authenticated with a SAS token.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      account URL already has a SAS token. The value can be a SAS token string, an
      account

      shared access key.'
    isRequired: true
    types:
    - <xref:str>
variables:
- description: The name of the Tables account.
  name: account_name
  types:
  - <xref:str>
- description: The full URL to the Tables account.
  name: url
  types:
  - <xref:str>
methods:
- uid: azure.data.tables.aio.TableServiceClient.create_table
  name: create_table
  summary: Creates a new table under the given account.
  signature: 'create_table(table_name: str, **kwargs) -> azure.data.tables.aio._table_client_async.TableClient'
  parameters:
  - name: headers
    isRequired: true
  - name: table_name
    description: The Table name.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: TableClient, or the result of cls(response)
    types:
    - <xref:azure.data.tables.aio.TableClient>
- uid: azure.data.tables.aio.TableServiceClient.create_table_if_not_exists
  name: create_table_if_not_exists
  summary: 'Creates a new table if it does not currently exist.

    If the table currently exists, the current table is

    returned.'
  signature: 'create_table_if_not_exists(table_name: str, **kwargs) -> azure.data.tables.aio._table_client_async.TableClient'
  parameters:
  - name: table_name
    description: The Table name.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: TableClient
    types:
    - <xref:azure.data.tables.aio.TableClient>
- uid: azure.data.tables.aio.TableServiceClient.delete_table
  name: delete_table
  summary: 'Deletes a table under the current account. No error will be raised if

    the table is not found.'
  signature: 'delete_table(table_name: str, **kwargs) -> None'
  parameters:
  - name: table_name
    description: The Table name.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.data.tables.aio.TableServiceClient.from_connection_string
  name: from_connection_string
  summary: Create TableServiceClient from a Connection String.
  signature: 'from_connection_string(conn_str: str, **kwargs) -> ''TableServiceClient'''
  parameters:
  - name: conn_str
    description: A connection string to an Azure Tables account.
    isRequired: true
    types:
    - <xref:str>
  - name: conn_str
    isRequired: true
  return:
    description: A Table service client.
    types:
    - <xref:azure.data.tables.aio.TableServiceClient>
- uid: azure.data.tables.aio.TableServiceClient.get_service_properties
  name: get_service_properties
  summary: 'Gets the properties of an account''s Table service,

    including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules.'
  signature: get_service_properties(**kwargs) -> typing.Dict[str, object]
  return:
    description: TableServiceProperties, or the result of cls(response)
    types:
    - <xref:azure.data.tables.models.TableServiceProperties>
- uid: azure.data.tables.aio.TableServiceClient.get_service_stats
  name: get_service_stats
  summary: 'Retrieves statistics related to replication for the Table service. It
    is only available on the secondary

    location endpoint when read-access geo-redundant replication is enabled for the
    account.'
  signature: get_service_stats(**kwargs) -> typing.Dict[str, typing.Any]
  return:
    description: Dictionary of service stats
    types:
    - <xref:azure.data.tables.models.TableServiceStats>
- uid: azure.data.tables.aio.TableServiceClient.get_table_client
  name: get_table_client
  summary: 'Get a client to interact with the specified table.


    The table need not already exist.'
  signature: 'get_table_client(table_name: str, **kwargs) -> azure.data.tables.aio._table_client_async.TableClient'
  parameters:
  - name: table_name
    description: The table name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: A <xref:azure.data.tables.aio.TableClient> object.
    types:
    - <xref:azure.data.tables.aio.TableClient>
- uid: azure.data.tables.aio.TableServiceClient.list_tables
  name: list_tables
  summary: Queries tables under the given account.
  signature: list_tables(**kwargs) -> azure.core.async_paging.AsyncItemPaged
  return:
    description: AsyncItemPaged[<xref:azure.data.tables.TableItem>]
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>
- uid: azure.data.tables.aio.TableServiceClient.query_tables
  name: query_tables
  summary: Queries tables under the given account.
  signature: 'query_tables(query_filter: str, **kwargs) -> azure.core.async_paging.AsyncItemPaged'
  parameters:
  - name: query_filter
    description: Specify a filter to return certain tables.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AsyncItemPaged[<xref:azure.data.tables.TableItem>]
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>
- uid: azure.data.tables.aio.TableServiceClient.set_service_properties
  name: set_service_properties
  summary: "Sets properties for an account's Table service endpoint,\n   including\
    \ properties for Analytics and CORS (Cross-Origin Resource Sharing) rules."
  signature: 'set_service_properties(analytics_logging: TableAnalyticsLogging = None,
    hour_metrics: Metrics = None, minute_metrics: Metrics = None, cors: CorsRule =
    None, **kwargs) -> None'
  parameters:
  - name: analytics_logging
    description: Properties for analytics
    isRequired: true
    types:
    - <xref:azure.data.tables.TableAnalyticsLogging>
  - name: hour_metrics
    description: Hour level metrics
    isRequired: true
    types:
    - <xref:azure.data.tables.Metrics>
  - name: minute_metrics
    description: Minute level metrics
    isRequired: true
    types:
    - <xref:azure.data.tables.Metrics>
  - name: cors
    description: Cross-origin resource sharing rules
    isRequired: true
    types:
    - <xref:azure.data.tables.CorsRule>
  return:
    description: None
    types:
    - <xref:None>
