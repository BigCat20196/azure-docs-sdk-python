### YamlMime:PythonClass
uid: azure.data.tables.AccountSasPermissions
name: AccountSasPermissions
fullName: azure.data.tables.AccountSasPermissions
module: azure.data.tables
inheritances:
- builtins.object
summary: '<xref:azure.data.tables.ResourceTypes> class to be used with generate_account_sas

  function and for the AccessPolicies used with set_*_acl. There are two types of

  SAS which may be used to grant resource access. One is to grant access to a

  specific resource (resource-specific). Another is to grant access to the

  entire service for a specific account and allow certain operations based on

  perms found here.'
constructor:
  syntax: AccountSasPermissions(**kwargs)
variables:
- description: 'Valid for all signed resources types (Service, Container, and Object).

    Permits read permissions to the specified resource type.'
  name: read
  types:
  - bool
- description: 'Valid for all signed resources types (Service, Container, and Object).

    Permits write permissions to the specified resource type.'
  name: write
  types:
  - bool
- description: Valid for Container and Object resource types, except for queue messages.
  name: delete
  types:
  - bool
- description: Valid for Service and Container resource types only.
  name: list
  types:
  - bool
- description: 'Valid for the following Object resource types only: queue messages,
    and append blobs.'
  name: add
  types:
  - bool
- description: 'Valid for the following Object resource types only: blobs and files.

    Users can create new blobs or files, but may not overwrite existing

    blobs or files.'
  name: create
  types:
  - bool
- description: 'Valid for the following Object resource types only: queue messages.'
  name: update
  types:
  - bool
- description: 'Valid for the following Object resource type only: queue messages.'
  name: process
  types:
  - bool
methods:
- uid: azure.data.tables.AccountSasPermissions.from_string
  name: from_string
  summary: 'Create AccountSasPermissions from a string.


    To specify read, write, delete, etc. permissions you need only to

    include the first letter of the word in the string. E.g. for read and write

    permissions you would provide a string "rw".'
  signature: from_string(permission, **kwargs)
  parameters:
  - name: permission
    description: 'Specify permissions in

      the string with the first letter of the word.'
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: A AccountSasPermissions object
    types:
    - <xref:azure.data.tables.AccountSasPermissions>
