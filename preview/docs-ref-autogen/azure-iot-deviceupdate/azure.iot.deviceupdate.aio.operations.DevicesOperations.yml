### YamlMime:PythonClass
uid: azure.iot.deviceupdate.aio.operations.DevicesOperations
name: DevicesOperations
fullName: azure.iot.deviceupdate.aio.operations.DevicesOperations
module: azure.iot.deviceupdate.aio.operations
inheritances:
- builtins.object
summary: 'DevicesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: DevicesOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: "models \u2013 Alias to model classes used in this operation group"
methods:
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.create_or_update_group
  name: create_or_update_group
  summary: Create or update a device group.
  signature: 'create_or_update_group(group_id: str, group: azure.iot.deviceupdate.models._models_py3.Group,
    **kwargs) -> ''_models.Group'''
  parameters:
  - name: group_id
    description: Group identifier.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: group
    description: The group properties.
    isRequired: true
    types:
    - <xref:azure.iot.deviceupdate.models.Group>
  return:
    description: Group, or the result of cls(response)
    types:
    - <xref:azure.iot.deviceupdate.models.Group>
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.delete_group
  name: delete_group
  summary: Deletes a device group.
  signature: 'delete_group(group_id: str, **kwargs) -> None'
  parameters:
  - name: group_id
    description: Group identifier.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: None, or the result of cls(response)
    types:
    - '[None](https://docs.python.org/3.6/library/constants.html#None)'
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_all_device_classes
  name: get_all_device_classes
  summary: 'Gets a list of all device classes (unique combinations of device manufacturer
    and model) for

    all devices connected to Device Update for IoT Hub.'
  signature: get_all_device_classes(**kwargs) -> AsyncIterable[_ForwardRef('_models.PageableListOfDeviceClasses')]
  return:
    description: An iterator like instance of either PageableListOfDeviceClasses or
      the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.iot.deviceupdate.models.PageableListOfDeviceClasses>]
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_all_device_tags
  name: get_all_device_tags
  summary: 'Gets a list of available group device tags for all devices connected to
    Device Update for IoT

    Hub.'
  signature: get_all_device_tags(**kwargs) -> AsyncIterable[_ForwardRef('_models.PageableListOfDeviceTags')]
  return:
    description: An iterator like instance of either PageableListOfDeviceTags or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.iot.deviceupdate.models.PageableListOfDeviceTags>]
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_all_devices
  name: get_all_devices
  summary: Gets a list of devices connected to Device Update for IoT Hub.
  signature: 'get_all_devices(filter: Optional[str] = None, **kwargs) -> AsyncIterable[_ForwardRef(''_models.PageableListOfDevices'')]'
  parameters:
  - name: filter
    description: Restricts the set of devices returned. You can only filter on device
      GroupId.
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An iterator like instance of either PageableListOfDevices or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.iot.deviceupdate.models.PageableListOfDevices>]
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_all_groups
  name: get_all_groups
  summary: Gets a list of all device groups.
  signature: get_all_groups(**kwargs) -> AsyncIterable[_ForwardRef('_models.PageableListOfGroups')]
  return:
    description: An iterator like instance of either PageableListOfGroups or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.iot.deviceupdate.models.PageableListOfGroups>]
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_device
  name: get_device
  summary: 'Gets the device properties and latest deployment status for a device connected
    to Device Update

    for IoT Hub.'
  signature: 'get_device(device_id: str, **kwargs) -> ''_models.Device'''
  parameters:
  - name: device_id
    description: Device identifier in Azure IOT Hub.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: Device, or the result of cls(response)
    types:
    - <xref:azure.iot.deviceupdate.models.Device>
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_device_class
  name: get_device_class
  summary: Gets the properties of a device class.
  signature: 'get_device_class(device_class_id: str, **kwargs) -> ''_models.DeviceClass'''
  parameters:
  - name: device_class_id
    description: Device class identifier.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: DeviceClass, or the result of cls(response)
    types:
    - <xref:azure.iot.deviceupdate.models.DeviceClass>
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_device_class_device_ids
  name: get_device_class_device_ids
  summary: Gets a list of device identifiers in a device class.
  signature: 'get_device_class_device_ids(device_class_id: str, **kwargs) -> AsyncIterable[_ForwardRef(''_models.PageableListOfStrings'')]'
  parameters:
  - name: device_class_id
    description: Device class identifier.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An iterator like instance of either PageableListOfStrings or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.iot.deviceupdate.models.PageableListOfStrings>]
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_device_class_installable_updates
  name: get_device_class_installable_updates
  summary: Gets a list of installable updates for a device class.
  signature: 'get_device_class_installable_updates(device_class_id: str, **kwargs)
    -> AsyncIterable[_ForwardRef(''_models.PageableListOfUpdateIds'')]'
  parameters:
  - name: device_class_id
    description: Device class identifier.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An iterator like instance of either PageableListOfUpdateIds or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.iot.deviceupdate.models.PageableListOfUpdateIds>]
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_device_tag
  name: get_device_tag
  summary: Gets a count of how many devices have a device tag.
  signature: 'get_device_tag(tag_name: str, **kwargs) -> ''_models.DeviceTag'''
  parameters:
  - name: tag_name
    description: Tag name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: DeviceTag, or the result of cls(response)
    types:
    - <xref:azure.iot.deviceupdate.models.DeviceTag>
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_group
  name: get_group
  summary: Gets the properties of a group.
  signature: 'get_group(group_id: str, **kwargs) -> ''_models.Group'''
  parameters:
  - name: group_id
    description: Group identifier.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: Group, or the result of cls(response)
    types:
    - <xref:azure.iot.deviceupdate.models.Group>
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_group_best_updates
  name: get_group_best_updates
  summary: Get the best available updates for a group and a count of how many devices
    need each update.
  signature: 'get_group_best_updates(group_id: str, filter: Optional[str] = None,
    **kwargs) -> AsyncIterable[_ForwardRef(''_models.PageableListOfUpdatableDevices'')]'
  parameters:
  - name: group_id
    description: Group identifier.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: filter
    description: 'Restricts the set of bestUpdates returned. You can filter on update
      Provider,

      Name and Version property.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An iterator like instance of either PageableListOfUpdatableDevices
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.iot.deviceupdate.models.PageableListOfUpdatableDevices>]
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_group_update_compliance
  name: get_group_update_compliance
  summary: 'Get group update compliance information such as how many devices are on
    their latest update,

    how many need new updates, and how many are in progress on receiving a new update.'
  signature: 'get_group_update_compliance(group_id: str, **kwargs) -> ''_models.UpdateCompliance'''
  parameters:
  - name: group_id
    description: Group identifier.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: UpdateCompliance, or the result of cls(response)
    types:
    - <xref:azure.iot.deviceupdate.models.UpdateCompliance>
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.get_update_compliance
  name: get_update_compliance
  summary: 'Gets the breakdown of how many devices are on their latest update, have
    new updates available,

    or are in progress receiving new updates.'
  signature: get_update_compliance(**kwargs) -> '_models.UpdateCompliance'
  return:
    description: UpdateCompliance, or the result of cls(response)
    types:
    - <xref:azure.iot.deviceupdate.models.UpdateCompliance>
attributes:
- uid: azure.iot.deviceupdate.aio.operations.DevicesOperations.models
  name: models
  signature: models = <module 'azure.iot.deviceupdate.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\iot\\deviceupdate\\models\\__init__.py'>
