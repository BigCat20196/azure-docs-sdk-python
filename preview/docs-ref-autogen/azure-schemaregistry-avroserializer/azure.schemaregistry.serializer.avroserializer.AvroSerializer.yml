### YamlMime:PythonClass
uid: azure.schemaregistry.serializer.avroserializer.AvroSerializer
name: AvroSerializer
fullName: azure.schemaregistry.serializer.avroserializer.AvroSerializer
module: azure.schemaregistry.serializer.avroserializer
inheritances:
- builtins.object
summary: 'AvroSerializer provides the ability to serialize and deserialize data according

  to the given avro schema. It would automatically register, get and cache the schema.'
constructor:
  syntax: AvroSerializer(**kwargs)
  parameters:
  - name: client
    description: 'Required. The schema registry client

      which is used to register schema and retrieve schema from the service.'
    types:
    - <xref:azure.schemaregistry.SchemaRegistryClient>
  - name: group_name
    description: Required. Schema group under which schema should be registered.
    types:
    - <xref:str>
  - name: auto_register_schemas
    description: 'When true, register new schemas passed to serialize.

      Otherwise, and by default, fail if it has not been pre-registered in the registry.'
    types:
    - <xref:bool>
methods:
- uid: azure.schemaregistry.serializer.avroserializer.AvroSerializer.close
  name: close
  summary: 'This method is to close the sockets opened by the client.

    It need not be used when using with a context manager.'
  signature: close()
- uid: azure.schemaregistry.serializer.avroserializer.AvroSerializer.deserialize
  name: deserialize
  summary: Decode bytes data.
  signature: deserialize(value, **kwargs)
  parameters:
  - name: value
    description: The bytes data needs to be decoded.
    isRequired: true
    types:
    - <xref:bytes>
  return:
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.schemaregistry.serializer.avroserializer.AvroSerializer.serialize
  name: serialize
  summary: 'Encode data with the given schema. The returns bytes are consisted of:
    The first 4 bytes

    denoting record format identifier. The following 32 bytes denoting schema id returned
    by schema registry

    service. The remaining bytes are the real data payload.'
  signature: serialize(value, **kwargs)
  parameters:
  - name: value
    description: The data to be encoded.
    isRequired: true
    types:
    - <xref:Mapping>[<xref:str>, <xref:Any>]
  - name: schema
    description: Required. The schema used to encode the data.
    types:
    - <xref:str>
  return:
    types:
    - <xref:bytes>
