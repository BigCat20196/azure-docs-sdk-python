### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datadog.models.DatadogMonitorResource
  fullName: azure.mgmt.datadog.models.DatadogMonitorResource
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.datadog.models
  name: DatadogMonitorResource
  summary: 'DatadogMonitorResource.


    Variables are only populated by the server, and will be ignored when sending a
    request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'DatadogMonitorResource(*, location: str, sku: typing.Union[_ForwardRef(''ResourceSku''),
      NoneType] = None, properties: typing.Union[_ForwardRef(''MonitorProperties''),
      NoneType] = None, identity: typing.Union[_ForwardRef(''IdentityProperties''),
      NoneType] = None, tags: typing.Union[typing.Dict[str, str], NoneType] = None,
      **kwargs)'
    parameters:
    - description: ''
      id: sku
      type:
      - microsoft_datadog_client.models.ResourceSku
    - description: Properties specific to the monitor resource.
      id: properties
      type:
      - microsoft_datadog_client.models.MonitorProperties
    - description: ''
      id: identity
      type:
      - microsoft_datadog_client.models.IdentityProperties
    - description: A set of tags. Dictionary of `<string>`.
      id: tags
      type:
      - dict[str, str]
    - description: Required.
      id: location
      type:
      - str
    variables:
    - description: ARM id of the monitor resource.
      id: id
      type:
      - str
    - description: Name of the monitor resource.
      id: name
      type:
      - str
    - description: The type of the monitor resource.
      id: type
      type:
      - str
  type: class
  uid: azure.mgmt.datadog.models.DatadogMonitorResource
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
