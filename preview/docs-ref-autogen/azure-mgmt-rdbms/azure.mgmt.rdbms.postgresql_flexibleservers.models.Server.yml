### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.rdbms.postgresql_flexibleservers.models.Server
  fullName: azure.mgmt.rdbms.postgresql_flexibleservers.models.Server
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.mgmt.rdbms.postgresql_flexibleservers.models._models_py3.Resource
    type: azure.mgmt.rdbms.postgresql_flexibleservers.models._models_py3.TrackedResource
  langs:
  - python
  module: azure.mgmt.rdbms.postgresql_flexibleservers.models
  name: Server
  summary: 'Represents a server.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'Server(*, location: str, tags=None, identity=None, sku=None, administrator_login:
      str = None, administrator_login_password: str = None, version=None, display_name:
      str = None, storage_profile=None, maintenance_window=None, ha_enabled=None,
      source_server_name: str = None, point_in_time_utc=None, availability_zone: str
      = None, delegated_subnet_arguments=None, create_mode=None, server_tags=None,
      **kwargs) -> None'
    parameters:
    - description: Resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: Required. The geo-location where the resource lives
      id: location
      type:
      - str
    - description: The Azure Active Directory identity of the server.
      id: identity
      type:
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.Identity
    - description: The SKU (pricing tier) of the server.
      id: sku
      type:
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.Sku
    - description: 'The administrator''s login name of a server.

        Can only be specified when the server is being created (and is required

        for creation).'
      id: administrator_login
      type:
      - str
    - description: 'The administrator login password

        (required for server creation).'
      id: administrator_login_password
      type:
      - str
    - description: 'PostgreSQL Server version. Possible values include: ''12'',

        ''11'''
      id: version
      type:
      - str
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.ServerVersion
    - description: The display name of a server.
      id: display_name
      type:
      - str
    - description: Storage profile of a server.
      id: storage_profile
      type:
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.StorageProfile
    - description: Maintenance window of a server.
      id: maintenance_window
      type:
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.MaintenanceWindow
    - description: 'stand by count value can be either enabled or disabled.

        Possible values include: ''Enabled'', ''Disabled'''
      id: ha_enabled
      type:
      - str
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.HAEnabledEnum
    - description: 'The source PostgreSQL server name to restore

        from.'
      id: source_server_name
      type:
      - str
    - description: 'Restore point creation time (ISO8601 format),

        specifying the time to restore from.'
      id: point_in_time_utc
      type:
      - datetime
    - description: availability Zone information of the server.
      id: availability_zone
      type:
      - str
    - description: ''
      id: delegated_subnet_arguments
      type:
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.ServerPropertiesDelegatedSubnetArguments
    - description: 'The mode to create a new PostgreSQL server. Possible

        values include: ''Default'', ''PointInTimeRestore'''
      id: create_mode
      type:
      - str
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.CreateMode
    - description: 'Application-specific metadata in the form of key-value

        pairs.'
      id: server_tags
      type:
      - dict[str, str]
    variables:
    - description: 'Fully qualified resource Id for the resource. Ex -

        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
      id: id
      type:
      - str
    - description: The name of the resource
      id: name
      type:
      - str
    - description: 'The type of the resource. Ex-

        Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.'
      id: type
      type:
      - str
    - description: 'A state of a server that is visible to user. Possible values

        include: ''Ready'', ''Dropping'', ''Disabled'', ''Starting'', ''Stopping'',

        ''Stopped'', ''Updating'''
      id: state
      type:
      - str
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.ServerState
    - description: 'A state of a HA server that is visible to user. Possible

        values include: ''NotEnabled'', ''CreatingStandby'', ''ReplicatingData'',

        ''FailingOver'', ''Healthy'', ''RemovingStandby'''
      id: ha_state
      type:
      - str
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.ServerHAState
    - description: 'The fully qualified domain name of a

        server.'
      id: fully_qualified_domain_name
      type:
      - str
    - description: 'public network access is enabled or not.

        Possible values include: ''Enabled'', ''Disabled'''
      id: public_network_access
      type:
      - str
      - azure.mgmt.rdbms.postgresql_flexibleservers.models.ServerPublicNetworkAccessState
    - description: 'availability Zone information of the

        server.'
      id: standby_availability_zone
      type:
      - str
    - description: 'Status showing whether the data encryption is

        enabled with customer-managed keys.'
      id: byok_enforcement
      type:
      - str
  type: class
  uid: azure.mgmt.rdbms.postgresql_flexibleservers.models.Server
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
