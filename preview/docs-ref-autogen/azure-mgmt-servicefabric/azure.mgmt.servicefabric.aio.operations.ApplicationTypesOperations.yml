### YamlMime:PythonClass
uid: azure.mgmt.servicefabric.aio.operations.ApplicationTypesOperations
name: ApplicationTypesOperations
fullName: azure.mgmt.servicefabric.aio.operations.ApplicationTypesOperations
module: azure.mgmt.servicefabric.aio.operations
inheritances:
- builtins.object
summary: 'ApplicationTypesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: Applicationtyping.TypesOperations(client, config, serializer, deserializer)
    -> None
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.servicefabric.aio.operations.ApplicationTypesOperations.begin_delete
  name: begin_delete
  summary: 'Deletes a Service Fabric application type name resource.


    Delete a Service Fabric application type name resource with the specified name.'
  signature: 'begin_delete(resource_group_name: str, cluster_name: str, application_type_name:
    str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: cluster_name
    description: The name of the cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: application_type_name
    description: The name of the application type name resource.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - 'type: azure.core.exceptions.HttpResponseError'
- uid: azure.mgmt.servicefabric.aio.operations.ApplicationTypesOperations.create_or_update
  name: create_or_update
  summary: 'Creates or updates a Service Fabric application type name resource.


    Create or update a Service Fabric application type name resource with the specified
    name.'
  signature: 'create_or_update(resource_group_name: str, cluster_name: str, application_type_name:
    str, location: str = None, tags: typing.Dict[str, str] = None, **kwargs) -> azure.mgmt.servicefabric.models._models_py3.Applicationtyping.TypeResource'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: cluster_name
    description: The name of the cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: application_type_name
    description: The name of the application type name resource.
    isRequired: true
    types:
    - <xref:str>
  - name: location
    description: 'It will be deprecated in New API, resource location depends on the
      parent

      resource.'
    defaultValue: None
    types:
    - <xref:str>
  - name: tags
    description: Azure resource tags.
    defaultValue: None
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: ApplicationTypeResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.servicefabric.models.ApplicationTypeResource>
- uid: azure.mgmt.servicefabric.aio.operations.ApplicationTypesOperations.get
  name: get
  summary: 'Gets a Service Fabric application type name resource.


    Get a Service Fabric application type name resource created or in the process
    of being created

    in the Service Fabric cluster resource.'
  signature: 'get(resource_group_name: str, cluster_name: str, application_type_name:
    str, **kwargs) -> azure.mgmt.servicefabric.models._models_py3.Applicationtyping.TypeResource'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: cluster_name
    description: The name of the cluster resource.
    isRequired: true
    types:
    - <xref:str>
  - name: application_type_name
    description: The name of the application type name resource.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ApplicationTypeResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.servicefabric.models.ApplicationTypeResource>
- uid: azure.mgmt.servicefabric.aio.operations.ApplicationTypesOperations.list
  name: list
  summary: 'Gets the list of application type name resources created in the specified
    Service Fabric cluster resource.


    Gets all application type name resources created or in the process of being created
    in the

    Service Fabric cluster resource.'
  signature: 'list(resource_group_name: str, cluster_name: str, **kwargs) -> azure.mgmt.servicefabric.models._models_py3.Applicationtyping.TypeResourcetyping.List'
  parameters:
  - name: resource_group_name
    description: The name of the resource group.
    isRequired: true
    types:
    - <xref:str>
  - name: cluster_name
    description: The name of the cluster resource.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ApplicationTypeResourceList, or the result of cls(response)
    types:
    - <xref:azure.mgmt.servicefabric.models.ApplicationTypeResourceList>
attributes:
- uid: azure.mgmt.servicefabric.aio.operations.ApplicationTypesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.servicefabric.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\servicefabric\\models\\__init__.py'>
