### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get
  - azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get_state_change
  - azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list
  - azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list_state_changes
  - azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.models
  class: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.workloadmonitor.aio.operations
  name: MonitorsOperations
  summary: 'MonitorsOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: MonitorsOperations(client, config, serializer, deserializer) -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
- class: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get
  langs:
  - python
  module: azure.mgmt.workloadmonitor.aio.operations
  name: 'get(subscription_id: str, resource_group_name: str, resource_namespace: str,
    resource_type: str, resource_name: str, monitor_id: str, expand: typing.Union[str,
    NoneType] = None, **kwargs) -> azure.mgmt.workloadmonitor.models._models_py3.Monitor'
  namewithoutparameters: get
  summary: 'Get the current status of a monitor of a resource.


    Get the current status of a monitor of a resource.'
  syntax:
    content: 'get(subscription_id: str, resource_group_name: str, resource_namespace:
      str, resource_type: str, resource_name: str, monitor_id: str, expand: typing.Union[str,
      NoneType] = None, **kwargs) -> azure.mgmt.workloadmonitor.models._models_py3.Monitor'
    parameters:
    - description: The subscriptionId of the resource.
      id: subscription_id
      isRequired: true
      type:
      - str
    - description: The resourceGroupName of the resource.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The resourceNamespace of the resource.
      id: resource_namespace
      isRequired: true
      type:
      - str
    - description: The resourceType of the resource.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The resourceType of the resource.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: The monitorId of the resource (url encoded).
      id: monitor_id
      isRequired: true
      type:
      - str
    - description: 'ex: $expand=evidence,configuration.'
      id: expand
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Monitor, or the result of cls(response)
      type:
      - workload_monitor_api.models.Monitor
  type: method
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get
- class: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get_state_change
  langs:
  - python
  module: azure.mgmt.workloadmonitor.aio.operations
  name: 'get_state_change(subscription_id: str, resource_group_name: str, resource_namespace:
    str, resource_type: str, resource_name: str, monitor_id: str, timestamp_unix:
    str, expand: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.workloadmonitor.models._models_py3.MonitorStateChange'
  namewithoutparameters: get_state_change
  summary: 'Get the status of a monitor at a specific timestamp in history.


    Get the status of a monitor at a specific timestamp in history.'
  syntax:
    content: 'get_state_change(subscription_id: str, resource_group_name: str, resource_namespace:
      str, resource_type: str, resource_name: str, monitor_id: str, timestamp_unix:
      str, expand: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.workloadmonitor.models._models_py3.MonitorStateChange'
    parameters:
    - description: The subscriptionId of the resource.
      id: subscription_id
      isRequired: true
      type:
      - str
    - description: The resourceGroupName of the resource.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The resourceNamespace of the resource.
      id: resource_namespace
      isRequired: true
      type:
      - str
    - description: The resourceType of the resource.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The resourceType of the resource.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: The monitorId of the resource (url encoded).
      id: monitor_id
      isRequired: true
      type:
      - str
    - description: The timestamp of the state change (Unix format).
      id: timestamp_unix
      isRequired: true
      type:
      - str
    - description: 'ex: $expand=evidence,configuration.'
      id: expand
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: MonitorStateChange, or the result of cls(response)
      type:
      - workload_monitor_api.models.MonitorStateChange
  type: method
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get_state_change
- class: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list
  langs:
  - python
  module: azure.mgmt.workloadmonitor.aio.operations
  name: 'list(subscription_id: str, resource_group_name: str, resource_namespace:
    str, resource_type: str, resource_name: str, filter: typing.Union[str, NoneType]
    = None, expand: typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.MonitorList'')]'
  namewithoutparameters: list
  summary: 'Get list of a monitors of a resource (with optional filter).


    Get list of a monitors of a resource (with optional filter).'
  syntax:
    content: 'list(subscription_id: str, resource_group_name: str, resource_namespace:
      str, resource_type: str, resource_name: str, filter: typing.Union[str, NoneType]
      = None, expand: typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.MonitorList'')]'
    parameters:
    - description: The subscriptionId of the resource.
      id: subscription_id
      isRequired: true
      type:
      - str
    - description: The resourceGroupName of the resource.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The resourceNamespace of the resource.
      id: resource_namespace
      isRequired: true
      type:
      - str
    - description: The resourceType of the resource.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The resourceType of the resource.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: 'list example: $filter=monitorName eq ''logical-disks|C:>>|<<disk-free-space-mb'';

        history example: $filter=isHeartbeat eq false.'
      id: filter
      isRequired: true
      type:
      - str
    - description: 'ex: $expand=evidence,configuration.'
      id: expand
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either MonitorList or the result of
        cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[workload_monitor_api.models.MonitorList]
  type: method
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list
- class: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list_state_changes
  langs:
  - python
  module: azure.mgmt.workloadmonitor.aio.operations
  name: 'list_state_changes(subscription_id: str, resource_group_name: str, resource_namespace:
    str, resource_type: str, resource_name: str, monitor_id: str, filter: typing.Union[str,
    NoneType] = None, expand: typing.Union[str, NoneType] = None, start_timestamp_utc:
    typing.Union[datetime.datetime, NoneType] = None, end_timestamp_utc: typing.Union[datetime.datetime,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.MonitorStateChangeList'')]'
  namewithoutparameters: list_state_changes
  summary: 'Get history of a monitor of a resource (with optional filter).


    Get history of a monitor of a resource (with optional filter).'
  syntax:
    content: 'list_state_changes(subscription_id: str, resource_group_name: str, resource_namespace:
      str, resource_type: str, resource_name: str, monitor_id: str, filter: typing.Union[str,
      NoneType] = None, expand: typing.Union[str, NoneType] = None, start_timestamp_utc:
      typing.Union[datetime.datetime, NoneType] = None, end_timestamp_utc: typing.Union[datetime.datetime,
      NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.MonitorStateChangeList'')]'
    parameters:
    - description: The subscriptionId of the resource.
      id: subscription_id
      isRequired: true
      type:
      - str
    - description: The resourceGroupName of the resource.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The resourceNamespace of the resource.
      id: resource_namespace
      isRequired: true
      type:
      - str
    - description: The resourceType of the resource.
      id: resource_type
      isRequired: true
      type:
      - str
    - description: The resourceType of the resource.
      id: resource_name
      isRequired: true
      type:
      - str
    - description: The monitorId of the resource (url encoded).
      id: monitor_id
      isRequired: true
      type:
      - str
    - description: 'list example: $filter=monitorName eq ''logical-disks|C:>>|<<disk-free-space-mb'';

        history example: $filter=isHeartbeat eq false.'
      id: filter
      isRequired: true
      type:
      - str
    - description: 'ex: $expand=evidence,configuration.'
      id: expand
      isRequired: true
      type:
      - str
    - description: The start Timestamp for the desired history.
      id: start_timestamp_utc
      isRequired: true
      type:
      - datetime.datetime
    - description: The end Timestamp for the desired history.
      id: end_timestamp_utc
      isRequired: true
      type:
      - datetime.datetime
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either MonitorStateChangeList or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[workload_monitor_api.models.MonitorStateChangeList]
  type: method
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list_state_changes
- class: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.models
  langs:
  - python
  module: azure.mgmt.workloadmonitor.aio.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.workloadmonitor.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\workloadmonitor\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.models
references:
- fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get
  isExternal: false
  name: 'get(subscription_id: str, resource_group_name: str, resource_namespace: str,
    resource_type: str, resource_name: str, monitor_id: str, expand: typing.Union[str,
    NoneType] = None, **kwargs) -> azure.mgmt.workloadmonitor.models._models_py3.Monitor'
  parent: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get
- fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get_state_change
  isExternal: false
  name: 'get_state_change(subscription_id: str, resource_group_name: str, resource_namespace:
    str, resource_type: str, resource_name: str, monitor_id: str, timestamp_unix:
    str, expand: typing.Union[str, NoneType] = None, **kwargs) -> azure.mgmt.workloadmonitor.models._models_py3.MonitorStateChange'
  parent: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.get_state_change
- fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list
  isExternal: false
  name: 'list(subscription_id: str, resource_group_name: str, resource_namespace:
    str, resource_type: str, resource_name: str, filter: typing.Union[str, NoneType]
    = None, expand: typing.Union[str, NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.MonitorList'')]'
  parent: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list
- fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list_state_changes
  isExternal: false
  name: 'list_state_changes(subscription_id: str, resource_group_name: str, resource_namespace:
    str, resource_type: str, resource_name: str, monitor_id: str, filter: typing.Union[str,
    NoneType] = None, expand: typing.Union[str, NoneType] = None, start_timestamp_utc:
    typing.Union[datetime.datetime, NoneType] = None, end_timestamp_utc: typing.Union[datetime.datetime,
    NoneType] = None, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.MonitorStateChangeList'')]'
  parent: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.list_state_changes
- fullName: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations
  uid: azure.mgmt.workloadmonitor.aio.operations.MonitorsOperations.models
- fullName: azure.core.async_paging.AsyncItemPaged[workload_monitor_api.models.MonitorList]
  name: AsyncItemPaged[MonitorList]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: workload_monitor_api.models.MonitorList
    name: MonitorList
    uid: workload_monitor_api.models.MonitorList
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[workload_monitor_api.models.MonitorList]
- fullName: azure.core.async_paging.AsyncItemPaged[workload_monitor_api.models.MonitorStateChangeList]
  name: AsyncItemPaged[MonitorStateChangeList]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: workload_monitor_api.models.MonitorStateChangeList
    name: MonitorStateChangeList
    uid: workload_monitor_api.models.MonitorStateChangeList
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[workload_monitor_api.models.MonitorStateChangeList]
