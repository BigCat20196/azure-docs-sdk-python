### YamlMime:PythonClass
uid: azure.containerregistry.aio.RegistryArtifact
name: RegistryArtifact
fullName: azure.containerregistry.aio.RegistryArtifact
module: azure.containerregistry.aio
inheritances:
- azure.containerregistry.aio._async_base_client.ContainerRegistryBaseClient
constructor:
  syntax: 'RegistryArtifact(endpoint: str, repository: str, tag_or_digest: str, credential:
    AsyncTokenCredential, **kwargs: typing.Dict[str, typing.Any]) -> None'
methods:
- uid: azure.containerregistry.aio.RegistryArtifact.delete
  name: delete
  summary: 'Delete a repository

    :returns: Object containing information about the deleted repository

    :rtype: <xref:azure.containerregistry.DeleteRepositoryResult>

    :raises: <xref:azure.core.exceptions.ResourceNotFoundError>


    Example'
  signature: 'delete(**kwargs: typing.Dict[str, typing.Any]) -> azure.containerregistry._models.DeleteRepositoryResult'
- uid: azure.containerregistry.aio.RegistryArtifact.delete_tag
  name: delete_tag
  summary: 'Delete a tag from a repository

    :param str tag: The tag to be deleted

    :returns: None

    :raises: <xref:azure.core.exceptions.ResourceNotFoundError>


    Example'
  signature: 'delete_tag(tag: str, **kwargs: typing.Dict[str, typing.Any]) -> None'
- uid: azure.containerregistry.aio.RegistryArtifact.get_manifest_properties
  name: get_manifest_properties
  summary: 'Get the properties of a registry artifact


    Example'
  signature: 'get_manifest_properties(**kwargs: typing.Dict[str, typing.Any]) -> azure.containerregistry._models.ArtifactManifestProperties'
  return:
    description: <xref:azure.containerregistry.ArtifactManifestProperties>
- uid: azure.containerregistry.aio.RegistryArtifact.get_tag_properties
  name: get_tag_properties
  summary: 'Get the properties for a tag

    :param tag: The tag to get properties for

    :type tag: str

    :returns: <xref:azure.containerregistry.ArtifactTagProperties>

    :raises: <xref:azure.core.exceptions.ResourceNotFoundError>


    Example'
  signature: 'get_tag_properties(tag: str, **kwargs: typing.Dict[str, typing.Any])
    -> azure.containerregistry._models.ArtifactTagProperties'
- uid: azure.containerregistry.aio.RegistryArtifact.list_tags
  name: list_tags
  summary: "List the tags for a repository\n:keyword last: Query parameter for the\
    \ last item in the previous call. Ensuing\n\n   call will return values after\
    \ last lexically\n\nExample"
  signature: 'list_tags(**kwargs: typing.Dict[str, typing.Any]) -> azure.core.async_paging.AsyncItemPaged'
  return:
    description: ItemPaged[<xref:azure.containerregistry.ArtifactTagProperties>]
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>
- uid: azure.containerregistry.aio.RegistryArtifact.set_manifest_properties
  name: set_manifest_properties
  summary: 'Set the properties for a manifest


    Example'
  signature: 'set_manifest_properties(permissions: azure.containerregistry._models.ContentProperties,
    **kwargs: typing.Dict[str, typing.Any]) -> azure.containerregistry._models.ArtifactManifestProperties'
  parameters:
  - name: permissions
    description: The property's values to be set
    isRequired: true
    types:
    - <xref:azure.containerregistry.ContentProperties>
  return:
    description: <xref:azure.containerregistry.ArtifactManifestProperties>
- uid: azure.containerregistry.aio.RegistryArtifact.set_tag_properties
  name: set_tag_properties
  summary: 'Set the properties for a tag

    :param tag: Tag to set properties for

    :type tag: str

    :param permissions: The property''s values to be set

    :type permissions: ContentProperties

    :returns: <xref:azure.containerregistry.ArtifactTagProperties>

    :raises: <xref:azure.core.exceptions.ResourceNotFoundError>


    Example'
  signature: 'set_tag_properties(tag: str, permissions: azure.containerregistry._models.ContentProperties,
    **kwargs: typing.Dict[str, typing.Any]) -> azure.containerregistry._models.ArtifactTagProperties'
