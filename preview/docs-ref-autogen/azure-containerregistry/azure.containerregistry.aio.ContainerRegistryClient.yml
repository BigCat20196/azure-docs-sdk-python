### YamlMime:PythonClass
uid: azure.containerregistry.aio.ContainerRegistryClient
name: ContainerRegistryClient
fullName: azure.containerregistry.aio.ContainerRegistryClient
module: azure.containerregistry.aio
inheritances:
- azure.containerregistry.aio._async_base_client.ContainerRegistryBaseClient
constructor:
  syntax: 'ContainerRegistryClient(endpoint: str, credential: AsyncTokenCredential,
    **kwargs: typing.Dict[str, typing.Any]) -> None'
methods:
- uid: azure.containerregistry.aio.ContainerRegistryClient.delete_repository
  name: delete_repository
  summary: Delete a repository
  signature: 'delete_repository(repository: str, **kwargs: typing.Dict[str, typing.Any])
    -> azure.containerregistry._models.DeletedRepositoryResult'
  parameters:
  - name: repository
    description: The repository to delete
    isRequired: true
    types:
    - <xref:azure.containerregistry.aio.str>
  return:
    description: Object containing information about the deleted repository
    types:
    - <xref:azure.containerregistry.DeletedRepositoryResult>
- uid: azure.containerregistry.aio.ContainerRegistryClient.get_repository_client
  name: get_repository_client
  summary: Get a repository client
  signature: 'get_repository_client(repository: str, **kwargs: typing.Dict[str, typing.Any])
    -> azure.containerregistry.aio._async_container_repository_client.ContainerRepositoryClient'
  parameters:
  - name: repository
    description: The repository to create a client for
    isRequired: true
    types:
    - <xref:azure.containerregistry.aio.str>
  return:
    description: <xref:azure.containerregistry.aio.ContainerRepositoryClient>
- uid: azure.containerregistry.aio.ContainerRegistryClient.list_repositories
  name: list_repositories
  summary: List all repositories
  signature: 'list_repositories(**kwargs: typing.Dict[str, typing.Any]) -> azure.core.async_paging.AsyncItemPaged'
  return:
    description: ItemPaged[str]
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>
