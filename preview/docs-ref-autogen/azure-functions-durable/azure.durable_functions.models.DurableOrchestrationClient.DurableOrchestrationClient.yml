### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_check_status_response
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_http_management_payload
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_client_response_links
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_all
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_by
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history_by
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.raise_event
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.rewind
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.start_new
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.terminate
  - azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.wait_for_completion_or_create_check_status_response
  class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: DurableOrchestrationClient
  summary: 'Durable Orchestration Client.


    Client for starting, querying, terminating and raising events to

    orchestration instances.'
  syntax:
    content: 'DurableOrchestrationClient(context: str)'
  type: class
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_check_status_response
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'create_check_status_response(request: azure.functions._http.HttpRequest,
    instance_id: str) -> azure.functions._http.HttpResponse'
  namewithoutparameters: create_check_status_response
  summary: Create a HttpResponse that contains useful information for         checking
    the status of the specified instance.
  syntax:
    content: 'create_check_status_response(request: azure.functions._http.HttpRequest,
      instance_id: str) -> azure.functions._http.HttpResponse'
    parameters:
    - description: The HTTP request that triggered the current orchestration instance.
      id: request
      isRequired: true
      type:
      - HttpRequest
    - description: The ID of the orchestration instance to check.
      id: instance_id
      isRequired: true
      type:
      - str
    return:
      description: 'An HTTP 202 response with a Location header

        and a payload containing instance management URLs'
      type:
      - HttpResponse
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_check_status_response
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_http_management_payload
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'create_http_management_payload(instance_id: str) -> typing.Dict[str, str]'
  namewithoutparameters: create_http_management_payload
  summary: Create a dictionary of orchestrator management urls.
  syntax:
    content: 'create_http_management_payload(instance_id: str) -> typing.Dict[str,
      str]'
    parameters:
    - description: The ID of the orchestration instance to check.
      id: instance_id
      isRequired: true
      type:
      - str
    return:
      description: a dictionary object of orchestrator instance management urls
      type:
      - Dict[str, str]
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_http_management_payload
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_client_response_links
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'get_client_response_links(request: typing.Union[azure.functions._http.HttpRequest,
    NoneType], instance_id: str) -> typing.Dict[str, str]'
  namewithoutparameters: get_client_response_links
  summary: Create a dictionary of orchestrator management urls.
  syntax:
    content: 'get_client_response_links(request: typing.Union[azure.functions._http.HttpRequest,
      NoneType], instance_id: str) -> typing.Dict[str, str]'
    parameters:
    - description: The HTTP request that triggered the current orchestration instance.
      id: request
      isRequired: true
      type:
      - Optional[HttpRequest]
    - description: The ID of the orchestration instance to check.
      id: instance_id
      isRequired: true
      type:
      - str
    return:
      description: a dictionary object of orchestrator instance management urls
      type:
      - Dict[str, str]
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_client_response_links
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'get_status(instance_id: str, show_history: bool = False, show_history_output:
    bool = False, show_input: bool = False) -> azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus'
  namewithoutparameters: get_status
  summary: Get the status of the specified orchestration instance.
  syntax:
    content: 'get_status(instance_id: str, show_history: bool = False, show_history_output:
      bool = False, show_input: bool = False) -> azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus'
    parameters:
    - description: The ID of the orchestration instance to query.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: Boolean marker for including execution history in the response.
      id: show_history
      isRequired: true
      type:
      - bool
    - description: Boolean marker for including output in the execution history response.
      id: show_history_output
      isRequired: true
      type:
      - bool
    - description: Boolean marker for including the input in the response.
      id: show_input
      isRequired: true
      type:
      - bool
    return:
      description: The status of the requested orchestration instance
      type:
      - DurableOrchestrationStatus
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_all
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: get_status_all() -> typing.List[azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus]
  namewithoutparameters: get_status_all
  summary: Get the status of all orchestration instances.
  syntax:
    content: get_status_all() -> typing.List[azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus]
    return:
      description: The status of the requested orchestration instances
      type:
      - DurableOrchestrationStatus
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_all
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_by
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'get_status_by(created_time_from: datetime.datetime = None, created_time_to:
    datetime.datetime = None, runtime_status: typing.List[azure.durable_functions.models.OrchestrationRuntimeStatus.OrchestrationRuntimeStatus]
    = None) -> typing.List[azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus]'
  namewithoutparameters: get_status_by
  summary: Get the status of all orchestration instances that match the specified
    conditions.
  syntax:
    content: 'get_status_by(created_time_from: datetime.datetime = None, created_time_to:
      datetime.datetime = None, runtime_status: typing.List[azure.durable_functions.models.OrchestrationRuntimeStatus.OrchestrationRuntimeStatus]
      = None) -> typing.List[azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus]'
    parameters:
    - description: Return orchestration instances which were created after this Date.
      id: created_time_from
      isRequired: true
      type:
      - datetime
    - description: Return orchestration instances which were created before this Date.
      id: created_time_to
      isRequired: true
      type:
      - datetime
    - description: 'Return orchestration instances which match any of the runtimeStatus
        values

        in this list.'
      id: runtime_status
      isRequired: true
      type:
      - List[OrchestrationRuntimeStatus]
    return:
      description: The status of the requested orchestration instances
      type:
      - DurableOrchestrationStatus
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_by
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'purge_instance_history(instance_id: str) -> azure.durable_functions.models.PurgeHistoryResult.PurgeHistoryResult'
  namewithoutparameters: purge_instance_history
  summary: Delete the history of the specified orchestration instance.
  syntax:
    content: 'purge_instance_history(instance_id: str) -> azure.durable_functions.models.PurgeHistoryResult.PurgeHistoryResult'
    parameters:
    - description: The ID of the orchestration instance to delete.
      id: instance_id
      isRequired: true
      type:
      - str
    return:
      description: The results of the request to delete the orchestration instance
      type:
      - PurgeHistoryResult
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history_by
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'purge_instance_history_by(created_time_from: typing.Union[datetime.datetime,
    NoneType] = None, created_time_to: typing.Union[datetime.datetime, NoneType] =
    None, runtime_status: typing.Union[typing.List[azure.durable_functions.models.OrchestrationRuntimeStatus.OrchestrationRuntimeStatus],
    NoneType] = None) -> azure.durable_functions.models.PurgeHistoryResult.PurgeHistoryResult'
  namewithoutparameters: purge_instance_history_by
  summary: Delete the history of all orchestration instances that match the specified
    conditions.
  syntax:
    content: 'purge_instance_history_by(created_time_from: typing.Union[datetime.datetime,
      NoneType] = None, created_time_to: typing.Union[datetime.datetime, NoneType]
      = None, runtime_status: typing.Union[typing.List[azure.durable_functions.models.OrchestrationRuntimeStatus.OrchestrationRuntimeStatus],
      NoneType] = None) -> azure.durable_functions.models.PurgeHistoryResult.PurgeHistoryResult'
    parameters:
    - description: Delete orchestration history which were created after this Date.
      id: created_time_from
      isRequired: true
      type:
      - Optional[datetime]
    - description: Delete orchestration history which were created before this Date.
      id: created_time_to
      isRequired: true
      type:
      - Optional[datetime]
    - description: 'Delete orchestration instances which match any of the runtimeStatus
        values

        in this list.'
      id: runtime_status
      isRequired: true
      type:
      - Optional[List[OrchestrationRuntimeStatus]]
    return:
      description: The results of the request to purge history
      type:
      - PurgeHistoryResult
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history_by
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.raise_event
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'raise_event(instance_id: str, event_name: str, event_data: typing.Any = None,
    task_hub_name: str = None, connection_name: str = None) -> None'
  namewithoutparameters: raise_event
  summary: 'Send an event notification message to a waiting orchestration instance.


    In order to handle the event, the target orchestration instance must be

    waiting for an event named *eventName* using waitForExternalEvent API.'
  syntax:
    content: 'raise_event(instance_id: str, event_name: str, event_data: typing.Any
      = None, task_hub_name: str = None, connection_name: str = None) -> None'
    parameters:
    - description: The ID of the orchestration instance that will handle the event.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: The name of the event.
      id: event_name
      isRequired: true
      type:
      - str
    - description: The JSON-serializable data associated with the event.
      id: event_data
      isRequired: true
      type:
      - Any, optional
    - description: The TaskHubName of the orchestration that will handle the event.
      id: task_hub_name
      isRequired: true
      type:
      - str, optional
    - description: The name of the connection string associated with *taskHubName.*
      id: connection_name
      isRequired: true
      type:
      - str, optional
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.raise_event
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.rewind
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'rewind(instance_id: str, reason: str, task_hub_name: typing.Union[str, NoneType]
    = None, connection_name: typing.Union[str, NoneType] = None)'
  namewithoutparameters: rewind
  summary: Return / "rewind" a failed orchestration instance to a prior "healthy"
    state.
  syntax:
    content: 'rewind(instance_id: str, reason: str, task_hub_name: typing.Union[str,
      NoneType] = None, connection_name: typing.Union[str, NoneType] = None)'
    parameters:
    - description: The ID of the orchestration instance to rewind.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: The reason for rewinding the orchestration instance.
      id: reason
      isRequired: true
      type:
      - str
    - description: The TaskHub of the orchestration to rewind
      id: task_hub_name
      isRequired: true
      type:
      - Optional[str]
    - description: 'Name of the application setting containing the storage

        connection string to use.'
      id: connection_name
      isRequired: true
      type:
      - Optional[str]
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.rewind
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.start_new
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'start_new(orchestration_function_name: str, instance_id: typing.Union[str,
    NoneType] = None, client_input: typing.Union[typing.Any, NoneType] = None) ->
    str'
  namewithoutparameters: start_new
  summary: 'Start a new instance of the specified orchestrator function.


    If an orchestration instance with the specified ID already exists, the

    existing instance will be silently replaced by this new instance.'
  syntax:
    content: 'start_new(orchestration_function_name: str, instance_id: typing.Union[str,
      NoneType] = None, client_input: typing.Union[typing.Any, NoneType] = None) ->
      str'
    parameters:
    - description: The name of the orchestrator function to start.
      id: orchestration_function_name
      isRequired: true
      type:
      - str
    - description: 'The ID to use for the new orchestration instance. If no instance
        id is specified,

        the Durable Functions extension will generate a random GUID (recommended).'
      id: instance_id
      isRequired: true
      type:
      - Optional[str]
    - description: JSON-serializable input value for the orchestrator function.
      id: client_input
      isRequired: true
      type:
      - Optional[Any]
    return:
      description: The ID of the new orchestration instance if successful, None if
        not.
      type:
      - str
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.start_new
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.terminate
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'terminate(instance_id: str, reason: str) -> None'
  namewithoutparameters: terminate
  summary: Terminate the specified orchestration instance.
  syntax:
    content: 'terminate(instance_id: str, reason: str) -> None'
    parameters:
    - description: The ID of the orchestration instance to query.
      id: instance_id
      isRequired: true
      type:
      - str
    - description: The reason for terminating the instance.
      id: reason
      isRequired: true
      type:
      - str
    return:
      type:
      - None
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.terminate
- class: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.wait_for_completion_or_create_check_status_response
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationClient
  name: 'wait_for_completion_or_create_check_status_response(request, instance_id:
    str, timeout_in_milliseconds: int = 10000, retry_interval_in_milliseconds: int
    = 1000) -> azure.functions._http.HttpResponse'
  namewithoutparameters: wait_for_completion_or_create_check_status_response
  summary: 'Create an HTTP response.


    The response either contains a payload of management URLs for a non-completed
    instance or

    contains the payload containing the output of the completed orchestration.


    If the orchestration does not complete within the specified timeout, then the
    HTTP response

    will be identical to that of [[createCheckStatusResponse]].'
  syntax:
    content: 'wait_for_completion_or_create_check_status_response(request, instance_id:
      str, timeout_in_milliseconds: int = 10000, retry_interval_in_milliseconds: int
      = 1000) -> azure.functions._http.HttpResponse'
    parameters:
    - description: The HTTP request that triggered the current function.
      id: request
      isRequired: true
    - description: The unique ID of the instance to check.
      id: instance_id
      isRequired: true
    - description: 'Total allowed timeout for output from the durable function.

        The default value is 10 seconds.'
      id: timeout_in_milliseconds
      isRequired: true
    - description: 'The timeout between checks for output from the durable function.

        The default value is 1 second.'
      id: retry_interval_in_milliseconds
      isRequired: true
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.wait_for_completion_or_create_check_status_response
references:
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_check_status_response
  isExternal: false
  name: 'create_check_status_response(request: azure.functions._http.HttpRequest,
    instance_id: str) -> azure.functions._http.HttpResponse'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_check_status_response
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_http_management_payload
  isExternal: false
  name: 'create_http_management_payload(instance_id: str) -> typing.Dict[str, str]'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.create_http_management_payload
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_client_response_links
  isExternal: false
  name: 'get_client_response_links(request: typing.Union[azure.functions._http.HttpRequest,
    NoneType], instance_id: str) -> typing.Dict[str, str]'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_client_response_links
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status
  isExternal: false
  name: 'get_status(instance_id: str, show_history: bool = False, show_history_output:
    bool = False, show_input: bool = False) -> azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_all
  isExternal: false
  name: get_status_all() -> typing.List[azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus]
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_all
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_by
  isExternal: false
  name: 'get_status_by(created_time_from: datetime.datetime = None, created_time_to:
    datetime.datetime = None, runtime_status: typing.List[azure.durable_functions.models.OrchestrationRuntimeStatus.OrchestrationRuntimeStatus]
    = None) -> typing.List[azure.durable_functions.models.DurableOrchestrationStatus.DurableOrchestrationStatus]'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.get_status_by
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history
  isExternal: false
  name: 'purge_instance_history(instance_id: str) -> azure.durable_functions.models.PurgeHistoryResult.PurgeHistoryResult'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history_by
  isExternal: false
  name: 'purge_instance_history_by(created_time_from: typing.Union[datetime.datetime,
    NoneType] = None, created_time_to: typing.Union[datetime.datetime, NoneType] =
    None, runtime_status: typing.Union[typing.List[azure.durable_functions.models.OrchestrationRuntimeStatus.OrchestrationRuntimeStatus],
    NoneType] = None) -> azure.durable_functions.models.PurgeHistoryResult.PurgeHistoryResult'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.purge_instance_history_by
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.raise_event
  isExternal: false
  name: 'raise_event(instance_id: str, event_name: str, event_data: typing.Any = None,
    task_hub_name: str = None, connection_name: str = None) -> None'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.raise_event
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.rewind
  isExternal: false
  name: 'rewind(instance_id: str, reason: str, task_hub_name: typing.Union[str, NoneType]
    = None, connection_name: typing.Union[str, NoneType] = None)'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.rewind
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.start_new
  isExternal: false
  name: 'start_new(orchestration_function_name: str, instance_id: typing.Union[str,
    NoneType] = None, client_input: typing.Union[typing.Any, NoneType] = None) ->
    str'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.start_new
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.terminate
  isExternal: false
  name: 'terminate(instance_id: str, reason: str) -> None'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.terminate
- fullName: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.wait_for_completion_or_create_check_status_response
  isExternal: false
  name: 'wait_for_completion_or_create_check_status_response(request, instance_id:
    str, timeout_in_milliseconds: int = 10000, retry_interval_in_milliseconds: int
    = 1000) -> azure.functions._http.HttpResponse'
  parent: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient
  uid: azure.durable_functions.models.DurableOrchestrationClient.DurableOrchestrationClient.wait_for_completion_or_create_check_status_response
- fullName: Dict[str, str]
  name: Dict[str, str]
  spec.python:
  - fullName: Dict
    name: Dict
    uid: Dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: Dict[str, str]
- fullName: Optional[HttpRequest]
  name: Optional[HttpRequest]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: HttpRequest
    name: HttpRequest
    uid: HttpRequest
  - fullName: ']'
    name: ']'
  uid: Optional[HttpRequest]
- fullName: List[OrchestrationRuntimeStatus]
  name: List[OrchestrationRuntimeStatus]
  spec.python:
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: OrchestrationRuntimeStatus
    name: OrchestrationRuntimeStatus
    uid: OrchestrationRuntimeStatus
  - fullName: ']'
    name: ']'
  uid: List[OrchestrationRuntimeStatus]
- fullName: Optional[datetime]
  name: Optional[datetime]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: datetime
    name: datetime
    uid: datetime
  - fullName: ']'
    name: ']'
  uid: Optional[datetime]
- fullName: Optional[List[OrchestrationRuntimeStatus]]
  name: Optional[List[OrchestrationRuntimeStatus]]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: OrchestrationRuntimeStatus
    name: OrchestrationRuntimeStatus
    uid: OrchestrationRuntimeStatus
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: Optional[List[OrchestrationRuntimeStatus]]
- fullName: Any, optional
  name: Any, optional
  spec.python:
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ', '
    name: ', '
  - fullName: optional
    name: optional
    uid: optional
  uid: Any, optional
- fullName: str, optional
  name: str, optional
  spec.python:
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: optional
    name: optional
    uid: optional
  uid: str, optional
- fullName: str, optional
  name: str, optional
  spec.python:
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: optional
    name: optional
    uid: optional
  uid: str, optional
- fullName: Optional[str]
  name: Optional[str]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: Optional[str]
- fullName: Optional[Any]
  name: Optional[Any]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ']'
    name: ']'
  uid: Optional[Any]
