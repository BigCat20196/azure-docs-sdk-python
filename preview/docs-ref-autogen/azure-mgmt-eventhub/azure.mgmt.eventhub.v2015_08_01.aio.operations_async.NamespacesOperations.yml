### YamlMime:PythonClass
uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations
name: NamespacesOperations
fullName: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations
module: azure.mgmt.eventhub.v2015_08_01.aio.operations_async
inheritances:
- builtins.object
summary: 'NamespacesOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: NamespacesOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: "Creates or updates a namespace. Once created, this namespace's resource\
    \ manifest is immutable.\nThis operation is idempotent.\n\n   param resource_group_name:\n\
    \      Name of the resource group within the azure subscription.\n\n   type resource_group_name:\n\
    \      str\n\n   param namespace_name:\n      The Namespace name.\n\n   type namespace_name:\n\
    \      str\n\n   param parameters:\n      Parameters for creating a namespace\
    \ resource.\n\n   type parameters:\n      ~azure.mgmt.eventhub.v2015_08_01.models.NamespaceCreateOrUpdateParameters\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  NamespaceResource, or the result of cls(response)\n\n   rtype:\n      ~azure.mgmt.eventhub.v2015_08_01.models.NamespaceResource\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  signature: 'begin_create_or_update(resource_group_name: str, namespace_name: str,
    parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceCreateOrUpdateParameters,
    **kwargs) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceResource'
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.begin_delete
  name: begin_delete
  summary: "Deletes an existing namespace. This operation also removes all associated\
    \ resources under the\nnamespace.\n\n   param resource_group_name:\n      Name\
    \ of the resource group within the azure subscription.\n\n   type resource_group_name:\n\
    \      str\n\n   param namespace_name:\n      The Namespace name.\n\n   type namespace_name:\n\
    \      str\n\n   keyword callable cls:\n      A custom type or function that will\
    \ be passed the direct response\n\n   keyword str continuation_token:\n      A\
    \ continuation token to restart a poller from a saved state.\n\n   keyword polling:\n\
    \      True for ARMPolling, False for no polling, or a\n      polling object for\
    \ personal polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  None, or the result of cls(response)\n\n   rtype:\n      None\n\n   raises\
    \ ~azure.core.exceptions.HttpResponseError:"
  signature: 'begin_delete(resource_group_name: str, namespace_name: str, **kwargs)
    -> None'
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.check_name_availability
  name: check_name_availability
  summary: Check the give Namespace name availability.
  signature: 'check_name_availability(parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.CheckNameAvailabilityParameter,
    **kwargs) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.CheckNameAvailabilityResult'
  parameters:
  - name: parameters
    description: Parameters to check availability of the given Namespace name.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.CheckNameAvailabilityParameter>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: CheckNameAvailabilityResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.CheckNameAvailabilityResult>
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.create_or_update_authorization_rule
  name: create_or_update_authorization_rule
  summary: Creates or updates an AuthorizationRule for a Namespace.
  signature: 'create_or_update_authorization_rule(resource_group_name: str, namespace_name:
    str, authorization_rule_name: str, parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.SharedAccessAuthorizationRuleCreateOrUpdateParameters,
    **kwargs) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.SharedAccessAuthorizationRuleResource'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The shared access AuthorizationRule.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.SharedAccessAuthorizationRuleCreateOrUpdateParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: SharedAccessAuthorizationRuleResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.SharedAccessAuthorizationRuleResource>
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.delete_authorization_rule
  name: delete_authorization_rule
  summary: Deletes an AuthorizationRule for a Namespace.
  signature: 'delete_authorization_rule(resource_group_name: str, namespace_name:
    str, authorization_rule_name: str, **kwargs) -> None'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.get
  name: get
  summary: Gets the description of the specified namespace.
  signature: 'get(resource_group_name: str, namespace_name: str, **kwargs) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceResource'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: NamespaceResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceResource>
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.get_authorization_rule
  name: get_authorization_rule
  summary: Gets an AuthorizationRule for a Namespace by rule name.
  signature: 'get_authorization_rule(resource_group_name: str, namespace_name: str,
    authorization_rule_name: str, **kwargs) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.SharedAccessAuthorizationRuleResource'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: SharedAccessAuthorizationRuleResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.SharedAccessAuthorizationRuleResource>
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.list_authorization_rules
  name: list_authorization_rules
  summary: Gets a list of authorization rules for a Namespace.
  signature: 'list_authorization_rules(resource_group_name: str, namespace_name: str,
    **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.SharedAccessAuthorizationRuleListResult'')]'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either SharedAccessAuthorizationRuleListResult
      or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventhub.v2015_08_01.models.SharedAccessAuthorizationRuleListResult>]
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: Lists the available Namespaces within a resource group.
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.NamespaceListResult'')]'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either NamespaceListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceListResult>]
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.list_by_subscription
  name: list_by_subscription
  summary: Lists all the available Namespaces within a subscription, irrespective
    of the resource groups.
  signature: list_by_subscription(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.NamespaceListResult')]
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either NamespaceListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceListResult>]
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.list_keys
  name: list_keys
  summary: Gets the primary and secondary connection strings for the Namespace.
  signature: 'list_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, **kwargs) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.ResourceListKeys'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: ResourceListKeys, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.ResourceListKeys>
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.regenerate_keys
  name: regenerate_keys
  summary: Regenerates the primary or secondary connection strings for the specified
    Namespace.
  signature: 'regenerate_keys(resource_group_name: str, namespace_name: str, authorization_rule_name:
    str, parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.RegenerateKeysParameters,
    **kwargs) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.ResourceListKeys'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: authorization_rule_name
    description: The authorization rule name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters required to regenerate the connection string.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.RegenerateKeysParameters>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: ResourceListKeys, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.ResourceListKeys>
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.update
  name: update
  summary: 'Creates or updates a namespace. Once created, this namespace''s resource
    manifest is immutable.

    This operation is idempotent.'
  signature: 'update(resource_group_name: str, namespace_name: str, parameters: azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceUpdateParameter,
    **kwargs) -> azure.mgmt.eventhub.v2015_08_01.models._models_py3.NamespaceResource'
  parameters:
  - name: resource_group_name
    description: Name of the resource group within the azure subscription.
    isRequired: true
    types:
    - <xref:str>
  - name: namespace_name
    description: The Namespace name.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Parameters for updating a namespace resource.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceUpdateParameter>
  - name: cls
    description: A custom type or function that will be passed the direct response
    isRequired: true
    types:
    - <xref:callable>
  return:
    description: NamespaceResource, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventhub.v2015_08_01.models.NamespaceResource>
    - <xref:None>
attributes:
- uid: azure.mgmt.eventhub.v2015_08_01.aio.operations_async.NamespacesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.eventhub.v2015_08_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\eventhub\\v2015_08_01\\models\\__init__.py'>
