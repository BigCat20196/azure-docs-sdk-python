### YamlMime:PythonClass
uid: azure.mgmt.media.operations.StreamingEndpointsOperations
name: StreamingEndpointsOperations
fullName: azure.mgmt.media.operations.StreamingEndpointsOperations
module: azure.mgmt.media.operations
inheritances:
- builtins.object
summary: 'StreamingEndpointsOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: StreamingEndpointsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: "models \u2013 Alias to model classes used in this operation group"
methods:
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.begin_create
  name: begin_create
  summary: 'Create StreamingEndpoint.


    Creates a streaming endpoint.'
  signature: begin_create(resource_group_name, account_name, streaming_endpoint_name,
    parameters, auto_start=None, **kwargs)
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: parameters
    description: Streaming endpoint properties needed for creation.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.StreamingEndpoint>
  - name: auto_start
    description: 'The flag indicates if the resource should be automatically started
      on

      creation.'
    defaultValue: None
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
  return:
    description: An instance of LROPoller that returns either StreamingEndpoint or
      the result of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.media.models.StreamingEndpoint>]
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.begin_delete
  name: begin_delete
  summary: 'Delete StreamingEndpoint.


    Deletes a streaming endpoint.'
  signature: begin_delete(resource_group_name, account_name, streaming_endpoint_name,
    **kwargs)
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[[None](https://docs.python.org/3.6/library/constants.html#None)]
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.begin_scale
  name: begin_scale
  summary: 'Scale StreamingEndpoint.


    Scales an existing streaming endpoint.'
  signature: begin_scale(resource_group_name, account_name, streaming_endpoint_name,
    parameters, **kwargs)
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: parameters
    description: Streaming endpoint scale parameters.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.StreamingEntityScaleUnit>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[[None](https://docs.python.org/3.6/library/constants.html#None)]
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.begin_start
  name: begin_start
  summary: 'Start StreamingEndpoint.


    Starts an existing streaming endpoint.'
  signature: begin_start(resource_group_name, account_name, streaming_endpoint_name,
    **kwargs)
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[[None](https://docs.python.org/3.6/library/constants.html#None)]
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.begin_stop
  name: begin_stop
  summary: 'Stop StreamingEndpoint.


    Stops an existing streaming endpoint.'
  signature: begin_stop(resource_group_name, account_name, streaming_endpoint_name,
    **kwargs)
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[[None](https://docs.python.org/3.6/library/constants.html#None)]
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.begin_update
  name: begin_update
  summary: 'Update StreamingEndpoint.


    Updates a existing streaming endpoint.'
  signature: begin_update(resource_group_name, account_name, streaming_endpoint_name,
    parameters, **kwargs)
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: parameters
    description: Streaming endpoint properties needed for creation.
    isRequired: true
    types:
    - <xref:azure.mgmt.media.models.StreamingEndpoint>
  return:
    description: An instance of LROPoller that returns either StreamingEndpoint or
      the result of cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.media.models.StreamingEndpoint>]
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.get
  name: get
  summary: 'Get StreamingEndpoint.


    Gets a streaming endpoint.'
  signature: get(resource_group_name, account_name, streaming_endpoint_name, **kwargs)
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: streaming_endpoint_name
    description: The name of the streaming endpoint, maximum length is 24.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: StreamingEndpoint, or the result of cls(response)
    types:
    - <xref:azure.mgmt.media.models.StreamingEndpoint>
    - '[None](https://docs.python.org/3.6/library/constants.html#None)'
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.list
  name: list
  summary: 'List StreamingEndpoints.


    Lists the streaming endpoints in the account.'
  signature: list(resource_group_name, account_name, **kwargs)
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the Azure subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: The Media Services account name.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An iterator like instance of either StreamingEndpointListResult or
      the result of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.media.models.StreamingEndpointListResult>]
attributes:
- uid: azure.mgmt.media.operations.StreamingEndpointsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.media.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\media\\models\\__init__.py'>
