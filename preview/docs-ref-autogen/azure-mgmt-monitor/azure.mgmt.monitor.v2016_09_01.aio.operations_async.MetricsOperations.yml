### YamlMime:PythonClass
uid: azure.mgmt.monitor.v2016_09_01.aio.operations_async.MetricsOperations
name: MetricsOperations
fullName: azure.mgmt.monitor.v2016_09_01.aio.operations_async.MetricsOperations
module: azure.mgmt.monitor.v2016_09_01.aio.operations_async
inheritances:
- builtins.object
summary: 'MetricsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: MetricsOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.monitor.v2016_09_01.aio.operations_async.MetricsOperations.list
  name: list
  summary: "Lists the metric values for a resource.\n\n   param resource_uri:\n  \
    \    The identifier of the resource.\n\n   type resource_uri:\n      str\n\n \
    \  param filter:\n      Reduces the set of data collected.:code:>>`<<<br>`The\
    \ filter is optional. If present\n\n\nit must contain a list of metric names to\
    \ retrieve of the form: *(name.value eq 'metricName'\n[or name.value eq 'metricName'\
    \ or ...])*. Optionally, the filter can contain conditions for the\nfollowing\
    \ attributes *aggregationType*, *startTime*, *endTime*, and *timeGrain* of the\n\
    form *attributeName operator value*. Where operator is one of *ne*, *eq*, *gt*,\n\
    *lt*.:code:*<br>`Several conditions can be combined with parentheses and logical\
    \ operators,\ne.g: *and*, *or*.:code:`<br>`Some example filter expressions are::code:`<br>*-\n\
    $filter=(name.value eq 'RunsSucceeded') and aggregationType eq 'Total' and startTime\
    \ eq\n2016-02-20 and endTime eq 2016-02-21 and timeGrain eq duration'PT1M',:code:*<br>*-\n\
    $filter=(name.value eq 'RunsSucceeded') and (aggregationType eq 'Total' or aggregationType\
    \ eq\n'Average') and startTime eq 2016-02-20 and endTime eq 2016-02-21 and timeGrain\
    \ eq\nduration'PT1H',:code:*<br>*- $filter=(name.value eq 'ActionsCompleted' or\
    \ name.value eq\n'RunsSucceeded') and (aggregationType eq 'Total' or aggregationType\
    \ eq 'Average') and startTime\neq 2016-02-20 and endTime eq 2016-02-21 and timeGrain\
    \ eq\nduration'PT1M'.:code:*<br>*`<br>`**NOTE**: When a metrics query comes in\
    \ with\nmultiple metrics, but with no aggregation types defined, the service will\
    \ pick the Primary\naggregation type of the first metrics to be used as the default\
    \ aggregation type for all the\nmetrics.\n\n\n   type filter:\n      str\n\n \
    \  keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   return:\n      An iterator like instance of either\
    \ MetricCollection or the result of cls(response)\n\n   rtype:\n      ~azure.core.async_paging.AsyncItemPaged[~$(python-base-namespace).v2016_09_01.models.MetricCollection]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  signature: 'list(resource_uri: str, filter: typing.Union[str, NoneType] = None,
    **kwargs) -> typing.AsyncIterable[_ForwardRef(''models.MetricCollection'')]'
attributes:
- uid: azure.mgmt.monitor.v2016_09_01.aio.operations_async.MetricsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.monitor.v2016_09_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\monitor\\v2016_09_01\\models\\__init__.py'>
