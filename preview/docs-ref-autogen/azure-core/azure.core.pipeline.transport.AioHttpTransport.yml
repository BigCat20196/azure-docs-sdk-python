### YamlMime:PythonClass
uid: azure.core.pipeline.transport.AioHttpTransport
name: AioHttpTransport
fullName: azure.core.pipeline.transport.AioHttpTransport
module: azure.core.pipeline.transport
inheritances:
- azure.core.pipeline.transport._base_async.AsyncHttpTransport
summary: 'AioHttp HTTP sender implementation.


  Fully asynchronous implementation using the aiohttp library.'
constructor:
  syntax: AioHttpTransport(*, session=None, loop=None, session_owner=True, **kwargs)
  parameters:
  - name: session
    description: The client session.
  - name: loop
    description: The event loop.
  - name: session_owner
    description: Session owner. Defaults True.
    types:
    - '[bool](https://docs.python.org/3.6/library/functions.html#bool)'
examples:
- "Asynchronous transport with aiohttp.<!--[!code-python[Main](les\\test_example_async.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\59\\\\azure-core-1.14.0b1\\\
  \\samples\\\\test_example_async.py\", \"xml:space\": \"preserve\", \"force\": false,\
  \ \"language\": \"python\", \"highlight_args\": {\"linenostart\": 1}, \"linenos\"\
  : false} -->\n\n````python\n\n   from azure.core.pipeline.transport import AioHttpTransport\n\
  \n   async with AsyncPipeline(AioHttpTransport(), policies=policies) as pipeline:\n\
  \       response = await pipeline.run(request)\n\n   ````\n"
methods:
- uid: azure.core.pipeline.transport.AioHttpTransport.close
  name: close
  summary: Closes the connection.
  signature: close()
- uid: azure.core.pipeline.transport.AioHttpTransport.open
  name: open
  summary: Opens the connection.
  signature: open()
- uid: azure.core.pipeline.transport.AioHttpTransport.send
  name: send
  summary: 'Send the request using this HTTP sender.


    Will pre-load the body into memory to be available with a sync method.

    Pass stream=True to avoid this behavior.'
  signature: 'send(request: azure.core.pipeline.transport._base.HttpRequest, **config:
    Any) -> Union[azure.core.pipeline.transport._base_async.AsyncHttpResponse, NoneType]'
  parameters:
  - name: request
    description: The HttpRequest object
    isRequired: true
    types:
    - <xref:azure.core.pipeline.transport.HttpRequest>
  - name: config
    description: Any keyword arguments
    isRequired: true
  return:
    description: The AsyncHttpResponse
    types:
    - <xref:azure.core.pipeline.transport.AsyncHttpResponse>
