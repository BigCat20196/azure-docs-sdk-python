### YamlMime:PythonClass
uid: azure.servicebus.AutoLockRenew
name: AutoLockRenew
fullName: azure.servicebus.AutoLockRenew
module: azure.servicebus
inheritances:
- builtins.object
summary: Auto renew locks for messages and sessions using a background thread pool.
constructor:
  syntax: AutoLockRenew(executor=None, max_workers=None)
  parameters:
  - name: executor
    description: 'A user-specified thread pool. This cannot be combined with

      setting *max_workers*.'
    types:
    - <xref:concurrent.futures.ThreadPoolExecutor>
  - name: max_workers
    description: 'Specifiy the maximum workers in the thread pool. If not

      specified the number used will be derived from the core count of the environment.

      This cannot be combined with *executor*.'
    types:
    - <xref:int>
methods:
- uid: azure.servicebus.AutoLockRenew.register
  name: register
  summary: Register a renewable entity for automatic lock renewal.
  signature: register(renewable, timeout=300)
  parameters:
  - name: renewable
    description: A locked entity that needs to be renewed.
    isRequired: true
    types:
    - <xref:azure.servicebus.common.message.Message>
    - <xref:azure.servicebus.receive_handler.SessionReceiver>
  - name: timeout
    description: 'A time in seconds that the lock should be maintained for.

      Default value is 300 (5 minutes).'
    defaultValue: '300'
    types:
    - <xref:int>
- uid: azure.servicebus.AutoLockRenew.shutdown
  name: shutdown
  summary: Shutdown the thread pool to clean up any remaining lock renewal threads.
  signature: shutdown(wait=True)
  parameters:
  - name: wait
    description: Whether to block until thread pool has shutdown. Default is *True*.
    defaultValue: 'True'
    types:
    - <xref:bool>
