### YamlMime:PythonClass
uid: azure.servicebus.aio.async_base_handler.BaseHandler
name: BaseHandler
fullName: azure.servicebus.aio.async_base_handler.BaseHandler
module: azure.servicebus.aio.async_base_handler
inheritances:
- builtins.object
constructor:
  syntax: BaseHandler(endpoint, auth_config, *, loop=None, connection=None, encoding='UTF-8',
    debug=False, **kwargs)
methods:
- uid: azure.servicebus.aio.async_base_handler.BaseHandler.close
  name: close
  summary: 'Close down the handler connection.


    If the handler has already closed,

    this operation will do nothing. An optional exception can be passed in to

    indicate that the handler was shutdown due to error.

    It is recommended to open a handler within a context manager as

    opposed to calling the method directly.



    > [!NOTE]

    > This operation is not thread-safe.

    >'
  signature: close(exception=None)
  parameters:
  - name: exception
    description: 'An optional exception if the handler is closing

      due to an error.'
    defaultValue: None
    types:
    - <xref:Exception>
- uid: azure.servicebus.aio.async_base_handler.BaseHandler.open
  name: open
  summary: 'Open handler connection and authenticate session.


    If the handler is already open, this operation will do nothing.

    A handler opened with this method must be explicitly closed.

    It is recommended to open a handler within a context manager as

    opposed to calling the method directly.



    > [!NOTE]

    > This operation is not thread-safe.

    >'
  signature: open()
- uid: azure.servicebus.aio.async_base_handler.BaseHandler.reconnect
  name: reconnect
  summary: 'Reconnect the handler.


    If the handler was disconnected from the service with

    a retryable error - attempt to reconnect.

    This method will be called automatically for most retryable errors.'
  signature: reconnect()
