### YamlMime:PythonClass
uid: azure.servicebus.aio.QueueClient
name: QueueClient
fullName: azure.servicebus.aio.QueueClient
module: azure.servicebus.aio
inheritances:
- azure.servicebus.aio.async_client.SendClientMixin
- azure.servicebus.aio.async_client.ReceiveClientMixin
- azure.servicebus.aio.async_client.BaseClient
summary: 'A queue client.


  The QueueClient class defines a high level interface for sending

  messages to and receiving messages from an Azure Service Bus queue.

  If you do not wish to perform management operations, a QueueClient can be

  instantiated directly to perform send and receive operations to a Queue.

  However if a QueueClient is created directly, a *get_properties* operation will

  need to be completed in order to retrieve the properties of this queue (for example,

  whether it is sessionful).'
constructor:
  syntax: QueueClient(address, name, *, shared_access_key_name=None, shared_access_key_value=None,
    loop=None, debug=False, **kwargs)
  parameters:
  - name: address
    description: 'The full URI of the Service Bus namespace. This can optionally

      include URL-encoded access name and key.'
    types:
    - <xref:str>
  - name: name
    description: The name of the queue to which the Client will connect.
    types:
    - <xref:str>
  - name: shared_access_key_name
    description: 'The name of the shared access policy. This must be supplied

      if not encoded into the address.'
    types:
    - <xref:str>
  - name: shared_access_key_value
    description: 'The shared access key. This must be supplied if not encoded

      into the address.'
    types:
    - <xref:str>
  - name: loop
    description: An async event loop
    types:
    - <xref:asyncio.EventLoop>
  - name: debug
    description: Whether to output network trace logs to the logger. Default is *False*.
    types:
    - <xref:bool>
