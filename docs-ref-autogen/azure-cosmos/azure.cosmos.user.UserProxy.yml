### YamlMime:PythonClass
uid: azure.cosmos.user.UserProxy
name: UserProxy
fullName: azure.cosmos.user.UserProxy
module: azure.cosmos.user
inheritances:
- builtins.object
summary: 'An interface to interact with a specific user.


  This class should not be instantiated directly. Instead, use the

  <xref:DatabaseProxy.get_user_client> method.'
constructor:
  syntax: UserProxy(client_connection, id, database_link, properties=None)
methods:
- uid: azure.cosmos.user.UserProxy.create_permission
  name: create_permission
  summary: 'Create a permission for the user.


    To update or replace an existing permision, use the <xref:azure.cosmos.user.UserProxy.upsert_permission>
    method.'
  signature: create_permission(body, **kwargs)
  parameters:
  - name: body
    description: A dict-like object representing the permission to create.
    isRequired: true
  return:
    description: A dict representing the new permission.
    types:
    - <xref:azure.cosmos.user.dict>[<xref:azure.cosmos.user.str>, <xref:azure.cosmos.user.Any>]
- uid: azure.cosmos.user.UserProxy.delete_permission
  name: delete_permission
  summary: 'Delete the specified permission from the user.


    If the permission does not already exist, an exception is raised.'
  signature: delete_permission(permission, **kwargs)
  parameters:
  - name: permission
    description: 'The ID (name), dict representing the properties or <xref:azure.cosmos.user.Permission>

      instance of the permission to be replaced.'
    isRequired: true
  return:
    types:
    - <xref:None>
- uid: azure.cosmos.user.UserProxy.get_permission
  name: get_permission
  summary: Get the permission identified by *id*.
  signature: get_permission(permission, **kwargs)
  parameters:
  - name: permission
    description: 'The ID (name), dict representing the properties or <xref:azure.cosmos.user.Permission>

      instance of the permission to be retrieved.'
    isRequired: true
  return:
    description: A dict representing the retrieved permission.
    types:
    - <xref:azure.cosmos.user.dict>[<xref:azure.cosmos.user.str>, <xref:azure.cosmos.user.Any>]
- uid: azure.cosmos.user.UserProxy.list_permissions
  name: list_permissions
  summary: List all permission for the user.
  signature: list_permissions(max_item_count=None, **kwargs)
  parameters:
  - name: max_item_count
    description: Max number of permissions to be returned in the enumeration operation.
    isRequired: true
  return:
    description: An Iterable of permissions (dicts).
    types:
    - <xref:azure.cosmos.user.Iterable>[<xref:azure.cosmos.user.dict>[<xref:azure.cosmos.user.str>,
      <xref:azure.cosmos.user.Any>]]
- uid: azure.cosmos.user.UserProxy.query_permissions
  name: query_permissions
  summary: Return all permissions matching the given *query*.
  signature: query_permissions(query, parameters=None, max_item_count=None, **kwargs)
  parameters:
  - name: query
    description: The Azure Cosmos DB SQL query to execute.
    isRequired: true
  - name: parameters
    description: Optional array of parameters to the query. Ignored if no query is
      provided.
    isRequired: true
  - name: max_item_count
    description: Max number of permissions to be returned in the enumeration operation.
    isRequired: true
  return:
    description: An Iterable of permissions (dicts).
    types:
    - <xref:azure.cosmos.user.Iterable>[<xref:azure.cosmos.user.dict>[<xref:azure.cosmos.user.str>,
      <xref:azure.cosmos.user.Any>]]
- uid: azure.cosmos.user.UserProxy.read
  name: read
  summary: Read user propertes.
  signature: read(**kwargs)
  return:
    description: A dictionary of the retrieved user properties.
    types:
    - <xref:azure.cosmos.user.dict>[<xref:azure.cosmos.user.str>, <xref:azure.cosmos.user.Any>]
- uid: azure.cosmos.user.UserProxy.replace_permission
  name: replace_permission
  summary: 'Replaces the specified permission if it exists for the user.


    If the permission does not already exist, an exception is raised.'
  signature: replace_permission(permission, body, **kwargs)
  parameters:
  - name: permission
    description: 'The ID (name), dict representing the properties or <xref:azure.cosmos.user.Permission>

      instance of the permission to be replaced.'
    isRequired: true
  - name: body
    description: A dict-like object representing the permission to replace.
    isRequired: true
  return:
    description: A dict representing the permission after replace went through.
    types:
    - <xref:azure.cosmos.user.dict>[<xref:azure.cosmos.user.str>, <xref:azure.cosmos.user.Any>]
- uid: azure.cosmos.user.UserProxy.upsert_permission
  name: upsert_permission
  summary: 'Insert or update the specified permission.


    If the permission already exists in the container, it is replaced. If

    the permission does not exist, it is inserted.'
  signature: upsert_permission(body, **kwargs)
  parameters:
  - name: body
    description: A dict-like object representing the permission to update or insert.
    isRequired: true
  - name: response_hook
    description: A callable invoked with the response metadata.
    isRequired: true
    types:
    - <xref:azure.cosmos.user.Callable>
  return:
    description: A dict representing the upserted permission.
    types:
    - <xref:azure.cosmos.user.dict>[<xref:azure.cosmos.user.str>, <xref:azure.cosmos.user.Any>]
