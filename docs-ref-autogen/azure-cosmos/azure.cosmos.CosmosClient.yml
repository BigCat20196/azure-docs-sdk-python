### YamlMime:PythonClass
uid: azure.cosmos.CosmosClient
name: CosmosClient
fullName: azure.cosmos.CosmosClient
module: azure.cosmos
inheritances:
- builtins.object
summary: 'A client-side logical representation of an Azure Cosmos DB account.


  Use this client to configure and execute requests to the Azure Cosmos DB service.'
constructor:
  syntax: CosmosClient(url, credential, consistency_level='Session', **kwargs)
  parameters:
  - name: url
    description: The URL of the Cosmos DB account.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Can be the account key, or a dictionary of resource tokens.
    isRequired: true
    types:
    - <xref:str>
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: consistency_level
    description: Consistency level to use for the session. The default value is "Session".
    isRequired: true
    types:
    - <xref:str>
variables:
- description: An absolute timeout in seconds, for the combined HTTP request and response
    processing.
  name: timeout
  types:
  - <xref:int>
- description: The HTTP request timeout in seconds.
  name: request_timeout
  types:
  - <xref:int>
- description: The connection mode for the client - currently only supports 'Gateway'.
  name: connection_mode
  types:
  - <xref:str>
- description: Connection proxy configuration.
  name: proxy_config
  types:
  - <xref:azure.cosmos.ProxyConfiguration>
- description: Connection SSL configuration.
  name: ssl_config
  types:
  - <xref:azure.cosmos.SSLConfiguration>
- description: Whether to verify the connection, default value is True.
  name: connection_verify
  types:
  - <xref:bool>
- description: An alternative certificate to verify the connection.
  name: connection_cert
  types:
  - <xref:str>
- description: Maximum retry attempts.
  name: retry_total
  types:
  - <xref:int>
- description: Maximum retry wait time in seconds.
  name: retry_backoff_max
  types:
  - <xref:int>
- description: Fixed retry interval in milliseconds.
  name: retry_fixed_interval
  types:
  - <xref:int>
- description: Maximum number of socket read retry attempts.
  name: retry_read
  types:
  - <xref:int>
- description: Maximum number of connection error retry attempts.
  name: retry_connect
  types:
  - <xref:int>
- description: Maximum number of retry attempts on error status codes.
  name: retry_status
  types:
  - <xref:int>
- description: A list of specific status codes to retry on.
  name: retry_on_status_codes
  types:
  - <xref:list>[<xref:int>]
- description: Factor to calculate wait time between retry attempts.
  name: retry_backoff_factor
  types:
  - <xref:float>
- description: 'Enable endpoint discovery for

    geo-replicated database accounts. (Default: True)'
  name: enable_endpoint_discovery
  types:
  - <xref:bool>
- description: The preferred locations for geo-replicated database accounts.
  name: preferred_locations
  types:
  - <xref:list>[<xref:str>]
examples:
- "Create a new instance of the Cosmos DB client:<!--[!code-python[Main](les\\examples.py\
  \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
  : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\122\\\\\
  azure-cosmos-4.2.0\\\\samples\\\\examples.py\", \"xml:space\": \"preserve\", \"\
  force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\":\
  \ 1}, \"linenos\": false} -->\n\n````python\n\n   from azure.cosmos import exceptions,\
  \ CosmosClient, PartitionKey\n\n   import os\n\n   url = os.environ[\"ACCOUNT_URI\"\
  ]\n   key = os.environ[\"ACCOUNT_KEY\"]\n   client = CosmosClient(url, key)\n\n\
  \   ````\n"
methods:
- uid: azure.cosmos.CosmosClient.create_database
  name: create_database
  summary: Create a new database with the given ID (name).
  signature: create_database(id, populate_query_metrics=None, offer_throughput=None,
    **kwargs)
  parameters:
  - name: id
    description: ID (name) of the database to create.
    isRequired: true
  - name: populate_query_metrics
    description: Enable returning query metrics in response headers.
    isRequired: true
    types:
    - <xref:bool>
  - name: offer_throughput
    description: The provisioned throughput for this offer.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: A DatabaseProxy instance representing the new database.
    types:
    - <xref:azure.cosmos.DatabaseProxy>
  exceptions:
  - description: Database with the given ID already exists.
    type: azure.cosmos.exceptions.CosmosResourceExistsError
  examples:
  - "Create a database in the Cosmos DB account:<!--[!code-python[Main](les\\examples.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\122\\\\azure-cosmos-4.2.0\\\\samples\\\\examples.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"language\": \"python\", \"highlight_args\": {\"linenostart\"\
    : 1}, \"linenos\": false} -->\n\n````python\n\n   database_name = \"testDatabase\"\
    \n   try:\n       database = client.create_database(id=database_name)\n   except\
    \ exceptions.CosmosResourceExistsError:\n       database = client.get_database_client(database=database_name)\n\
    \n   ````\n"
- uid: azure.cosmos.CosmosClient.create_database_if_not_exists
  name: create_database_if_not_exists
  summary: "Create the database if it does not exist already.\n\nIf the database already\
    \ exists, the existing settings are returned.\n\n..note::\n   This function does\
    \ not check or update existing database settings or\n   offer throughput if they\
    \ differ from what is passed in."
  signature: create_database_if_not_exists(id, populate_query_metrics=None, offer_throughput=None,
    **kwargs)
  parameters:
  - name: id
    description: ID (name) of the database to read or create.
    isRequired: true
  - name: populate_query_metrics
    description: Enable returning query metrics in response headers.
    isRequired: true
    types:
    - <xref:bool>
  - name: offer_throughput
    description: The provisioned throughput for this offer.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: A DatabaseProxy instance representing the database.
    types:
    - <xref:azure.cosmos.DatabaseProxy>
  exceptions:
  - description: The database read or creation failed.
    type: azure.cosmos.exceptions.CosmosHttpResponseError
- uid: azure.cosmos.CosmosClient.delete_database
  name: delete_database
  summary: Delete the database with the given ID (name).
  signature: delete_database(database, populate_query_metrics=None, **kwargs)
  parameters:
  - name: database
    description: 'The ID (name), dict representing the properties or <xref:azure.cosmos.DatabaseProxy>

      instance of the database to delete.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:dict>(<xref:str>, <xref:str>)
    - <xref:azure.cosmos.DatabaseProxy>
  - name: populate_query_metrics
    description: Enable returning query metrics in response headers.
    isRequired: true
    types:
    - <xref:bool>
  return:
    types:
    - <xref:None>
  exceptions:
  - description: If the database couldn't be deleted.
    type: azure.cosmos.exceptions.CosmosHttpResponseError
- uid: azure.cosmos.CosmosClient.from_connection_string
  name: from_connection_string
  summary: 'Create a CosmosClient instance from a connection string.


    This can be retrieved from the Azure portal.For full list of optional

    keyword arguments, see the CosmosClient constructor.'
  signature: from_connection_string(conn_str, credential=None, consistency_level='Session',
    **kwargs)
  parameters:
  - name: conn_str
    description: The connection string.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Alternative credentials to use instead of the key

      provided in the connection string.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:dict>(<xref:str>, <xref:str>)
  - name: consistency_level
    description: Consistency level to use for the session. The default value is "Session".
    defaultValue: None
    types:
    - <xref:str>
  - name: consistency_level
    defaultValue: Session
- uid: azure.cosmos.CosmosClient.get_database_account
  name: get_database_account
  summary: Retrieve the database account information.
  signature: get_database_account(**kwargs)
  parameters:
  - name: response_hook
    description: A callable invoked with the response metadata.
    types:
    - <xref:Callable>
  return:
    description: A *DatabaseAccount* instance representing the Cosmos DB Database
      Account.
    types:
    - <xref:azure.cosmos.DatabaseAccount>
- uid: azure.cosmos.CosmosClient.get_database_client
  name: get_database_client
  summary: Retrieve an existing database with the ID (name) *id*.
  signature: get_database_client(database)
  parameters:
  - name: database
    description: 'The ID (name), dict representing the properties or

      *DatabaseProxy* instance of the database to read.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:dict>(<xref:str>, <xref:str>)
    - <xref:azure.cosmos.DatabaseProxy>
  return:
    description: A *DatabaseProxy* instance representing the retrieved database.
    types:
    - <xref:azure.cosmos.DatabaseProxy>
- uid: azure.cosmos.CosmosClient.list_databases
  name: list_databases
  summary: List the databases in a Cosmos DB SQL database account.
  signature: list_databases(max_item_count=None, populate_query_metrics=None, **kwargs)
  parameters:
  - name: max_item_count
    description: Max number of items to be returned in the enumeration operation.
    isRequired: true
    types:
    - <xref:int>
  - name: populate_query_metrics
    description: Enable returning query metrics in response headers.
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: An Iterable of database properties (dicts).
    types:
    - <xref:azure.cosmos.Iterable>[<xref:dict>[<xref:str>, <xref:str>]]
- uid: azure.cosmos.CosmosClient.query_databases
  name: query_databases
  summary: Query the databases in a Cosmos DB SQL database account.
  signature: query_databases(query=None, parameters=None, enable_cross_partition_query=None,
    max_item_count=None, populate_query_metrics=None, **kwargs)
  parameters:
  - name: query
    description: The Azure Cosmos DB SQL query to execute.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: Optional array of parameters to the query. Ignored if no query is
      provided.
    isRequired: true
    types:
    - <xref:list>[<xref:str>]
  - name: enable_cross_partition_query
    description: 'Allow scan on the queries which couldn''t be

      served as indexing was opted out on the requested paths.'
    isRequired: true
    types:
    - <xref:bool>
  - name: max_item_count
    description: Max number of items to be returned in the enumeration operation.
    isRequired: true
    types:
    - <xref:int>
  - name: populate_query_metrics
    description: Enable returning query metrics in response headers.
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: An Iterable of database properties (dicts).
    types:
    - <xref:azure.cosmos.Iterable>[<xref:dict>[<xref:str>, <xref:str>]]
