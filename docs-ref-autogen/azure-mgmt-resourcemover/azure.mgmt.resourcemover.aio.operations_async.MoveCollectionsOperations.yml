### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_commit
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_delete
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_discard
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_initiate_move
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_prepare
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_resolve_dependencies
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.create
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.get
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_resource_group
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_subscription
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.update
  - azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.models
  class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: MoveCollectionsOperations
  summary: 'MoveCollectionsOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: MoveCollectionsOperations(client, config, serializer, deserializer) ->
      None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_commit
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'begin_commit(resource_group_name: str, move_collection_name: str, body: typing.Union[_ForwardRef(''models.CommitRequest''),
    NoneType] = None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  namewithoutparameters: begin_commit
  summary: "Commits the set of resources included in the request body. The commit\
    \ operation is triggered on\nthe moveResources in the moveState 'CommitPending'\
    \ or 'CommitFailed', on a successful\ncompletion the moveResource moveState do\
    \ a transition to Committed. To aid the user to\nprerequisite the operation the\
    \ client can call operation with validateOnly property set to\ntrue.\n\n   param\
    \ resource_group_name:\n      The Resource Group Name.\n\n   type resource_group_name:\n\
    \      str\n\n   param move_collection_name:\n      The Move Collection Name.\n\
    \n   type move_collection_name:\n      str\n\n   param body:\n   type body:\n\
    \      ~resource_mover_service_api.models.CommitRequest\n\n   keyword callable\
    \ cls:\n      A custom type or function that will be passed the direct response\n\
    \n   keyword str continuation_token:\n      A continuation token to restart a\
    \ poller from a saved state.\n\n   keyword polling:\n      True for ARMPolling,\
    \ False for no polling, or a\n      polling object for personal polling strategy\n\
    \n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of AsyncLROPoller that returns either OperationStatus or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.AsyncLROPoller[~resource_mover_service_api.models.OperationStatus]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_commit(resource_group_name: str, move_collection_name: str, body:
      typing.Union[_ForwardRef(''models.CommitRequest''), NoneType] = None, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_commit
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'begin_delete(resource_group_name: str, move_collection_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  namewithoutparameters: begin_delete
  summary: Deletes a move collection.
  syntax:
    content: 'begin_delete(resource_group_name: str, move_collection_name: str, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
    parameters:
    - description: The Resource Group Name.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Move Collection Name.
      id: move_collection_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either OperationStatus
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[resource_mover_service_api.models.OperationStatus]
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_delete
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_discard
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'begin_discard(resource_group_name: str, move_collection_name: str, body:
    typing.Union[_ForwardRef(''models.DiscardRequest''), NoneType] = None, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  namewithoutparameters: begin_discard
  summary: "Discards the set of resources included in the request body. The discard\
    \ operation is triggered\non the moveResources in the moveState 'CommitPending'\
    \ or 'DiscardFailed', on a successful\ncompletion the moveResource moveState do\
    \ a transition to MovePending. To aid the user to\nprerequisite the operation\
    \ the client can call operation with validateOnly property set to\ntrue.\n\n \
    \  param resource_group_name:\n      The Resource Group Name.\n\n   type resource_group_name:\n\
    \      str\n\n   param move_collection_name:\n      The Move Collection Name.\n\
    \n   type move_collection_name:\n      str\n\n   param body:\n   type body:\n\
    \      ~resource_mover_service_api.models.DiscardRequest\n\n   keyword callable\
    \ cls:\n      A custom type or function that will be passed the direct response\n\
    \n   keyword str continuation_token:\n      A continuation token to restart a\
    \ poller from a saved state.\n\n   keyword polling:\n      True for ARMPolling,\
    \ False for no polling, or a\n      polling object for personal polling strategy\n\
    \n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of AsyncLROPoller that returns either OperationStatus or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.AsyncLROPoller[~resource_mover_service_api.models.OperationStatus]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_discard(resource_group_name: str, move_collection_name: str, body:
      typing.Union[_ForwardRef(''models.DiscardRequest''), NoneType] = None, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_discard
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_initiate_move
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'begin_initiate_move(resource_group_name: str, move_collection_name: str,
    body: typing.Union[_ForwardRef(''models.ResourceMoveRequest''), NoneType] = None,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  namewithoutparameters: begin_initiate_move
  summary: "Moves the set of resources included in the request body. The move operation\
    \ is triggered after\nthe moveResources are in the moveState 'MovePending' or\
    \ 'MoveFailed', on a successful\ncompletion the moveResource moveState do a transition\
    \ to CommitPending. To aid the user to\nprerequisite the operation the client\
    \ can call operation with validateOnly property set to\ntrue.\n\n   param resource_group_name:\n\
    \      The Resource Group Name.\n\n   type resource_group_name:\n      str\n\n\
    \   param move_collection_name:\n      The Move Collection Name.\n\n   type move_collection_name:\n\
    \      str\n\n   param body:\n   type body:\n      ~resource_mover_service_api.models.ResourceMoveRequest\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of AsyncLROPoller that returns either OperationStatus or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.AsyncLROPoller[~resource_mover_service_api.models.OperationStatus]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_initiate_move(resource_group_name: str, move_collection_name:
      str, body: typing.Union[_ForwardRef(''models.ResourceMoveRequest''), NoneType]
      = None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_initiate_move
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_prepare
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'begin_prepare(resource_group_name: str, move_collection_name: str, body:
    typing.Union[_ForwardRef(''models.PrepareRequest''), NoneType] = None, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  namewithoutparameters: begin_prepare
  summary: "Initiates prepare for the set of resources included in the request body.\
    \ The prepare operation\nis on the moveResources that are in the moveState 'PreparePending'\
    \ or 'PrepareFailed', on a\nsuccessful completion the moveResource moveState do\
    \ a transition to MovePending. To aid the\nuser to prerequisite the operation\
    \ the client can call operation with validateOnly property set\nto true.\n\n \
    \  param resource_group_name:\n      The Resource Group Name.\n\n   type resource_group_name:\n\
    \      str\n\n   param move_collection_name:\n      The Move Collection Name.\n\
    \n   type move_collection_name:\n      str\n\n   param body:\n   type body:\n\
    \      ~resource_mover_service_api.models.PrepareRequest\n\n   keyword callable\
    \ cls:\n      A custom type or function that will be passed the direct response\n\
    \n   keyword str continuation_token:\n      A continuation token to restart a\
    \ poller from a saved state.\n\n   keyword polling:\n      True for ARMPolling,\
    \ False for no polling, or a\n      polling object for personal polling strategy\n\
    \n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  An instance of AsyncLROPoller that returns either OperationStatus or the result\
    \ of cls(response)\n\n   rtype:\n      ~azure.core.polling.AsyncLROPoller[~resource_mover_service_api.models.OperationStatus]\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_prepare(resource_group_name: str, move_collection_name: str, body:
      typing.Union[_ForwardRef(''models.PrepareRequest''), NoneType] = None, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_prepare
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_resolve_dependencies
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'begin_resolve_dependencies(resource_group_name: str, move_collection_name:
    str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  namewithoutparameters: begin_resolve_dependencies
  summary: Computes, resolves and validate the dependencies of the moveResources in
    the move collection.
  syntax:
    content: 'begin_resolve_dependencies(resource_group_name: str, move_collection_name:
      str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
    parameters:
    - description: The Resource Group Name.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Move Collection Name.
      id: move_collection_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either OperationStatus
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[resource_mover_service_api.models.OperationStatus]
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_resolve_dependencies
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.create
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'create(resource_group_name: str, move_collection_name: str, body: typing.Union[_ForwardRef(''models.MoveCollection''),
    NoneType] = None, **kwargs) -> azure.mgmt.resourcemover.models._models_py3.MoveCollection'
  namewithoutparameters: create
  summary: Creates or updates a move collection.
  syntax:
    content: 'create(resource_group_name: str, move_collection_name: str, body: typing.Union[_ForwardRef(''models.MoveCollection''),
      NoneType] = None, **kwargs) -> azure.mgmt.resourcemover.models._models_py3.MoveCollection'
    parameters:
    - description: The Resource Group Name.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Move Collection Name.
      id: move_collection_name
      isRequired: true
      type:
      - str
    - description: ''
      id: body
      isRequired: true
      type:
      - resource_mover_service_api.models.MoveCollection
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: MoveCollection, or the result of cls(response)
      type:
      - resource_mover_service_api.models.MoveCollection
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.create
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.get
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'get(resource_group_name: str, move_collection_name: str, **kwargs) -> azure.mgmt.resourcemover.models._models_py3.MoveCollection'
  namewithoutparameters: get
  summary: Gets the move collection.
  syntax:
    content: 'get(resource_group_name: str, move_collection_name: str, **kwargs) ->
      azure.mgmt.resourcemover.models._models_py3.MoveCollection'
    parameters:
    - description: The Resource Group Name.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Move Collection Name.
      id: move_collection_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: MoveCollection, or the result of cls(response)
      type:
      - resource_mover_service_api.models.MoveCollection
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.get
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_resource_group
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'list_move_collections_by_resource_group(resource_group_name: str, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.MoveCollectionResultList'')]'
  namewithoutparameters: list_move_collections_by_resource_group
  summary: 'Get all Move Collections.


    Get all the Move Collections in the resource group.'
  syntax:
    content: 'list_move_collections_by_resource_group(resource_group_name: str, **kwargs)
      -> typing.AsyncIterable[_ForwardRef(''models.MoveCollectionResultList'')]'
    parameters:
    - description: The Resource Group Name.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either MoveCollectionResultList or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[resource_mover_service_api.models.MoveCollectionResultList]
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_resource_group
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_subscription
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: list_move_collections_by_subscription(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.MoveCollectionResultList')]
  namewithoutparameters: list_move_collections_by_subscription
  summary: 'Get all Move Collections.


    Get all the Move Collections in the subscription.'
  syntax:
    content: list_move_collections_by_subscription(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.MoveCollectionResultList')]
    parameters:
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either MoveCollectionResultList or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[resource_mover_service_api.models.MoveCollectionResultList]
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_subscription
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.update
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: 'update(resource_group_name: str, move_collection_name: str, body: typing.Union[_ForwardRef(''models.UpdateMoveCollectionRequest''),
    NoneType] = None, **kwargs) -> azure.mgmt.resourcemover.models._models_py3.MoveCollection'
  namewithoutparameters: update
  summary: Updates a move collection.
  syntax:
    content: 'update(resource_group_name: str, move_collection_name: str, body: typing.Union[_ForwardRef(''models.UpdateMoveCollectionRequest''),
      NoneType] = None, **kwargs) -> azure.mgmt.resourcemover.models._models_py3.MoveCollection'
    parameters:
    - description: The Resource Group Name.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The Move Collection Name.
      id: move_collection_name
      isRequired: true
      type:
      - str
    - description: ''
      id: body
      isRequired: true
      type:
      - resource_mover_service_api.models.UpdateMoveCollectionRequest
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: MoveCollection, or the result of cls(response)
      type:
      - resource_mover_service_api.models.MoveCollection
  type: method
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.update
- class: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.models
  langs:
  - python
  module: azure.mgmt.resourcemover.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.mgmt.resourcemover.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\resourcemover\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.models
references:
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_commit
  isExternal: false
  name: 'begin_commit(resource_group_name: str, move_collection_name: str, body: typing.Union[_ForwardRef(''models.CommitRequest''),
    NoneType] = None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_commit
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, move_collection_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_delete
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_discard
  isExternal: false
  name: 'begin_discard(resource_group_name: str, move_collection_name: str, body:
    typing.Union[_ForwardRef(''models.DiscardRequest''), NoneType] = None, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_discard
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_initiate_move
  isExternal: false
  name: 'begin_initiate_move(resource_group_name: str, move_collection_name: str,
    body: typing.Union[_ForwardRef(''models.ResourceMoveRequest''), NoneType] = None,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_initiate_move
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_prepare
  isExternal: false
  name: 'begin_prepare(resource_group_name: str, move_collection_name: str, body:
    typing.Union[_ForwardRef(''models.PrepareRequest''), NoneType] = None, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_prepare
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_resolve_dependencies
  isExternal: false
  name: 'begin_resolve_dependencies(resource_group_name: str, move_collection_name:
    str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.OperationStatus'')]'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.begin_resolve_dependencies
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.create
  isExternal: false
  name: 'create(resource_group_name: str, move_collection_name: str, body: typing.Union[_ForwardRef(''models.MoveCollection''),
    NoneType] = None, **kwargs) -> azure.mgmt.resourcemover.models._models_py3.MoveCollection'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.create
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, move_collection_name: str, **kwargs) -> azure.mgmt.resourcemover.models._models_py3.MoveCollection'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.get
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_resource_group
  isExternal: false
  name: 'list_move_collections_by_resource_group(resource_group_name: str, **kwargs)
    -> typing.AsyncIterable[_ForwardRef(''models.MoveCollectionResultList'')]'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_resource_group
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_subscription
  isExternal: false
  name: list_move_collections_by_subscription(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.MoveCollectionResultList')]
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.list_move_collections_by_subscription
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.update
  isExternal: false
  name: 'update(resource_group_name: str, move_collection_name: str, body: typing.Union[_ForwardRef(''models.UpdateMoveCollectionRequest''),
    NoneType] = None, **kwargs) -> azure.mgmt.resourcemover.models._models_py3.MoveCollection'
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.update
- fullName: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations
  uid: azure.mgmt.resourcemover.aio.operations_async.MoveCollectionsOperations.models
- fullName: azure.core.polling.AsyncLROPoller[resource_mover_service_api.models.OperationStatus]
  name: AsyncLROPoller[OperationStatus]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: resource_mover_service_api.models.OperationStatus
    name: OperationStatus
    uid: resource_mover_service_api.models.OperationStatus
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[resource_mover_service_api.models.OperationStatus]
- fullName: azure.core.async_paging.AsyncItemPaged[resource_mover_service_api.models.MoveCollectionResultList]
  name: AsyncItemPaged[MoveCollectionResultList]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: resource_mover_service_api.models.MoveCollectionResultList
    name: MoveCollectionResultList
    uid: resource_mover_service_api.models.MoveCollectionResultList
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[resource_mover_service_api.models.MoveCollectionResultList]
