### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_create_or_update
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_delete
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.check_ip_address_availability
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.get
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_all
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_usage
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.update_tags
  - azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.models
  class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: VirtualNetworksOperations
  summary: 'VirtualNetworksOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: VirtualNetworksOperations(client, config, serializer, deserializer) ->
      None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: 'begin_create_or_update(resource_group_name: str, virtual_network_name: str,
    parameters: azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VirtualNetwork'')]'
  namewithoutparameters: begin_create_or_update
  summary: Creates or updates a virtual network in the specified resource group.
  syntax:
    content: 'begin_create_or_update(resource_group_name: str, virtual_network_name:
      str, parameters: azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VirtualNetwork'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual network.
      id: virtual_network_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to the create or update virtual network operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2020_04_01.models.VirtualNetwork
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either VirtualNetwork
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2020_04_01.models.VirtualNetwork]
  type: method
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_create_or_update
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: 'begin_delete(resource_group_name: str, virtual_network_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_delete
  summary: Deletes the specified virtual network.
  syntax:
    content: 'begin_delete(resource_group_name: str, virtual_network_name: str, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual network.
      id: virtual_network_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_delete
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.check_ip_address_availability
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: 'check_ip_address_availability(resource_group_name: str, virtual_network_name:
    str, ip_address: str, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.IPAddressAvailabilityResult'
  namewithoutparameters: check_ip_address_availability
  summary: Checks whether a private IP address is available for use.
  syntax:
    content: 'check_ip_address_availability(resource_group_name: str, virtual_network_name:
      str, ip_address: str, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.IPAddressAvailabilityResult'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual network.
      id: virtual_network_name
      isRequired: true
      type:
      - str
    - description: The private IP address to be verified.
      id: ip_address
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: IPAddressAvailabilityResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2020_04_01.models.IPAddressAvailabilityResult
  type: method
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.check_ip_address_availability
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.get
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: 'get(resource_group_name: str, virtual_network_name: str, expand: typing.Union[str,
    NoneType] = None, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork'
  namewithoutparameters: get
  summary: Gets the specified virtual network by resource group.
  syntax:
    content: 'get(resource_group_name: str, virtual_network_name: str, expand: typing.Union[str,
      NoneType] = None, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual network.
      id: virtual_network_name
      isRequired: true
      type:
      - str
    - description: Expands referenced resources.
      id: expand
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: VirtualNetwork, or the result of cls(response)
      type:
      - azure.mgmt.network.v2020_04_01.models.VirtualNetwork
  type: method
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.get
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.VirtualNetworkListResult'')]'
  namewithoutparameters: list
  summary: Gets all virtual networks in a resource group.
  syntax:
    content: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.VirtualNetworkListResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VirtualNetworkListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2020_04_01.models.VirtualNetworkListResult]
  type: method
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_all
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.VirtualNetworkListResult')]
  namewithoutparameters: list_all
  summary: Gets all virtual networks in a subscription.
  syntax:
    content: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.VirtualNetworkListResult')]
    parameters:
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VirtualNetworkListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2020_04_01.models.VirtualNetworkListResult]
  type: method
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_all
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_usage
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: 'list_usage(resource_group_name: str, virtual_network_name: str, **kwargs)
    -> typing.AsyncIterable[ForwardRef(''models.VirtualNetworkListUsageResult'')]'
  namewithoutparameters: list_usage
  summary: Lists usage stats.
  syntax:
    content: 'list_usage(resource_group_name: str, virtual_network_name: str, **kwargs)
      -> typing.AsyncIterable[ForwardRef(''models.VirtualNetworkListUsageResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual network.
      id: virtual_network_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VirtualNetworkListUsageResult
        or the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2020_04_01.models.VirtualNetworkListUsageResult]
  type: method
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_usage
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.update_tags
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: 'update_tags(resource_group_name: str, virtual_network_name: str, parameters:
    azure.mgmt.network.v2020_04_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork'
  namewithoutparameters: update_tags
  summary: Updates a virtual network tags.
  syntax:
    content: 'update_tags(resource_group_name: str, virtual_network_name: str, parameters:
      azure.mgmt.network.v2020_04_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual network.
      id: virtual_network_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to update virtual network tags.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2020_04_01.models.TagsObject
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: VirtualNetwork, or the result of cls(response)
      type:
      - azure.mgmt.network.v2020_04_01.models.VirtualNetwork
  type: method
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.update_tags
- class: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.models
  langs:
  - python
  module: azure.mgmt.network.v2020_04_01.aio.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.network.v2020_04_01.models' from 'c:\\repo\\venv\\lib\\site-packages\\azure\\mgmt\\network\\v2020_04_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.models
references:
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_create_or_update
  isExternal: false
  name: 'begin_create_or_update(resource_group_name: str, virtual_network_name: str,
    parameters: azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VirtualNetwork'')]'
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_create_or_update
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, virtual_network_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.begin_delete
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.check_ip_address_availability
  isExternal: false
  name: 'check_ip_address_availability(resource_group_name: str, virtual_network_name:
    str, ip_address: str, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.IPAddressAvailabilityResult'
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.check_ip_address_availability
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, virtual_network_name: str, expand: typing.Union[str,
    NoneType] = None, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork'
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.get
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list
  isExternal: false
  name: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.VirtualNetworkListResult'')]'
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_all
  isExternal: false
  name: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.VirtualNetworkListResult')]
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_all
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_usage
  isExternal: false
  name: 'list_usage(resource_group_name: str, virtual_network_name: str, **kwargs)
    -> typing.AsyncIterable[ForwardRef(''models.VirtualNetworkListUsageResult'')]'
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.list_usage
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.update_tags
  isExternal: false
  name: 'update_tags(resource_group_name: str, virtual_network_name: str, parameters:
    azure.mgmt.network.v2020_04_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2020_04_01.models._models_py3.VirtualNetwork'
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.update_tags
- fullName: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations
  uid: azure.mgmt.network.v2020_04_01.aio.operations.VirtualNetworksOperations.models
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2020_04_01.models.VirtualNetwork]
  name: AsyncLROPoller[VirtualNetwork]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2020_04_01.models.VirtualNetwork
    name: VirtualNetwork
    uid: azure.mgmt.network.v2020_04_01.models.VirtualNetwork
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2020_04_01.models.VirtualNetwork]
- fullName: azure.core.polling.AsyncLROPoller[None]
  name: AsyncLROPoller[None]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[None]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2020_04_01.models.VirtualNetworkListResult]
  name: AsyncItemPaged[VirtualNetworkListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2020_04_01.models.VirtualNetworkListResult
    name: VirtualNetworkListResult
    uid: azure.mgmt.network.v2020_04_01.models.VirtualNetworkListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2020_04_01.models.VirtualNetworkListResult]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2020_04_01.models.VirtualNetworkListUsageResult]
  name: AsyncItemPaged[VirtualNetworkListUsageResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2020_04_01.models.VirtualNetworkListUsageResult
    name: VirtualNetworkListUsageResult
    uid: azure.mgmt.network.v2020_04_01.models.VirtualNetworkListUsageResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2020_04_01.models.VirtualNetworkListUsageResult]
