### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.begin_generatevirtualwanvpnserverconfigurationvpnprofile
  - azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.check_dns_name_availability
  - azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.supported_security_providers
  class: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
  fullName: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.network.v2019_08_01.aio.operations
  name: NetworkManagementClientOperationsMixin
  summary: ''
  syntax: {}
  type: class
  uid: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
- class: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.begin_generatevirtualwanvpnserverconfigurationvpnprofile
  langs:
  - python
  module: azure.mgmt.network.v2019_08_01.aio.operations
  name: 'begin_generatevirtualwanvpnserverconfigurationvpnprofile(resource_group_name:
    str, virtual_wan_name: str, vpn_client_params: azure.mgmt.network.v2019_08_01.models._models_py3.VirtualWanVpnProfileParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VpnProfileResponse'')]'
  namewithoutparameters: begin_generatevirtualwanvpnserverconfigurationvpnprofile
  summary: 'Generates a unique VPN profile for P2S clients for VirtualWan and associated

    VpnServerConfiguration combination in the specified resource group.'
  syntax:
    content: 'begin_generatevirtualwanvpnserverconfigurationvpnprofile(resource_group_name:
      str, virtual_wan_name: str, vpn_client_params: azure.mgmt.network.v2019_08_01.models._models_py3.VirtualWanVpnProfileParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VpnProfileResponse'')]'
    parameters:
    - description: The resource group name.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the VirtualWAN whose associated VpnServerConfigurations
        is

        needed.'
      id: virtual_wan_name
      isRequired: true
      type:
      - str
    - description: 'Parameters supplied to the generate VirtualWan VPN profile generation

        operation.'
      id: vpn_client_params
      isRequired: true
      type:
      - azure.mgmt.network.v2019_08_01.models.VirtualWanVpnProfileParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either VpnProfileResponse
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_08_01.models.VpnProfileResponse]
  type: method
  uid: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.begin_generatevirtualwanvpnserverconfigurationvpnprofile
- class: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
  fullName: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.check_dns_name_availability
  langs:
  - python
  module: azure.mgmt.network.v2019_08_01.aio.operations
  name: 'check_dns_name_availability(location: str, domain_name_label: str, **kwargs)
    -> azure.mgmt.network.v2019_08_01.models._models_py3.DnsNameAvailabilityResult'
  namewithoutparameters: check_dns_name_availability
  summary: Checks whether a domain name in the cloudapp.azure.com zone is available
    for use.
  syntax:
    content: 'check_dns_name_availability(location: str, domain_name_label: str, **kwargs)
      -> azure.mgmt.network.v2019_08_01.models._models_py3.DnsNameAvailabilityResult'
    parameters:
    - description: The location of the domain name.
      id: location
      isRequired: true
      type:
      - str
    - description: 'The domain name to be verified. It must conform to the following

        regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$.'
      id: domain_name_label
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: DnsNameAvailabilityResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2019_08_01.models.DnsNameAvailabilityResult
  type: method
  uid: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.check_dns_name_availability
- class: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
  fullName: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.supported_security_providers
  langs:
  - python
  module: azure.mgmt.network.v2019_08_01.aio.operations
  name: 'supported_security_providers(resource_group_name: str, virtual_wan_name:
    str, **kwargs) -> azure.mgmt.network.v2019_08_01.models._models_py3.VirtualWanSecurityProviders'
  namewithoutparameters: supported_security_providers
  summary: Gives the supported security providers for the virtual wan.
  syntax:
    content: 'supported_security_providers(resource_group_name: str, virtual_wan_name:
      str, **kwargs) -> azure.mgmt.network.v2019_08_01.models._models_py3.VirtualWanSecurityProviders'
    parameters:
    - description: The resource group name.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: 'The name of the VirtualWAN for which supported security providers
        are

        needed.'
      id: virtual_wan_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: VirtualWanSecurityProviders, or the result of cls(response)
      type:
      - azure.mgmt.network.v2019_08_01.models.VirtualWanSecurityProviders
  type: method
  uid: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.supported_security_providers
references:
- fullName: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.begin_generatevirtualwanvpnserverconfigurationvpnprofile
  isExternal: false
  name: 'begin_generatevirtualwanvpnserverconfigurationvpnprofile(resource_group_name:
    str, virtual_wan_name: str, vpn_client_params: azure.mgmt.network.v2019_08_01.models._models_py3.VirtualWanVpnProfileParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VpnProfileResponse'')]'
  parent: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
  uid: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.begin_generatevirtualwanvpnserverconfigurationvpnprofile
- fullName: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.check_dns_name_availability
  isExternal: false
  name: 'check_dns_name_availability(location: str, domain_name_label: str, **kwargs)
    -> azure.mgmt.network.v2019_08_01.models._models_py3.DnsNameAvailabilityResult'
  parent: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
  uid: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.check_dns_name_availability
- fullName: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.supported_security_providers
  isExternal: false
  name: 'supported_security_providers(resource_group_name: str, virtual_wan_name:
    str, **kwargs) -> azure.mgmt.network.v2019_08_01.models._models_py3.VirtualWanSecurityProviders'
  parent: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin
  uid: azure.mgmt.network.v2019_08_01.aio.operations.NetworkManagementClientOperationsMixin.supported_security_providers
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_08_01.models.VpnProfileResponse]
  name: AsyncLROPoller[VpnProfileResponse]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_08_01.models.VpnProfileResponse
    name: VpnProfileResponse
    uid: azure.mgmt.network.v2019_08_01.models.VpnProfileResponse
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_08_01.models.VpnProfileResponse]
