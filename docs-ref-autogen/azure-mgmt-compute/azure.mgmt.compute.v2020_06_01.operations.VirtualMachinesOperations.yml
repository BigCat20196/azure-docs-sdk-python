### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_assess_patches
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_capture
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_convert_to_managed_disks
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_create_or_update
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_deallocate
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_delete
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_perform_maintenance
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_power_off
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reapply
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_redeploy
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reimage
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_restart
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_run_command
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_start
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_update
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.generalize
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.get
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.instance_view
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_all
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_available_sizes
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_by_location
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.retrieve_boot_diagnostics_data
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.simulate_eviction
  - azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.models
  class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: VirtualMachinesOperations
  summary: 'VirtualMachinesOperations operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: VirtualMachinesOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_assess_patches
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_assess_patches(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_assess_patches
  summary: Assess patches on the VM.
  syntax:
    content: begin_assess_patches(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either VirtualMachineAssessPatchesResult
        or the result of cls(response)
      type:
      - azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachineAssessPatchesResult]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_assess_patches
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_capture
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_capture(resource_group_name, vm_name, parameters, **kwargs)
  namewithoutparameters: begin_capture
  summary: 'Captures the VM by copying virtual hard disks of the VM and outputs a
    template that can be used

    to create similar VMs.'
  syntax:
    content: begin_capture(resource_group_name, vm_name, parameters, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to the Capture Virtual Machine operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.compute.v2020_06_01.models.VirtualMachineCaptureParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either VirtualMachineCaptureResult
        or the result of cls(response)
      type:
      - azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachineCaptureResult]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_capture
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_convert_to_managed_disks
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_convert_to_managed_disks(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_convert_to_managed_disks
  summary: 'Converts virtual machine disks from blob-based to managed disks. Virtual
    machine must be stop-

    deallocated before invoking this operation.'
  syntax:
    content: begin_convert_to_managed_disks(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_convert_to_managed_disks
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_create_or_update(resource_group_name, vm_name, parameters, **kwargs)
  namewithoutparameters: begin_create_or_update
  summary: 'The operation to create or update a virtual machine. Please note some
    properties can be set

    only during virtual machine creation.'
  syntax:
    content: begin_create_or_update(resource_group_name, vm_name, parameters, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to the Create Virtual Machine operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.compute.v2020_06_01.models.VirtualMachine
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either VirtualMachine or
        the result of cls(response)
      type:
      - azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachine]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_create_or_update
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_deallocate
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_deallocate(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_deallocate
  summary: 'Shuts down the virtual machine and releases the compute resources. You
    are not billed for the

    compute resources that this virtual machine uses.'
  syntax:
    content: begin_deallocate(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_deallocate
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_delete(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_delete
  summary: The operation to delete a virtual machine.
  syntax:
    content: begin_delete(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_delete
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_perform_maintenance
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_perform_maintenance(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_perform_maintenance
  summary: The operation to perform maintenance on a virtual machine.
  syntax:
    content: begin_perform_maintenance(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_perform_maintenance
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_power_off
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_power_off(resource_group_name, vm_name, skip_shutdown=False, **kwargs)
  namewithoutparameters: begin_power_off
  summary: 'The operation to power off (stop) a virtual machine. The virtual machine
    can be restarted with

    the same provisioned resources. You are still charged for this virtual machine.'
  syntax:
    content: begin_power_off(resource_group_name, vm_name, skip_shutdown=False, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - defaultValue: 'False'
      description: 'The parameter to request non-graceful VM shutdown. True value
        for this

        flag indicates non-graceful shutdown whereas false indicates otherwise. Default
        value for this

        flag is false if not specified.'
      id: skip_shutdown
      type:
      - bool
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_power_off
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reapply
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_reapply(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_reapply
  summary: The operation to reapply a virtual machine's state.
  syntax:
    content: begin_reapply(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reapply
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_redeploy
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_redeploy(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_redeploy
  summary: Shuts down the virtual machine, moves it to a new node, and powers it back
    on.
  syntax:
    content: begin_redeploy(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_redeploy
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reimage
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_reimage(resource_group_name, vm_name, parameters=None, **kwargs)
  namewithoutparameters: begin_reimage
  summary: Reimages the virtual machine which has an ephemeral OS disk back to its
    initial state.
  syntax:
    content: begin_reimage(resource_group_name, vm_name, parameters=None, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: Parameters supplied to the Reimage Virtual Machine operation.
      id: parameters
      type:
      - azure.mgmt.compute.v2020_06_01.models.VirtualMachineReimageParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reimage
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_restart
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_restart(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_restart
  summary: The operation to restart a virtual machine.
  syntax:
    content: begin_restart(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_restart
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_run_command
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_run_command(resource_group_name, vm_name, parameters, **kwargs)
  namewithoutparameters: begin_run_command
  summary: Run command on the VM.
  syntax:
    content: begin_run_command(resource_group_name, vm_name, parameters, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to the Run command operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.compute.v2020_06_01.models.RunCommandInput
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either RunCommandResult or
        the result of cls(response)
      type:
      - azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.RunCommandResult]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_run_command
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_start
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_start(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: begin_start
  summary: The operation to start a virtual machine.
  syntax:
    content: begin_start(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.LROPoller[None]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_start
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_update
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: begin_update(resource_group_name, vm_name, parameters, **kwargs)
  namewithoutparameters: begin_update
  summary: The operation to update a virtual machine.
  syntax:
    content: begin_update(resource_group_name, vm_name, parameters, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to the Update Virtual Machine operation.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.compute.v2020_06_01.models.VirtualMachineUpdate
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.PollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of LROPoller that returns either VirtualMachine or
        the result of cls(response)
      type:
      - azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachine]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_update
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.generalize
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: generalize(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: generalize
  summary: 'Sets the OS state of the virtual machine to generalized. It is recommended
    to sysprep the

    virtual machine before performing this operation. >>:code:`<br>`For Windows, please
    refer to

    `Create a managed image of a generalized VM in Azure <https://docs.microsoft.com/en-

    us/azure/virtual-machines/windows/capture-image-resource>`_<<.:code:[<br>`For
    Linux, please refer

    to `How to create an image of a virtual machine or VHD](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/capture-image).'
  syntax:
    content: generalize(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.generalize
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.get
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: get(resource_group_name, vm_name, expand='instanceView', **kwargs)
  namewithoutparameters: get
  summary: Retrieves information about the model view or the instance view of a virtual
    machine.
  syntax:
    content: get(resource_group_name, vm_name, expand='instanceView', **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - defaultValue: instanceView
      description: The expand expression to apply on the operation.
      id: expand
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: VirtualMachine, or the result of cls(response)
      type:
      - azure.mgmt.compute.v2020_06_01.models.VirtualMachine
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.get
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.instance_view
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: instance_view(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: instance_view
  summary: Retrieves information about the run-time state of a virtual machine.
  syntax:
    content: instance_view(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: VirtualMachineInstanceView, or the result of cls(response)
      type:
      - azure.mgmt.compute.v2020_06_01.models.VirtualMachineInstanceView
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.instance_view
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: list(resource_group_name, **kwargs)
  namewithoutparameters: list
  summary: 'Lists all of the virtual machines in the specified resource group. Use
    the nextLink property in

    the response to get the next page of virtual machines.'
  syntax:
    content: list(resource_group_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VirtualMachineListResult or
        the result of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.compute.v2020_06_01.models.VirtualMachineListResult]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_all
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: list_all(status_only=None, **kwargs)
  namewithoutparameters: list_all
  summary: 'Lists all of the virtual machines in the specified subscription. Use the
    nextLink property in

    the response to get the next page of virtual machines.'
  syntax:
    content: list_all(status_only=None, **kwargs)
    parameters:
    - defaultValue: None
      description: 'statusOnly=true enables fetching run time status of all Virtual
        Machines in

        the subscription.'
      id: status_only
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VirtualMachineListResult or
        the result of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.compute.v2020_06_01.models.VirtualMachineListResult]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_all
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_available_sizes
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: list_available_sizes(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: list_available_sizes
  summary: 'Lists all available virtual machine sizes to which the specified virtual
    machine can be

    resized.'
  syntax:
    content: list_available_sizes(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VirtualMachineSizeListResult
        or the result of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.compute.v2020_06_01.models.VirtualMachineSizeListResult]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_available_sizes
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_by_location
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: list_by_location(location, **kwargs)
  namewithoutparameters: list_by_location
  summary: Gets all the virtual machines under the specified subscription for the
    specified location.
  syntax:
    content: list_by_location(location, **kwargs)
    parameters:
    - description: The location for which virtual machines under the subscription
        are queried.
      id: location
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either VirtualMachineListResult or
        the result of cls(response)
      type:
      - azure.core.paging.ItemPaged[azure.mgmt.compute.v2020_06_01.models.VirtualMachineListResult]
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_by_location
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.retrieve_boot_diagnostics_data
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: retrieve_boot_diagnostics_data(resource_group_name, vm_name, sas_uri_expiration_time_in_minutes=None,
    **kwargs)
  namewithoutparameters: retrieve_boot_diagnostics_data
  summary: The operation to retrieve SAS URIs for a virtual machine's boot diagnostic
    logs.
  syntax:
    content: retrieve_boot_diagnostics_data(resource_group_name, vm_name, sas_uri_expiration_time_in_minutes=None,
      **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: 'Expiration duration in minutes for the SAS URIs with

        a value between 1 to 1440 minutes. `<br>`:code:>>`<<<br>`NOTE: If not specified,
        SAS URIs

        will be generated with a default expiration duration of 120 minutes.'
      id: sas_uri_expiration_time_in_minutes
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: RetrieveBootDiagnosticsDataResult, or the result of cls(response)
      type:
      - azure.mgmt.compute.v2020_06_01.models.RetrieveBootDiagnosticsDataResult
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.retrieve_boot_diagnostics_data
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.simulate_eviction
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: simulate_eviction(resource_group_name, vm_name, **kwargs)
  namewithoutparameters: simulate_eviction
  summary: The operation to simulate the eviction of spot virtual machine.
  syntax:
    content: simulate_eviction(resource_group_name, vm_name, **kwargs)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the virtual machine.
      id: vm_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.simulate_eviction
- class: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.models
  langs:
  - python
  module: azure.mgmt.compute.v2020_06_01.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.compute.v2020_06_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\compute\\v2020_06_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.models
references:
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_assess_patches
  isExternal: false
  name: begin_assess_patches(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_assess_patches
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_capture
  isExternal: false
  name: begin_capture(resource_group_name, vm_name, parameters, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_capture
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_convert_to_managed_disks
  isExternal: false
  name: begin_convert_to_managed_disks(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_convert_to_managed_disks
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_create_or_update
  isExternal: false
  name: begin_create_or_update(resource_group_name, vm_name, parameters, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_create_or_update
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_deallocate
  isExternal: false
  name: begin_deallocate(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_deallocate
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_delete
  isExternal: false
  name: begin_delete(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_delete
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_perform_maintenance
  isExternal: false
  name: begin_perform_maintenance(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_perform_maintenance
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_power_off
  isExternal: false
  name: begin_power_off(resource_group_name, vm_name, skip_shutdown=False, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_power_off
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reapply
  isExternal: false
  name: begin_reapply(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reapply
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_redeploy
  isExternal: false
  name: begin_redeploy(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_redeploy
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reimage
  isExternal: false
  name: begin_reimage(resource_group_name, vm_name, parameters=None, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_reimage
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_restart
  isExternal: false
  name: begin_restart(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_restart
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_run_command
  isExternal: false
  name: begin_run_command(resource_group_name, vm_name, parameters, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_run_command
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_start
  isExternal: false
  name: begin_start(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_start
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_update
  isExternal: false
  name: begin_update(resource_group_name, vm_name, parameters, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.begin_update
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.generalize
  isExternal: false
  name: generalize(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.generalize
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.get
  isExternal: false
  name: get(resource_group_name, vm_name, expand='instanceView', **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.get
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.instance_view
  isExternal: false
  name: instance_view(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.instance_view
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list
  isExternal: false
  name: list(resource_group_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_all
  isExternal: false
  name: list_all(status_only=None, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_all
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_available_sizes
  isExternal: false
  name: list_available_sizes(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_available_sizes
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_by_location
  isExternal: false
  name: list_by_location(location, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.list_by_location
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.retrieve_boot_diagnostics_data
  isExternal: false
  name: retrieve_boot_diagnostics_data(resource_group_name, vm_name, sas_uri_expiration_time_in_minutes=None,
    **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.retrieve_boot_diagnostics_data
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.simulate_eviction
  isExternal: false
  name: simulate_eviction(resource_group_name, vm_name, **kwargs)
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.simulate_eviction
- fullName: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations
  uid: azure.mgmt.compute.v2020_06_01.operations.VirtualMachinesOperations.models
- fullName: azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachineAssessPatchesResult]
  name: LROPoller[VirtualMachineAssessPatchesResult]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2020_06_01.models.VirtualMachineAssessPatchesResult
    name: VirtualMachineAssessPatchesResult
    uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineAssessPatchesResult
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachineAssessPatchesResult]
- fullName: azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachineCaptureResult]
  name: LROPoller[VirtualMachineCaptureResult]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2020_06_01.models.VirtualMachineCaptureResult
    name: VirtualMachineCaptureResult
    uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineCaptureResult
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachineCaptureResult]
- fullName: azure.core.polling.LROPoller[None]
  name: LROPoller[None]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[None]
- fullName: azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachine]
  name: LROPoller[VirtualMachine]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2020_06_01.models.VirtualMachine
    name: VirtualMachine
    uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachine
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.VirtualMachine]
- fullName: azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.RunCommandResult]
  name: LROPoller[RunCommandResult]
  spec.python:
  - fullName: azure.core.polling.LROPoller
    name: LROPoller
    uid: azure.core.polling.LROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2020_06_01.models.RunCommandResult
    name: RunCommandResult
    uid: azure.mgmt.compute.v2020_06_01.models.RunCommandResult
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.LROPoller[azure.mgmt.compute.v2020_06_01.models.RunCommandResult]
- fullName: azure.core.paging.ItemPaged[azure.mgmt.compute.v2020_06_01.models.VirtualMachineListResult]
  name: ItemPaged[VirtualMachineListResult]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2020_06_01.models.VirtualMachineListResult
    name: VirtualMachineListResult
    uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.mgmt.compute.v2020_06_01.models.VirtualMachineListResult]
- fullName: azure.core.paging.ItemPaged[azure.mgmt.compute.v2020_06_01.models.VirtualMachineSizeListResult]
  name: ItemPaged[VirtualMachineSizeListResult]
  spec.python:
  - fullName: azure.core.paging.ItemPaged
    name: ItemPaged
    uid: azure.core.paging.ItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.compute.v2020_06_01.models.VirtualMachineSizeListResult
    name: VirtualMachineSizeListResult
    uid: azure.mgmt.compute.v2020_06_01.models.VirtualMachineSizeListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.paging.ItemPaged[azure.mgmt.compute.v2020_06_01.models.VirtualMachineSizeListResult]
