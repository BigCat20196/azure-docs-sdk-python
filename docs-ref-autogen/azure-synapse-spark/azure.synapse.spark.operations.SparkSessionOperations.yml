### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_session
  - azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_statement
  - azure.synapse.spark.operations.SparkSessionOperations.create_spark_session
  - azure.synapse.spark.operations.SparkSessionOperations.create_spark_statement
  - azure.synapse.spark.operations.SparkSessionOperations.get_spark_session
  - azure.synapse.spark.operations.SparkSessionOperations.get_spark_sessions
  - azure.synapse.spark.operations.SparkSessionOperations.get_spark_statement
  - azure.synapse.spark.operations.SparkSessionOperations.get_spark_statements
  - azure.synapse.spark.operations.SparkSessionOperations.reset_spark_session_timeout
  - azure.synapse.spark.operations.SparkSessionOperations.models
  class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.synapse.spark.operations
  name: SparkSessionOperations
  summary: 'SparkSessionOperations operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: SparkSessionOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.synapse.spark.operations.SparkSessionOperations
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_session
  langs:
  - python
  module: azure.synapse.spark.operations
  name: cancel_spark_session(session_id, **kwargs)
  namewithoutparameters: cancel_spark_session
  summary: Cancels a running spark session.
  syntax:
    content: cancel_spark_session(session_id, **kwargs)
    parameters:
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_session
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_statement
  langs:
  - python
  module: azure.synapse.spark.operations
  name: cancel_spark_statement(session_id, statement_id, **kwargs)
  namewithoutparameters: cancel_spark_statement
  summary: Kill a statement within a session.
  syntax:
    content: cancel_spark_statement(session_id, statement_id, **kwargs)
    parameters:
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: Identifier for the statement.
      id: statement_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkStatementCancellationResult, or the result of cls(response)
      type:
      - azure.synapse.spark.models.SparkStatementCancellationResult
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_statement
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.create_spark_session
  langs:
  - python
  module: azure.synapse.spark.operations
  name: create_spark_session(spark_session_options, detailed=None, **kwargs)
  namewithoutparameters: create_spark_session
  summary: Create new spark session.
  syntax:
    content: create_spark_session(spark_session_options, detailed=None, **kwargs)
    parameters:
    - description: Livy compatible batch job request payload.
      id: spark_session_options
      isRequired: true
      type:
      - azure.synapse.spark.models.SparkSessionOptions
    - defaultValue: None
      description: 'Optional query param specifying whether detailed response is returned
        beyond

        plain livy.'
      id: detailed
      type:
      - bool
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkSession, or the result of cls(response)
      type:
      - azure.synapse.spark.models.SparkSession
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.create_spark_session
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.create_spark_statement
  langs:
  - python
  module: azure.synapse.spark.operations
  name: create_spark_statement(session_id, spark_statement_options, **kwargs)
  namewithoutparameters: create_spark_statement
  summary: Create statement within a spark session.
  syntax:
    content: create_spark_statement(session_id, spark_statement_options, **kwargs)
    parameters:
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: Livy compatible batch job request payload.
      id: spark_statement_options
      isRequired: true
      type:
      - azure.synapse.spark.models.SparkStatementOptions
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkStatement, or the result of cls(response)
      type:
      - azure.synapse.spark.models.SparkStatement
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.create_spark_statement
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.get_spark_session
  langs:
  - python
  module: azure.synapse.spark.operations
  name: get_spark_session(session_id, detailed=None, **kwargs)
  namewithoutparameters: get_spark_session
  summary: Gets a single spark session.
  syntax:
    content: get_spark_session(session_id, detailed=None, **kwargs)
    parameters:
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - defaultValue: None
      description: 'Optional query param specifying whether detailed response is returned
        beyond

        plain livy.'
      id: detailed
      type:
      - bool
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkSession, or the result of cls(response)
      type:
      - azure.synapse.spark.models.SparkSession
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.get_spark_session
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.get_spark_sessions
  langs:
  - python
  module: azure.synapse.spark.operations
  name: get_spark_sessions(from_parameter=None, size=None, detailed=None, **kwargs)
  namewithoutparameters: get_spark_sessions
  summary: List all spark sessions which are running under a particular spark pool.
  syntax:
    content: get_spark_sessions(from_parameter=None, size=None, detailed=None, **kwargs)
    parameters:
    - defaultValue: None
      description: Optional param specifying which index the list should begin from.
      id: from_parameter
      type:
      - int
    - defaultValue: None
      description: 'Optional param specifying the size of the returned list.

        By default it is 20 and that is the maximum.'
      id: size
      type:
      - int
    - defaultValue: None
      description: 'Optional query param specifying whether detailed response is returned
        beyond

        plain livy.'
      id: detailed
      type:
      - bool
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkSessionCollection, or the result of cls(response)
      type:
      - azure.synapse.spark.models.SparkSessionCollection
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.get_spark_sessions
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.get_spark_statement
  langs:
  - python
  module: azure.synapse.spark.operations
  name: get_spark_statement(session_id, statement_id, **kwargs)
  namewithoutparameters: get_spark_statement
  summary: Gets a single statement within a spark session.
  syntax:
    content: get_spark_statement(session_id, statement_id, **kwargs)
    parameters:
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: Identifier for the statement.
      id: statement_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkStatement, or the result of cls(response)
      type:
      - azure.synapse.spark.models.SparkStatement
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.get_spark_statement
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.get_spark_statements
  langs:
  - python
  module: azure.synapse.spark.operations
  name: get_spark_statements(session_id, **kwargs)
  namewithoutparameters: get_spark_statements
  summary: Gets a list of statements within a spark session.
  syntax:
    content: get_spark_statements(session_id, **kwargs)
    parameters:
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: SparkStatementCollection, or the result of cls(response)
      type:
      - azure.synapse.spark.models.SparkStatementCollection
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.get_spark_statements
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.reset_spark_session_timeout
  langs:
  - python
  module: azure.synapse.spark.operations
  name: reset_spark_session_timeout(session_id, **kwargs)
  namewithoutparameters: reset_spark_session_timeout
  summary: Sends a keep alive call to the current session to reset the session timeout.
  syntax:
    content: reset_spark_session_timeout(session_id, **kwargs)
    parameters:
    - description: Identifier for the session.
      id: session_id
      isRequired: true
      type:
      - int
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.synapse.spark.operations.SparkSessionOperations.reset_spark_session_timeout
- class: azure.synapse.spark.operations.SparkSessionOperations
  fullName: azure.synapse.spark.operations.SparkSessionOperations.models
  langs:
  - python
  module: azure.synapse.spark.operations
  name: models
  syntax:
    content: models = <module 'azure.synapse.spark.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\synapse\\spark\\models\\__init__.py'>
  type: attribute
  uid: azure.synapse.spark.operations.SparkSessionOperations.models
references:
- fullName: azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_session
  isExternal: false
  name: cancel_spark_session(session_id, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_session
- fullName: azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_statement
  isExternal: false
  name: cancel_spark_statement(session_id, statement_id, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.cancel_spark_statement
- fullName: azure.synapse.spark.operations.SparkSessionOperations.create_spark_session
  isExternal: false
  name: create_spark_session(spark_session_options, detailed=None, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.create_spark_session
- fullName: azure.synapse.spark.operations.SparkSessionOperations.create_spark_statement
  isExternal: false
  name: create_spark_statement(session_id, spark_statement_options, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.create_spark_statement
- fullName: azure.synapse.spark.operations.SparkSessionOperations.get_spark_session
  isExternal: false
  name: get_spark_session(session_id, detailed=None, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.get_spark_session
- fullName: azure.synapse.spark.operations.SparkSessionOperations.get_spark_sessions
  isExternal: false
  name: get_spark_sessions(from_parameter=None, size=None, detailed=None, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.get_spark_sessions
- fullName: azure.synapse.spark.operations.SparkSessionOperations.get_spark_statement
  isExternal: false
  name: get_spark_statement(session_id, statement_id, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.get_spark_statement
- fullName: azure.synapse.spark.operations.SparkSessionOperations.get_spark_statements
  isExternal: false
  name: get_spark_statements(session_id, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.get_spark_statements
- fullName: azure.synapse.spark.operations.SparkSessionOperations.reset_spark_session_timeout
  isExternal: false
  name: reset_spark_session_timeout(session_id, **kwargs)
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.reset_spark_session_timeout
- fullName: azure.synapse.spark.operations.SparkSessionOperations.models
  isExternal: false
  name: models
  parent: azure.synapse.spark.operations.SparkSessionOperations
  uid: azure.synapse.spark.operations.SparkSessionOperations.models
