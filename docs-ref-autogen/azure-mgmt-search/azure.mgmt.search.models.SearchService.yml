### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.search.models.SearchService
  fullName: azure.mgmt.search.models.SearchService
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.mgmt.search.models._models_py3.Resource
    type: azure.mgmt.search.models._models_py3.TrackedResource
  langs:
  - python
  module: azure.mgmt.search.models
  name: SearchService
  summary: 'Describes an Azure Cognitive Search service and its current state.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'SearchService(*, location: str, tags=None, replica_count: int = 1, partition_count:
      int = 1, hosting_mode=''default'', public_network_access=''enabled'', network_rule_set=None,
      sku=None, identity=None, **kwargs) -> None'
    parameters:
    - description: Resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: Required. The geo-location where the resource lives
      id: location
      type:
      - str
    - description: 'The number of replicas in the search service. If

        specified, it must be a value between 1 and 12 inclusive for standard SKUs

        or between 1 and 3 inclusive for basic SKU. Default value: 1 .'
      id: replica_count
      type:
      - int
    - description: 'The number of partitions in the search service; if

        specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only

        valid for standard SKUs. For ''standard3'' services with hostingMode set to

        ''highDensity'', the allowed values are between 1 and 3. Default value: 1
        .'
      id: partition_count
      type:
      - int
    - description: 'Applicable only for the standard3 SKU. You can set

        this property to enable up to 3 high density partitions that allow up to

        1000 indexes, which is much higher than the maximum indexes allowed for

        any other SKU. For the standard3 SKU, the value is either ''default'' or

        ''highDensity''. For all other SKUs, this value must be ''default''. Possible

        values include: ''default'', ''highDensity''. Default value: "default" .'
      id: hosting_mode
      type:
      - str
      - azure.mgmt.search.models.HostingMode
    - description: 'This value can be set to ''enabled'' to avoid

        breaking changes on existing customer resources and templates. If set to

        ''disabled'', traffic over public interface is not allowed, and private

        endpoint connections would be the exclusive access method. Possible values

        include: ''enabled'', ''disabled''. Default value: "enabled" .'
      id: public_network_access
      type:
      - str
      - azure.mgmt.search.models.PublicNetworkAccess
    - description: 'Network specific rules that determine how the

        Azure Cognitive Search service may be reached.'
      id: network_rule_set
      type:
      - azure.mgmt.search.models.NetworkRuleSet
    - description: 'The SKU of the Search Service, which determines price tier and

        capacity limits. This property is required when creating a new Search

        Service.'
      id: sku
      type:
      - azure.mgmt.search.models.Sku
    - description: The identity of the resource.
      id: identity
      type:
      - azure.mgmt.search.models.Identity
    variables:
    - description: 'Fully qualified resource Id for the resource. Ex -

        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
      id: id
      type:
      - str
    - description: The name of the resource
      id: name
      type:
      - str
    - description: 'The type of the resource. Ex-

        Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.'
      id: type
      type:
      - str
    - description: 'The status of the search service. Possible values include:

        ''running'': The search service is running and no provisioning operations

        are underway. ''provisioning'': The search service is being provisioned or

        scaled up or down. ''deleting'': The search service is being deleted.

        ''degraded'': The search service is degraded. This can occur when the

        underlying search units are not healthy. The search service is most likely

        operational, but performance might be slow and some requests might be

        dropped. ''disabled'': The search service is disabled. In this state, the

        service will reject all API requests. ''error'': The search service is in
        an

        error state. If your service is in the degraded, disabled, or error

        states, it means the Azure Cognitive Search team is actively investigating

        the underlying issue. Dedicated services in these states are still

        chargeable based on the number of search units provisioned. Possible

        values include: ''running'', ''provisioning'', ''deleting'', ''degraded'',

        ''disabled'', ''error'''
      id: status
      type:
      - str
      - azure.mgmt.search.models.SearchServiceStatus
    - description: The details of the search service status.
      id: status_details
      type:
      - str
    - description: 'The state of the last provisioning operation

        performed on the search service. Provisioning is an intermediate state

        that occurs while service capacity is being established. After capacity is

        set up, provisioningState changes to either ''succeeded'' or ''failed''.

        Client applications can poll provisioning status (the recommended polling

        interval is from 30 seconds to one minute) by using the Get Search Service

        operation to see when an operation is completed. If you are using the free

        service, this value tends to come back as ''succeeded'' directly in the call

        to Create search service. This is because the free service uses capacity

        that is already set up. Possible values include: ''succeeded'',

        ''provisioning'', ''failed'''
      id: provisioning_state
      type:
      - str
      - azure.mgmt.search.models.ProvisioningState
    - description: 'The list of private endpoint

        connections to the Azure Cognitive Search service.'
      id: private_endpoint_connections
      type:
      - list[azure.mgmt.search.models.PrivateEndpointConnection]
    - description: 'The list of shared private link

        resources managed by the Azure Cognitive Search service.'
      id: shared_private_link_resources
      type:
      - list[azure.mgmt.search.models.SharedPrivateLinkResource]
  type: class
  uid: azure.mgmt.search.models.SearchService
references:
- fullName: list[azure.mgmt.search.models.PrivateEndpointConnection]
  name: list[PrivateEndpointConnection]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.search.models.PrivateEndpointConnection
    name: PrivateEndpointConnection
    uid: azure.mgmt.search.models.PrivateEndpointConnection
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.search.models.PrivateEndpointConnection]
- fullName: list[azure.mgmt.search.models.SharedPrivateLinkResource]
  name: list[SharedPrivateLinkResource]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.search.models.SharedPrivateLinkResource
    name: SharedPrivateLinkResource
    uid: azure.mgmt.search.models.SharedPrivateLinkResource
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.search.models.SharedPrivateLinkResource]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
