### YamlMime:UniversalReference
api_name: []
items:
- children:
  - msal.oauth2cli.oidc.Client
  - msal.oauth2cli.oidc.base64decode
  - msal.oauth2cli.oidc.decode_id_token
  - msal.oauth2cli.oidc.decode_part
  fullName: msal.oauth2cli.oidc
  langs:
  - python
  module: msal.oauth2cli.oidc
  name: oidc
  type: module
  uid: msal.oauth2cli.oidc
- fullName: msal.oauth2cli.oidc.base64decode
  langs:
  - python
  module: msal.oauth2cli.oidc
  name: base64decode(raw, encoding='utf-8')
  summary: 'Decode a part of the JWT.


    JWT is encoded by padding-less base64url,

    based on [JWS specs](https://tools.ietf.org/html/rfc7515#appendix-C).'
  syntax:
    content: base64decode(raw, encoding='utf-8')
    parameters:
    - description: 'If you are going to decode the first 2 parts of a JWT, i.e. the
        header

        or the payload, the default value "utf-8" would work fine.

        If you are going to decode the last part i.e. the signature part,

        it is a binary string so you should use *None* as encoding here.'
      id: encoding
    - defaultValue: utf-8
      id: encoding
  type: function
  uid: msal.oauth2cli.oidc.base64decode
- fullName: msal.oauth2cli.oidc.decode_id_token
  langs:
  - python
  module: msal.oauth2cli.oidc
  name: decode_id_token(id_token, client_id=None, issuer=None, nonce=None, now=None)
  summary: 'Decodes and validates an id_token and returns its claims as a dictionary.


    ID token claims would at least contain: "iss", "sub", "aud", "exp", "iat",

    per [specs](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)

    and it may contain other optional content such as "preferred_username",

    [maybe more](https://openid.net/specs/openid-connect-core-1_0.html#Claims)'
  syntax:
    content: decode_id_token(id_token, client_id=None, issuer=None, nonce=None, now=None)
    parameters:
    - id: id_token
    - defaultValue: None
      id: client_id
    - defaultValue: None
      id: issuer
    - defaultValue: None
      id: nonce
    - defaultValue: None
      id: now
  type: function
  uid: msal.oauth2cli.oidc.decode_id_token
- fullName: msal.oauth2cli.oidc.decode_part
  langs:
  - python
  module: msal.oauth2cli.oidc
  name: decode_part(raw, encoding='utf-8')
  summary: 'Decode a part of the JWT.



    JWT is encoded by padding-less base64url,

    based on [JWS specs](https://tools.ietf.org/html/rfc7515#appendix-C).'
  syntax:
    content: decode_part(raw, encoding='utf-8')
    parameters:
    - description: 'If you are going to decode the first 2 parts of a JWT, i.e. the
        header

        or the payload, the default value "utf-8" would work fine.

        If you are going to decode the last part i.e. the signature part,

        it is a binary string so you should use *None* as encoding here.'
      id: encoding
    - defaultValue: utf-8
      id: encoding
  type: function
  uid: msal.oauth2cli.oidc.decode_part
references:
- fullName: msal.oauth2cli.oidc.Client
  isExternal: false
  name: Client
  parent: msal.oauth2cli.oidc
  uid: msal.oauth2cli.oidc.Client
- fullName: msal.oauth2cli.oidc.base64decode
  isExternal: false
  name: base64decode(raw, encoding='utf-8')
  parent: msal.oauth2cli.oidc
  uid: msal.oauth2cli.oidc.base64decode
- fullName: msal.oauth2cli.oidc.decode_id_token
  isExternal: false
  name: decode_id_token(id_token, client_id=None, issuer=None, nonce=None, now=None)
  parent: msal.oauth2cli.oidc
  uid: msal.oauth2cli.oidc.decode_id_token
- fullName: msal.oauth2cli.oidc.decode_part
  isExternal: false
  name: decode_part(raw, encoding='utf-8')
  parent: msal.oauth2cli.oidc
  uid: msal.oauth2cli.oidc.decode_part
