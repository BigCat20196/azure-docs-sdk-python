### YamlMime:UniversalReference
api_name: []
items:
- children:
  - msal.application.PublicClientApplication.acquire_token_by_device_flow
  - msal.application.PublicClientApplication.acquire_token_by_username_password
  - msal.application.PublicClientApplication.initiate_device_flow
  - msal.application.PublicClientApplication.DEVICE_FLOW_CORRELATION_ID
  class: msal.application.PublicClientApplication
  fullName: msal.application.PublicClientApplication
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msal.application.ClientApplication
  langs:
  - python
  module: msal.application
  name: PublicClientApplication
  summary: ''
  syntax:
    content: PublicClientApplication(client_id, client_credential=None, **kwargs)
  type: class
  uid: msal.application.PublicClientApplication
- class: msal.application.PublicClientApplication
  fullName: msal.application.PublicClientApplication.acquire_token_by_device_flow
  langs:
  - python
  module: msal.application
  name: acquire_token_by_device_flow(flow, claims_challenge=None, **kwargs)
  namewithoutparameters: acquire_token_by_device_flow
  summary: Obtain token by a device flow object, with customizable polling effect.
  syntax:
    content: acquire_token_by_device_flow(flow, claims_challenge=None, **kwargs)
    parameters:
    - description: 'A dict previously generated by <xref:msal.application.initiate_device_flow>.

        By default, this method''s polling effect  will block current thread.

        You can abort the polling loop at any time,

        by changing the value of the flow''s "expires_at" key to 0.'
      id: flow
      isRequired: true
      type:
      - dict
    - defaultValue: None
      description: 'The claims_challenge parameter requests specific claims requested
        by the resource provider

        in the form of a claims_challenge directive in the www-authenticate header
        to be

        returned from the UserInfo Endpoint and/or in the ID Token and/or Access Token.

        It is a string of a JSON object which contains lists of claims being requested
        from these locations.'
      id: claims_challenge
    return:
      description: "A dict representing the json response from AAD:\n\n* A successful\
        \ response would contain \"access_token\" key, \n\n* an error response would\
        \ contain \"error\" and usually \"error_description\"."
  type: method
  uid: msal.application.PublicClientApplication.acquire_token_by_device_flow
- class: msal.application.PublicClientApplication
  fullName: msal.application.PublicClientApplication.acquire_token_by_username_password
  langs:
  - python
  module: msal.application
  name: acquire_token_by_username_password(username, password, scopes, claims_challenge=None,
    **kwargs)
  namewithoutparameters: acquire_token_by_username_password
  summary: 'Gets a token for a given resource via user credentials.


    See this page for constraints of Username Password Flow.

    [https://github.com/AzureAD/microsoft-authentication-library-for-python/wiki/Username-Password-Authentication](https://github.com/AzureAD/microsoft-authentication-library-for-python/wiki/Username-Password-Authentication)'
  syntax:
    content: acquire_token_by_username_password(username, password, scopes, claims_challenge=None,
      **kwargs)
    parameters:
    - description: Typically a UPN in the form of an email address.
      id: username
      isRequired: true
      type:
      - str
    - description: The password.
      id: password
      isRequired: true
      type:
      - str
    - description: Scopes requested to access a protected API (a resource).
      id: scopes
      isRequired: true
      type:
      - list[str]
    - defaultValue: None
      description: 'The claims_challenge parameter requests specific claims requested
        by the resource provider

        in the form of a claims_challenge directive in the www-authenticate header
        to be

        returned from the UserInfo Endpoint and/or in the ID Token and/or Access Token.

        It is a string of a JSON object which contains lists of claims being requested
        from these locations.'
      id: claims_challenge
    return:
      description: "A dict representing the json response from AAD:\n\n* A successful\
        \ response would contain \"access_token\" key, \n\n* an error response would\
        \ contain \"error\" and usually \"error_description\"."
  type: method
  uid: msal.application.PublicClientApplication.acquire_token_by_username_password
- class: msal.application.PublicClientApplication
  fullName: msal.application.PublicClientApplication.initiate_device_flow
  langs:
  - python
  module: msal.application
  name: initiate_device_flow(scopes=None, **kwargs)
  namewithoutparameters: initiate_device_flow
  summary: 'Initiate a Device Flow instance,

    which will be used in <xref:msal.application.PublicClientApplication.acquire_token_by_device_flow>.'
  syntax:
    content: initiate_device_flow(scopes=None, **kwargs)
    parameters:
    - defaultValue: None
      description: Scopes requested to access a protected API (a resource).
      id: scopes
      type:
      - list[str]
    return:
      description: "A dict representing a newly created Device Flow object.\n\n* A\
        \ successful response would contain \"user_code\" key, among others \n\n*\
        \ an error response would contain some other readable key/value pairs."
  type: method
  uid: msal.application.PublicClientApplication.initiate_device_flow
- class: msal.application.PublicClientApplication
  fullName: msal.application.PublicClientApplication.DEVICE_FLOW_CORRELATION_ID
  langs:
  - python
  module: msal.application
  name: DEVICE_FLOW_CORRELATION_ID
  syntax:
    content: DEVICE_FLOW_CORRELATION_ID = '_correlation_id'
  type: attribute
  uid: msal.application.PublicClientApplication.DEVICE_FLOW_CORRELATION_ID
references:
- fullName: msal.application.PublicClientApplication.acquire_token_by_device_flow
  isExternal: false
  name: acquire_token_by_device_flow(flow, claims_challenge=None, **kwargs)
  parent: msal.application.PublicClientApplication
  uid: msal.application.PublicClientApplication.acquire_token_by_device_flow
- fullName: msal.application.PublicClientApplication.acquire_token_by_username_password
  isExternal: false
  name: acquire_token_by_username_password(username, password, scopes, claims_challenge=None,
    **kwargs)
  parent: msal.application.PublicClientApplication
  uid: msal.application.PublicClientApplication.acquire_token_by_username_password
- fullName: msal.application.PublicClientApplication.initiate_device_flow
  isExternal: false
  name: initiate_device_flow(scopes=None, **kwargs)
  parent: msal.application.PublicClientApplication
  uid: msal.application.PublicClientApplication.initiate_device_flow
- fullName: msal.application.PublicClientApplication.DEVICE_FLOW_CORRELATION_ID
  isExternal: false
  name: DEVICE_FLOW_CORRELATION_ID
  parent: msal.application.PublicClientApplication
  uid: msal.application.PublicClientApplication.DEVICE_FLOW_CORRELATION_ID
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
