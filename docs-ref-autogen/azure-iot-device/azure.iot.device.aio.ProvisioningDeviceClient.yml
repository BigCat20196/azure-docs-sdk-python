### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.device.aio.ProvisioningDeviceClient.create_from_symmetric_key
  - azure.iot.device.aio.ProvisioningDeviceClient.create_from_x509_certificate
  - azure.iot.device.aio.ProvisioningDeviceClient.register
  class: azure.iot.device.aio.ProvisioningDeviceClient
  fullName: azure.iot.device.aio.ProvisioningDeviceClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.iot.device.provisioning.abstract_provisioning_device_client.AbstractProvisioningDeviceClient
  langs:
  - python
  module: azure.iot.device.aio
  name: ProvisioningDeviceClient
  summary: 'Client which can be used to run the registration of a device with provisioning
    service

    using Symmetric Key or X509 authentication.'
  syntax:
    content: ProvisioningDeviceClient(pipeline)
  type: class
  uid: azure.iot.device.aio.ProvisioningDeviceClient
- class: azure.iot.device.aio.ProvisioningDeviceClient
  fullName: azure.iot.device.aio.ProvisioningDeviceClient.create_from_symmetric_key
  langs:
  - python
  module: azure.iot.device.aio
  name: create_from_symmetric_key(provisioning_host, registration_id, id_scope, symmetric_key,
    **kwargs)
  namewithoutparameters: create_from_symmetric_key
  summary: 'Create a client which can be used to run the registration of a device
    with provisioning service

    using Symmetric Key authentication.



    broker. If no other messages are being exchanged, this controls the

    rate at which the client will send ping messages to the broker.

    If not provided default value of 60 secs will be used.

    :raises: TypeError if given an unrecognized parameter.'
  syntax:
    content: create_from_symmetric_key(provisioning_host, registration_id, id_scope,
      symmetric_key, **kwargs)
    parameters:
    - id: cls
      isRequired: true
    - id: provisioning_host
      isRequired: true
    - id: registration_id
      isRequired: true
    - id: id_scope
      isRequired: true
    - id: symmetric_key
      isRequired: true
    return:
      description: A ProvisioningDeviceClient instance which can register via Symmetric
        Key.
  type: method
  uid: azure.iot.device.aio.ProvisioningDeviceClient.create_from_symmetric_key
- class: azure.iot.device.aio.ProvisioningDeviceClient
  fullName: azure.iot.device.aio.ProvisioningDeviceClient.create_from_x509_certificate
  langs:
  - python
  module: azure.iot.device.aio
  name: create_from_x509_certificate(provisioning_host, registration_id, id_scope,
    x509, **kwargs)
  namewithoutparameters: create_from_x509_certificate
  summary: 'Create a client which can be used to run the registration of a device
    with

    provisioning service using X509 certificate authentication.



    broker. If no other messages are being exchanged, this controls the

    rate at which the client will send ping messages to the broker.

    If not provided default value of 60 secs will be used.

    :raises: TypeError if given an unrecognized parameter.'
  syntax:
    content: create_from_x509_certificate(provisioning_host, registration_id, id_scope,
      x509, **kwargs)
    parameters:
    - id: cls
      isRequired: true
    - id: provisioning_host
      isRequired: true
    - id: registration_id
      isRequired: true
    - id: id_scope
      isRequired: true
    - id: x509
      isRequired: true
    return:
      description: A ProvisioningDeviceClient which can register via Symmetric Key.
  type: method
  uid: azure.iot.device.aio.ProvisioningDeviceClient.create_from_x509_certificate
- class: azure.iot.device.aio.ProvisioningDeviceClient
  fullName: azure.iot.device.aio.ProvisioningDeviceClient.register
  langs:
  - python
  module: azure.iot.device.aio
  name: register()
  namewithoutparameters: register
  summary: 'Register the device with the provisioning service.


    Before returning the client will also disconnect from the provisioning service.

    If a registration attempt is made while a previous registration is in progress
    it may

    throw an error.'
  syntax:
    content: register()
    parameters: []
    return:
      description: RegistrationResult indicating the result of the registration.
      type:
      - <xref:azure.iot.device.RegistrationResult>
  type: method
  uid: azure.iot.device.aio.ProvisioningDeviceClient.register
references:
- fullName: azure.iot.device.aio.ProvisioningDeviceClient.create_from_symmetric_key
  isExternal: false
  name: create_from_symmetric_key(provisioning_host, registration_id, id_scope, symmetric_key,
    **kwargs)
  parent: azure.iot.device.aio.ProvisioningDeviceClient
  uid: azure.iot.device.aio.ProvisioningDeviceClient.create_from_symmetric_key
- fullName: azure.iot.device.aio.ProvisioningDeviceClient.create_from_x509_certificate
  isExternal: false
  name: create_from_x509_certificate(provisioning_host, registration_id, id_scope,
    x509, **kwargs)
  parent: azure.iot.device.aio.ProvisioningDeviceClient
  uid: azure.iot.device.aio.ProvisioningDeviceClient.create_from_x509_certificate
- fullName: azure.iot.device.aio.ProvisioningDeviceClient.register
  isExternal: false
  name: register()
  parent: azure.iot.device.aio.ProvisioningDeviceClient
  uid: azure.iot.device.aio.ProvisioningDeviceClient.register
