### YamlMime:PythonClass
uid: azure.iot.device.aio.ProvisioningDeviceClient
name: ProvisioningDeviceClient
fullName: azure.iot.device.aio.ProvisioningDeviceClient
module: azure.iot.device.aio
inheritances:
- azure.iot.device.provisioning.abstract_provisioning_device_client.AbstractProvisioningDeviceClient
summary: 'Client which can be used to run the registration of a device with provisioning
  service

  using Symmetric Key or X509 authentication.'
constructor:
  syntax: ProvisioningDeviceClient(pipeline)
methods:
- uid: azure.iot.device.aio.ProvisioningDeviceClient.create_from_symmetric_key
  name: create_from_symmetric_key
  summary: 'Create a client which can be used to run the registration of a device
    with provisioning service

    using Symmetric Key authentication.



    broker. If no other messages are being exchanged, this controls the

    rate at which the client will send ping messages to the broker.

    If not provided default value of 60 secs will be used.

    :raises: TypeError if given an unrecognized parameter.'
  signature: create_from_symmetric_key(provisioning_host, registration_id, id_scope,
    symmetric_key, **kwargs)
  parameters:
  - name: cls
    isRequired: true
  - name: provisioning_host
    isRequired: true
  - name: registration_id
    isRequired: true
  - name: id_scope
    isRequired: true
  - name: symmetric_key
    isRequired: true
  return:
    description: A ProvisioningDeviceClient instance which can register via Symmetric
      Key.
- uid: azure.iot.device.aio.ProvisioningDeviceClient.create_from_x509_certificate
  name: create_from_x509_certificate
  summary: 'Create a client which can be used to run the registration of a device
    with

    provisioning service using X509 certificate authentication.



    broker. If no other messages are being exchanged, this controls the

    rate at which the client will send ping messages to the broker.

    If not provided default value of 60 secs will be used.

    :raises: TypeError if given an unrecognized parameter.'
  signature: create_from_x509_certificate(provisioning_host, registration_id, id_scope,
    x509, **kwargs)
  parameters:
  - name: cls
    isRequired: true
  - name: provisioning_host
    isRequired: true
  - name: registration_id
    isRequired: true
  - name: id_scope
    isRequired: true
  - name: x509
    isRequired: true
  return:
    description: A ProvisioningDeviceClient which can register via Symmetric Key.
- uid: azure.iot.device.aio.ProvisioningDeviceClient.register
  name: register
  summary: 'Register the device with the provisioning service.


    Before returning the client will also disconnect from the provisioning service.

    If a registration attempt is made while a previous registration is in progress
    it may

    throw an error.'
  signature: register()
  return:
    description: RegistrationResult indicating the result of the registration.
    types:
    - <xref:azure.iot.device.RegistrationResult>
