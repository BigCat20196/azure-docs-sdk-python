### YamlMime:PythonPackage
uid: azure.storage.blob
name: blob
fullName: azure.storage.blob
type: import
functions:
- uid: azure.storage.blob.download_blob_from_url
  name: download_blob_from_url
  summary: Download the contents of a blob to a local file or stream.
  signature: download_blob_from_url(blob_url, output, credential=None, **kwargs)
  parameters:
  - name: blob_url
    description: The full URI to the blob. This can also include a SAS token.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: output
    description: 'Where the data should be downloaded to. This could be either a file
      path to write to,

      or an open IO handle to write to.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:writable
      stream.>'
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      blob URL already has a SAS token or the blob is public. The value can be a SAS
      token string,

      an instance of a AzureSasCredential from azure.core.credentials,

      an account shared access key, or an instance of a TokenCredentials class from
      azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.'
    defaultValue: None
  return:
    types:
    - '[None](https://docs.python.org/3.6/library/constants.html#None)'
- uid: azure.storage.blob.generate_account_sas
  name: generate_account_sas
  summary: 'Generates a shared access signature for the blob service.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  signature: generate_account_sas(account_name, account_key, resource_types, permission,
    expiry, start=None, ip=None, **kwargs)
  parameters:
  - name: account_name
    description: The storage account name used to generate the shared access signature.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_key
    description: The account key, also called shared key or access key, to generate
      the shared access signature.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: resource_types
    description: Specifies the resource types that are accessible with the account
      SAS.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:azure.storage.blob.ResourceTypes>'
  - name: permission
    description: 'The permissions associated with the shared access signature. The

      user is restricted to operations allowed by the permissions.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has been

      specified in an associated stored access policy.'
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:azure.storage.blob.AccountSasPermissions>'
  - name: expiry
    description: 'The time at which the shared access signature becomes invalid.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has

      been specified in an associated stored access policy. Azure will always

      convert values to UTC. If a date is passed in without timezone info, it

      is assumed to be UTC.'
    types:
    - '[datetime](https://docs.python.org/3.6/library/datetime.html#datetime.datetime)
      or [str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: start
    description: 'The time at which the shared access signature becomes valid. If

      omitted, start time for this call is assumed to be the time when the

      storage service receives the request. Azure will always convert values

      to UTC. If a date is passed in without timezone info, it is assumed to

      be UTC.'
    defaultValue: None
    types:
    - '[datetime](https://docs.python.org/3.6/library/datetime.html#datetime.datetime)
      or [str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: ip
    description: 'Specifies an IP address or a range of IP addresses from which to
      accept requests.

      If the IP address from which the request originates does not match the IP address

      or address range specified on the SAS token, the request is not authenticated.

      For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

      restricts the request to those IP addresses.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: A Shared Access Signature (sas) token.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  examples:
  - "Generating a shared access signature.<!--[!code-python[Main](les\\blob_samples_authentication.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\89\\\\azure-storage-blob-12.4.0\\\\samples\\\\blob_samples_authentication.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   # Create a SAS token to use to authenticate a new client\n   from datetime\
    \ import datetime, timedelta\n   from azure.storage.blob import ResourceTypes,\
    \ AccountSasPermissions, generate_account_sas\n\n   sas_token = generate_account_sas(\n\
    \       blob_service_client.account_name,\n       account_key=blob_service_client.credential.account_key,\n\
    \       resource_types=ResourceTypes(object=True),\n       permission=AccountSasPermissions(read=True),\n\
    \       expiry=datetime.utcnow() + timedelta(hours=1)\n   )\n\n   ````\n"
- uid: azure.storage.blob.generate_blob_sas
  name: generate_blob_sas
  summary: 'Generates a shared access signature for a blob.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  signature: generate_blob_sas(account_name, container_name, blob_name, snapshot=None,
    account_key=None, user_delegation_key=None, permission=None, expiry=None, start=None,
    policy_id=None, ip=None, **kwargs)
  parameters:
  - name: account_name
    description: The storage account name used to generate the shared access signature.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: container_name
    description: The name of the container.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: blob_name
    description: The name of the blob.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: snapshot
    description: An optional blob snapshot ID.
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_key
    description: 'The account key, also called shared key or access key, to generate
      the shared access signature.

      Either *account_key* or *user_delegation_key* must be specified.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: user_delegation_key
    description: 'Instead of an account shared key, the user could pass in a user
      delegation key.

      A user delegation key can be obtained from the service by authenticating with
      an AAD identity;

      this can be accomplished by calling <xref:azure.storage.blob.BlobServiceClient.get_user_delegation_key>.

      When present, the SAS is signed with the user delegation key instead.'
    defaultValue: None
    types:
    - <xref:azure.storage.blob.UserDelegationKey>
  - name: permission
    description: 'The permissions associated with the shared access signature. The

      user is restricted to operations allowed by the permissions.

      Permissions must be ordered read, write, delete, list.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has been

      specified in an associated stored access policy.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:azure.storage.blob.BlobSasPermissions>'
  - name: expiry
    description: 'The time at which the shared access signature becomes invalid.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has

      been specified in an associated stored access policy. Azure will always

      convert values to UTC. If a date is passed in without timezone info, it

      is assumed to be UTC.'
    defaultValue: None
    types:
    - '[datetime](https://docs.python.org/3.6/library/datetime.html#datetime.datetime)
      or [str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: start
    description: 'The time at which the shared access signature becomes valid. If

      omitted, start time for this call is assumed to be the time when the

      storage service receives the request. Azure will always convert values

      to UTC. If a date is passed in without timezone info, it is assumed to

      be UTC.'
    defaultValue: None
    types:
    - '[datetime](https://docs.python.org/3.6/library/datetime.html#datetime.datetime)
      or [str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: policy_id
    description: 'A unique value up to 64 characters in length that correlates to
      a

      stored access policy. To create a stored access policy, use

      <xref:azure.storage.blob.ContainerClient.set_container_access_policy>.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: ip
    description: 'Specifies an IP address or a range of IP addresses from which to
      accept requests.

      If the IP address from which the request originates does not match the IP address

      or address range specified on the SAS token, the request is not authenticated.

      For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

      restricts the request to those IP addresses.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: A Shared Access Signature (sas) token.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
- uid: azure.storage.blob.generate_container_sas
  name: generate_container_sas
  summary: 'Generates a shared access signature for a container.


    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  signature: generate_container_sas(account_name, container_name, account_key=None,
    user_delegation_key=None, permission=None, expiry=None, start=None, policy_id=None,
    ip=None, **kwargs)
  parameters:
  - name: account_name
    description: The storage account name used to generate the shared access signature.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: container_name
    description: The name of the container.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_key
    description: 'The account key, also called shared key or access key, to generate
      the shared access signature.

      Either *account_key* or *user_delegation_key* must be specified.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: user_delegation_key
    description: 'Instead of an account shared key, the user could pass in a user
      delegation key.

      A user delegation key can be obtained from the service by authenticating with
      an AAD identity;

      this can be accomplished by calling <xref:azure.storage.blob.BlobServiceClient.get_user_delegation_key>.

      When present, the SAS is signed with the user delegation key instead.'
    defaultValue: None
    types:
    - <xref:azure.storage.blob.UserDelegationKey>
  - name: permission
    description: 'The permissions associated with the shared access signature. The

      user is restricted to operations allowed by the permissions.

      Permissions must be ordered read, write, delete, list.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has been

      specified in an associated stored access policy.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:azure.storage.blob.ContainerSasPermissions>'
  - name: expiry
    description: 'The time at which the shared access signature becomes invalid.

      Required unless an id is given referencing a stored access policy

      which contains this field. This field must be omitted if it has

      been specified in an associated stored access policy. Azure will always

      convert values to UTC. If a date is passed in without timezone info, it

      is assumed to be UTC.'
    defaultValue: None
    types:
    - '[datetime](https://docs.python.org/3.6/library/datetime.html#datetime.datetime)
      or [str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: start
    description: 'The time at which the shared access signature becomes valid. If

      omitted, start time for this call is assumed to be the time when the

      storage service receives the request. Azure will always convert values

      to UTC. If a date is passed in without timezone info, it is assumed to

      be UTC.'
    defaultValue: None
    types:
    - '[datetime](https://docs.python.org/3.6/library/datetime.html#datetime.datetime)
      or [str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: policy_id
    description: 'A unique value up to 64 characters in length that correlates to
      a

      stored access policy. To create a stored access policy, use

      <xref:azure.storage.blob.ContainerClient.set_container_access_policy>.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: ip
    description: 'Specifies an IP address or a range of IP addresses from which to
      accept requests.

      If the IP address from which the request originates does not match the IP address

      or address range specified on the SAS token, the request is not authenticated.

      For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

      restricts the request to those IP addresses.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: A Shared Access Signature (sas) token.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  examples:
  - "Generating a sas token.<!--[!code-python[Main](les\\blob_samples_containers.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\89\\\\azure-storage-blob-12.4.0\\\\samples\\\\blob_samples_containers.py\",\
    \ \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   # Use access policy to generate a sas token\n   from azure.storage.blob import\
    \ generate_container_sas\n\n   sas_token = generate_container_sas(\n       container_client.account_name,\n\
    \       container_client.container_name,\n       account_key=container_client.credential.account_key,\n\
    \       policy_id='my-access-policy-id'\n   )\n\n   ````\n"
- uid: azure.storage.blob.upload_blob_to_url
  name: upload_blob_to_url
  summary: 'Upload data to a given URL


    The data will be uploaded as a block blob.'
  signature: upload_blob_to_url(blob_url, data, credential=None, **kwargs)
  parameters:
  - name: blob_url
    description: The full URI to the blob. This can also include a SAS token.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: data
    description: The data to upload. This can be bytes, text, an iterable or a file-like
      object.
    types:
    - '[bytes](https://docs.python.org/3.6/library/stdtypes.html#bytes) or [str](https://docs.python.org/3.6/library/stdtypes.html#str)
      or <xref:azure.storage.blob.Iterable>'
  - name: credential
    description: 'The credentials with which to authenticate. This is optional if
      the

      blob URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential from azure.core.credentials, an account

      shared access key, or an instance of a TokenCredentials class from azure.identity.

      If the resource URI already contains a SAS token, this will be ignored in favor
      of an explicit credential

      - except in the case of AzureSasCredential, where the conflicting SAS tokens
      will raise a ValueError.'
    defaultValue: None
  return:
    description: Blob-updated property dict (Etag and last modified)
    types:
    - '[dict](https://docs.python.org/3.6/library/stdtypes.html#dict)([str](https://docs.python.org/3.6/library/stdtypes.html#str),
      <xref:azure.storage.blob.Any>)'
classes:
- azure.storage.blob.AccessPolicy
- azure.storage.blob.AccountSasPermissions
- azure.storage.blob.ArrowDialect
- azure.storage.blob.BlobAnalyticsLogging
- azure.storage.blob.BlobBlock
- azure.storage.blob.BlobClient
- azure.storage.blob.BlobLeaseClient
- azure.storage.blob.BlobPrefix
- azure.storage.blob.BlobProperties
- azure.storage.blob.BlobQueryError
- azure.storage.blob.BlobQueryReader
- azure.storage.blob.BlobSasPermissions
- azure.storage.blob.BlobServiceClient
- azure.storage.blob.ContainerClient
- azure.storage.blob.ContainerEncryptionScope
- azure.storage.blob.ContainerProperties
- azure.storage.blob.ContainerSasPermissions
- azure.storage.blob.ContentSettings
- azure.storage.blob.CopyProperties
- azure.storage.blob.CorsRule
- azure.storage.blob.CustomerProvidedEncryptionKey
- azure.storage.blob.DelimitedJsonDialect
- azure.storage.blob.DelimitedTextDialect
- azure.storage.blob.ExponentialRetry
- azure.storage.blob.FilteredBlob
- azure.storage.blob.LeaseProperties
- azure.storage.blob.LinearRetry
- azure.storage.blob.LocationMode
- azure.storage.blob.Metrics
- azure.storage.blob.ObjectReplicationPolicy
- azure.storage.blob.ObjectReplicationRule
- azure.storage.blob.PageRange
- azure.storage.blob.PartialBatchErrorException
- azure.storage.blob.ResourceTypes
- azure.storage.blob.RetentionPolicy
- azure.storage.blob.StaticWebsite
- azure.storage.blob.StorageStreamDownloader
- azure.storage.blob.UserDelegationKey
packages:
- azure.storage.blob.aio
enums:
- azure.storage.blob.ArrowType
- azure.storage.blob.BlobType
- azure.storage.blob.BlockState
- azure.storage.blob.PremiumPageBlobTier
- azure.storage.blob.PublicAccess
- azure.storage.blob.RehydratePriority
- azure.storage.blob.SequenceNumberAction
- azure.storage.blob.StandardBlobTier
- azure.storage.blob.StorageErrorCode
