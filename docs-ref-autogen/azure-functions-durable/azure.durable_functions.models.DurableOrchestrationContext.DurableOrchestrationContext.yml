### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity_with_retry
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_http
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator_with_retry
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.continue_as_new
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.create_timer
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.current_utc_datetime
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.custom_status
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.from_json
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.function_context
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.get_input
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.histories
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.instance_id
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.is_replaying
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.new_uuid
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.parent_instance_id
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.set_custom_status
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_all
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_any
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.wait_for_external_event
  - azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.will_continue_as_new
  class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: DurableOrchestrationContext
  summary: 'Context of the durable orchestration execution.


    Parameter data for orchestration bindings that can be used to schedule

    function-based activities.'
  syntax:
    content: 'DurableOrchestrationContext(history: typing.List[typing.Dict[typing.Any,
      typing.Any]], instanceId: str, isReplaying: bool, parentInstanceId: str, input:
      typing.Any = None, **kwargs)'
  type: class
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'call_activity(name: str, input_: typing.Union[typing.Any, NoneType] = None)
    -> azure.durable_functions.models.Task.Task'
  namewithoutparameters: call_activity
  summary: Schedule an activity for execution.
  syntax:
    content: 'call_activity(name: str, input_: typing.Union[typing.Any, NoneType]
      = None) -> azure.durable_functions.models.Task.Task'
    parameters:
    - description: The name of the activity function to call.
      id: name
      isRequired: true
      type:
      - str
    - description: The JSON-serializable input to pass to the activity function.
      id: input
      isRequired: true
      type:
      - Optional[Any]
    return:
      description: A Durable Task that completes when the called activity function
        completes or fails.
      type:
      - Task
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity_with_retry
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'call_activity_with_retry(name: str, retry_options: azure.durable_functions.models.RetryOptions.RetryOptions,
    input_: typing.Union[typing.Any, NoneType] = None) -> azure.durable_functions.models.Task.Task'
  namewithoutparameters: call_activity_with_retry
  summary: Schedule an activity for execution with retry options.
  syntax:
    content: 'call_activity_with_retry(name: str, retry_options: azure.durable_functions.models.RetryOptions.RetryOptions,
      input_: typing.Union[typing.Any, NoneType] = None) -> azure.durable_functions.models.Task.Task'
    parameters:
    - description: The name of the activity function to call.
      id: name
      isRequired: true
      type:
      - str
    - description: The retry options for the activity function.
      id: retry_options
      isRequired: true
      type:
      - RetryOptions
    - description: The JSON-serializable input to pass to the activity function.
      id: input
      isRequired: true
      type:
      - Optional[Any]
    return:
      description: 'A Durable Task that completes when the called activity function
        completes or

        fails completely.'
      type:
      - Task
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity_with_retry
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_http
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'call_http(method: str, uri: str, content: typing.Union[str, NoneType] = None,
    headers: typing.Union[typing.Dict[str, str], NoneType] = None, token_source: azure.durable_functions.models.TokenSource.TokenSource
    = None) -> azure.durable_functions.models.Task.Task'
  namewithoutparameters: call_http
  summary: Schedule a durable HTTP call to the specified endpoint.
  syntax:
    content: 'call_http(method: str, uri: str, content: typing.Union[str, NoneType]
      = None, headers: typing.Union[typing.Dict[str, str], NoneType] = None, token_source:
      azure.durable_functions.models.TokenSource.TokenSource = None) -> azure.durable_functions.models.Task.Task'
    parameters:
    - description: The HTTP request method.
      id: method
      isRequired: true
      type:
      - str
    - description: The HTTP request uri.
      id: uri
      isRequired: true
      type:
      - str
    - description: The HTTP request content.
      id: content
      isRequired: true
      type:
      - Optional[str]
    - description: The HTTP request headers.
      id: headers
      isRequired: true
      type:
      - Optional[Dict[str, str]]
    - description: The source of OAuth token to add to the request.
      id: token_source
      isRequired: true
      type:
      - TokenSource
    return:
      description: The durable HTTP request to schedule.
      type:
      - Task
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_http
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'call_sub_orchestrator(name: str, input_: typing.Union[typing.Any, NoneType]
    = None, instance_id: typing.Union[str, NoneType] = None) -> azure.durable_functions.models.Task.Task'
  namewithoutparameters: call_sub_orchestrator
  summary: Schedule sub-orchestration function named *name* for execution.
  syntax:
    content: 'call_sub_orchestrator(name: str, input_: typing.Union[typing.Any, NoneType]
      = None, instance_id: typing.Union[str, NoneType] = None) -> azure.durable_functions.models.Task.Task'
    parameters:
    - description: The name of the orchestrator function to call.
      id: name
      isRequired: true
      type:
      - str
    - description: The JSON-serializable input to pass to the orchestrator function.
      id: input
      isRequired: true
      type:
      - Optional[Any]
    - description: A unique ID to use for the sub-orchestration instance.
      id: instance_id
      isRequired: true
      type:
      - Optional[str]
    return:
      description: A Durable Task that completes when the called sub-orchestrator
        completes or fails.
      type:
      - Task
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator_with_retry
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'call_sub_orchestrator_with_retry(name: str, retry_options: azure.durable_functions.models.RetryOptions.RetryOptions,
    input_: typing.Union[typing.Any, NoneType] = None, instance_id: typing.Union[str,
    NoneType] = None) -> azure.durable_functions.models.Task.Task'
  namewithoutparameters: call_sub_orchestrator_with_retry
  summary: Schedule sub-orchestration function named *name* for execution, with retry-options.
  syntax:
    content: 'call_sub_orchestrator_with_retry(name: str, retry_options: azure.durable_functions.models.RetryOptions.RetryOptions,
      input_: typing.Union[typing.Any, NoneType] = None, instance_id: typing.Union[str,
      NoneType] = None) -> azure.durable_functions.models.Task.Task'
    parameters:
    - description: The name of the activity function to schedule.
      id: name
      isRequired: true
      type:
      - str
    - description: The settings for retrying this sub-orchestrator in case of a failure.
      id: retry_options
      isRequired: true
      type:
      - RetryOptions
    - description: The JSON-serializable input to pass to the activity function. Defaults
        to None.
      id: input
      isRequired: true
      type:
      - Optional[Any]
    - description: The instance ID of the sub-orchestrator to call.
      id: instance_id
      isRequired: true
      type:
      - str
    return:
      description: A Durable Task that completes when the called sub-orchestrator
        completes or fails.
      type:
      - Task
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator_with_retry
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.continue_as_new
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'continue_as_new(input_: typing.Any)'
  namewithoutparameters: continue_as_new
  summary: Schedule the orchestrator to continue as new.
  syntax:
    content: 'continue_as_new(input_: typing.Any)'
    parameters:
    - description: The new starting input to the orchestrator.
      id: input
      isRequired: true
      type:
      - Any
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.continue_as_new
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.create_timer
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'create_timer(fire_at: datetime.datetime) -> azure.durable_functions.models.Task.Task'
  namewithoutparameters: create_timer
  summary: Create a Durable Timer Task to implement a deadline at which to wake-up
    the orchestrator.
  syntax:
    content: 'create_timer(fire_at: datetime.datetime) -> azure.durable_functions.models.Task.Task'
    parameters:
    - description: The time for the timer to trigger
      id: fire_at
      isRequired: true
      type:
      - datetime.datetime
    return:
      description: A Durable Timer Task that schedules the timer to wake up the activity
      type:
      - TimerTask
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.create_timer
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.current_utc_datetime
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: current_utc_datetime
  summary: 'Get the current date/time.


    This date/time value is derived from the orchestration history. It

    always returns the same value at specific points in the orchestrator

    function code, making it deterministic and safe for replay.'
  syntax:
    return:
      description: The current date/time in a way that is safe for use by orchestrator
        functions
      type:
      - datetime
  type: attribute
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.current_utc_datetime
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.custom_status
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: custom_status
  summary: Get customized status of current orchestration.
  syntax: {}
  type: attribute
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.custom_status
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.from_json
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'from_json(json_string: str)'
  namewithoutparameters: from_json
  summary: Convert the value passed into a new instance of the class.
  syntax:
    content: 'from_json(json_string: str)'
    parameters:
    - description: Context passed a JSON serializable value to be converted into an
        instance of the class
      id: json_string
      isRequired: true
      type:
      - str
    return:
      description: New instance of the durable orchestration context class
      type:
      - DurableOrchestrationContext
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.from_json
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.function_context
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: function_context
  summary: Get the function level attributes not used by durable orchestrator.
  syntax:
    return:
      description: Object containing function level attributes not used by durable
        orchestrator.
      type:
      - FunctionContext
  type: attribute
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.function_context
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.get_input
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: get_input() -> typing.Union[typing.Any, NoneType]
  namewithoutparameters: get_input
  summary: Get the orchestration input.
  syntax:
    content: get_input() -> typing.Union[typing.Any, NoneType]
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.get_input
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.histories
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: histories
  summary: Get running history of tasks that have been scheduled.
  syntax: {}
  type: attribute
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.histories
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.instance_id
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: instance_id
  summary: 'Get the ID of the current orchestration instance.


    The instance ID is generated and fixed when the orchestrator function

    is scheduled. It can be either auto-generated, in which case it is

    formatted as a GUID, or it can be user-specified with any format.'
  syntax:
    return:
      description: The ID of the current orchestration instance.
      type:
      - str
  type: attribute
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.instance_id
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.is_replaying
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: is_replaying
  summary: 'Get the value indicating orchestration replaying itself.


    This property is useful when there is logic that needs to run only when

    the orchestrator function is _not_ replaying. For example, certain

    types of application logging may become too noisy when duplicated as

    part of orchestrator function replay. The orchestrator code could check

    to see whether the function is being replayed and then issue the log

    statements when this value is *false*.'
  syntax:
    return:
      description: Value indicating whether the orchestrator function is currently
        replaying.
      type:
      - bool
  type: attribute
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.is_replaying
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.new_uuid
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: new_uuid() -> str
  namewithoutparameters: new_uuid
  summary: "Create a new UUID that is safe for replay within an orchestration or operation.\n\
    \nThe default implementation of this method creates a name-based UUID\nusing the\
    \ algorithm from RFC 4122 \xA74.3. The name input used to generate\nthis value\
    \ is a combination of the orchestration instance ID and an\ninternally managed\
    \ sequence number."
  syntax:
    content: new_uuid() -> str
    return:
      description: New UUID that is safe for replay within an orchestration or operation.
      type:
      - str
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.new_uuid
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.parent_instance_id
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: parent_instance_id
  summary: 'Get the ID of the parent orchestration.


    The parent instance ID is generated and fixed when the parent

    orchestrator function is scheduled. It can be either auto-generated, in

    which case it is formatted as a GUID, or it can be user-specified with

    any format.'
  syntax:
    return:
      description: ID of the parent orchestration of the current sub-orchestration
        instance
      type:
      - str
  type: attribute
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.parent_instance_id
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.set_custom_status
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'set_custom_status(status: typing.Any)'
  namewithoutparameters: set_custom_status
  summary: 'Set the customized orchestration status for your orchestrator function.


    This status is also returned by the orchestration client through the get_status
    API'
  syntax:
    content: 'set_custom_status(status: typing.Any)'
    parameters:
    - description: Customized status provided by the orchestrator
      id: status
      isRequired: true
      type:
      - str
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.set_custom_status
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_all
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'task_all(activities: typing.List[azure.durable_functions.models.Task.Task])
    -> azure.durable_functions.models.TaskSet.TaskSet'
  namewithoutparameters: task_all
  summary: 'Schedule the execution of all activities.


    Similar to Promise.all. When called with *yield* or *return*, returns an

    array containing the results of all [[Task]]s passed to it. It returns

    when all of the [[Task]] instances have completed.


    Throws an exception if any of the activities fails

    :param activities: List of activities to schedule

    :type activities: List[Task]'
  syntax:
    content: 'task_all(activities: typing.List[azure.durable_functions.models.Task.Task])
      -> azure.durable_functions.models.TaskSet.TaskSet'
    return:
      description: The results of all activities.
      type:
      - TaskSet
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_all
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_any
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'task_any(activities: typing.List[azure.durable_functions.models.Task.Task])
    -> azure.durable_functions.models.TaskSet.TaskSet'
  namewithoutparameters: task_any
  summary: 'Schedule the execution of all activities.


    Similar to Promise.race. When called with *yield* or *return*, returns

    the first [[Task]] instance to complete.


    Throws an exception if all of the activities fail'
  syntax:
    content: 'task_any(activities: typing.List[azure.durable_functions.models.Task.Task])
      -> azure.durable_functions.models.TaskSet.TaskSet'
    parameters:
    - description: List of activities to schedule
      id: activities
      isRequired: true
      type:
      - List[Task]
    return:
      description: The first [[Task]] instance to complete.
      type:
      - TaskSet
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_any
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.wait_for_external_event
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: 'wait_for_external_event(name: str) -> azure.durable_functions.models.Task.Task'
  namewithoutparameters: wait_for_external_event
  summary: Wait asynchronously for an event to be raised with the name *name*.
  syntax:
    content: 'wait_for_external_event(name: str) -> azure.durable_functions.models.Task.Task'
    parameters:
    - description: The event name of the event that the task is waiting for.
      id: name
      isRequired: true
      type:
      - str
    return:
      description: Task to wait for the event
      type:
      - Task
  type: method
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.wait_for_external_event
- class: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.will_continue_as_new
  langs:
  - python
  module: azure.durable_functions.models.DurableOrchestrationContext
  name: will_continue_as_new
  summary: Return true if continue_as_new was called.
  syntax: {}
  type: attribute
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.will_continue_as_new
references:
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity
  isExternal: false
  name: 'call_activity(name: str, input_: typing.Union[typing.Any, NoneType] = None)
    -> azure.durable_functions.models.Task.Task'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity_with_retry
  isExternal: false
  name: 'call_activity_with_retry(name: str, retry_options: azure.durable_functions.models.RetryOptions.RetryOptions,
    input_: typing.Union[typing.Any, NoneType] = None) -> azure.durable_functions.models.Task.Task'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_activity_with_retry
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_http
  isExternal: false
  name: 'call_http(method: str, uri: str, content: typing.Union[str, NoneType] = None,
    headers: typing.Union[typing.Dict[str, str], NoneType] = None, token_source: azure.durable_functions.models.TokenSource.TokenSource
    = None) -> azure.durable_functions.models.Task.Task'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_http
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator
  isExternal: false
  name: 'call_sub_orchestrator(name: str, input_: typing.Union[typing.Any, NoneType]
    = None, instance_id: typing.Union[str, NoneType] = None) -> azure.durable_functions.models.Task.Task'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator_with_retry
  isExternal: false
  name: 'call_sub_orchestrator_with_retry(name: str, retry_options: azure.durable_functions.models.RetryOptions.RetryOptions,
    input_: typing.Union[typing.Any, NoneType] = None, instance_id: typing.Union[str,
    NoneType] = None) -> azure.durable_functions.models.Task.Task'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.call_sub_orchestrator_with_retry
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.continue_as_new
  isExternal: false
  name: 'continue_as_new(input_: typing.Any)'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.continue_as_new
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.create_timer
  isExternal: false
  name: 'create_timer(fire_at: datetime.datetime) -> azure.durable_functions.models.Task.Task'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.create_timer
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.current_utc_datetime
  isExternal: false
  name: current_utc_datetime
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.current_utc_datetime
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.custom_status
  isExternal: false
  name: custom_status
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.custom_status
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.from_json
  isExternal: false
  name: 'from_json(json_string: str)'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.from_json
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.function_context
  isExternal: false
  name: function_context
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.function_context
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.get_input
  isExternal: false
  name: get_input() -> typing.Union[typing.Any, NoneType]
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.get_input
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.histories
  isExternal: false
  name: histories
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.histories
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.instance_id
  isExternal: false
  name: instance_id
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.instance_id
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.is_replaying
  isExternal: false
  name: is_replaying
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.is_replaying
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.new_uuid
  isExternal: false
  name: new_uuid() -> str
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.new_uuid
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.parent_instance_id
  isExternal: false
  name: parent_instance_id
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.parent_instance_id
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.set_custom_status
  isExternal: false
  name: 'set_custom_status(status: typing.Any)'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.set_custom_status
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_all
  isExternal: false
  name: 'task_all(activities: typing.List[azure.durable_functions.models.Task.Task])
    -> azure.durable_functions.models.TaskSet.TaskSet'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_all
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_any
  isExternal: false
  name: 'task_any(activities: typing.List[azure.durable_functions.models.Task.Task])
    -> azure.durable_functions.models.TaskSet.TaskSet'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.task_any
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.wait_for_external_event
  isExternal: false
  name: 'wait_for_external_event(name: str) -> azure.durable_functions.models.Task.Task'
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.wait_for_external_event
- fullName: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.will_continue_as_new
  isExternal: false
  name: will_continue_as_new
  parent: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext
  uid: azure.durable_functions.models.DurableOrchestrationContext.DurableOrchestrationContext.will_continue_as_new
- fullName: Optional[Any]
  name: Optional[Any]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ']'
    name: ']'
  uid: Optional[Any]
- fullName: Optional[str]
  name: Optional[str]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: Optional[str]
- fullName: Optional[Dict[str, str]]
  name: Optional[Dict[str, str]]
  spec.python:
  - fullName: Optional
    name: Optional
    uid: Optional
  - fullName: '['
    name: '['
  - fullName: Dict
    name: Dict
    uid: Dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: Optional[Dict[str, str]]
- fullName: List[Task]
  name: List[Task]
  spec.python:
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: Task
    name: Task
    uid: Task
  - fullName: ']'
    name: ']'
  uid: List[Task]
