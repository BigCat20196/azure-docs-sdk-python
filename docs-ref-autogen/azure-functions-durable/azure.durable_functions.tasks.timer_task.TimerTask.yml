### YamlMime:PythonClass
uid: azure.durable_functions.tasks.timer_task.TimerTask
name: TimerTask
fullName: azure.durable_functions.tasks.timer_task.TimerTask
module: azure.durable_functions.tasks.timer_task
inheritances:
- azure.durable_functions.models.Task.Task
summary: 'Represents a pending timer.


  All pending timers must be completed or canceled for an orchestration to complete.


  Example: Cancel a timer

  >>``<<`

  timeout_task = context.df.create_timer(expiration_date)

  if not timeout_task.is_completed():


  timeout_task.cancel()


  >>``<<>>`<<'
constructor:
  syntax: 'TimerTask(action: azure.durable_functions.models.actions.CreateTimerAction.CreateTimerAction,
    is_completed, timestamp, id_, is_played=False)'
methods:
- uid: azure.durable_functions.tasks.timer_task.TimerTask.cancel
  name: cancel
  summary: Cancel a timer.
  signature: cancel()
  exceptions:
  - type: ValueError
    description: Raises an error if the task is already completed and an attempt is
      made to cancel it
- uid: azure.durable_functions.tasks.timer_task.TimerTask.is_cancelled
  name: is_cancelled
  summary: Check of a timer is cancelled.
  signature: is_cancelled() -> bool
  return:
    description: Returns whether a timer has been cancelled or not
    types:
    - <xref:bool>
