### YamlMime:PythonClass
uid: azure.mgmt.consumption.aio.operations.LotsOperations
name: LotsOperations
fullName: azure.mgmt.consumption.aio.operations.LotsOperations
module: azure.mgmt.consumption.aio.operations
inheritances:
- builtins.object
summary: 'LotsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: LotsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.consumption.aio.operations.LotsOperations.list_by_billing_account
  name: list_by_billing_account
  summary: 'Lists all Azure credits and Microsoft Azure consumption commitments for
    a billing account or a

    billing profile. Microsoft Azure consumption commitments are only supported for
    the billing

    account scope.'
  signature: 'list_by_billing_account(billing_account_id: str, filter: Optional[str]
    = None, **kwargs: Any) -> AsyncIterable[azure.mgmt.consumption.models._models_py3.Lots]'
  parameters:
  - name: billing_account_id
    description: BillingAccount ID.
    isRequired: true
    types:
    - <xref:str>
  - name: filter
    description: 'May be used to filter the lots by Status, Source etc. The filter
      supports ''eq'',

      ''lt'', ''gt'', ''le'', ''ge'', and ''and''. It does not currently support ''ne'',
      ''or'', or ''not''. Tag

      filter is a key value pair string where key and value is separated by a colon
      (:).'
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either Lots or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.consumption.models.Lots>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.consumption.aio.operations.LotsOperations.list_by_billing_profile
  name: list_by_billing_profile
  summary: 'Lists all Azure credits and Microsoft Azure consumption commitments for
    a billing account or a

    billing profile. Microsoft Azure consumption commitments are only supported for
    the billing

    account scope.'
  signature: 'list_by_billing_profile(billing_account_id: str, billing_profile_id:
    str, **kwargs: Any) -> AsyncIterable[azure.mgmt.consumption.models._models_py3.Lots]'
  parameters:
  - name: billing_account_id
    description: BillingAccount ID.
    isRequired: true
    types:
    - <xref:str>
  - name: billing_profile_id
    description: Azure Billing Profile ID.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either Lots or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.consumption.models.Lots>]
  exceptions:
  - type: ~azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.consumption.aio.operations.LotsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.consumption.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.9.9\\x64\\lib\\site-packages\\azure\\mgmt\\consumption\\models\\__init__.py'>
