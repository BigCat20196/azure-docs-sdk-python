### YamlMime:PythonClass
uid: azure.cognitiveservices.knowledge.qnamaker.runtime.models.QueryDTO
name: QueryDTO
fullName: azure.cognitiveservices.knowledge.qnamaker.runtime.models.QueryDTO
module: azure.cognitiveservices.knowledge.qnamaker.runtime.models
inheritances:
- msrest.serialization.Model
summary: POST body schema to query the knowledgebase.
constructor:
  syntax: 'QueryDTO(*, qna_id: str = None, question: str = None, top: int = None,
    user_id: str = None, is_test: bool = None, score_threshold: float = None, context=None,
    ranker_type: str = None, strict_filters=None, **kwargs) -> None'
  parameters:
  - name: qna_id
    description: 'Exact qnaId to fetch from the knowledgebase, this field

      takes priority over question.'
    types:
    - <xref:str>
  - name: question
    description: User question to query against the knowledge base.
    types:
    - <xref:str>
  - name: top
    description: Max number of answers to be returned for the question.
    types:
    - <xref:int>
  - name: user_id
    description: Unique identifier for the user.
    types:
    - <xref:str>
  - name: is_test
    description: Query against the test index.
    types:
    - <xref:bool>
  - name: score_threshold
    description: Threshold for answers returned based on score.
    types:
    - <xref:float>
  - name: context
    description: Context object with previous QnA's information.
    types:
    - <xref:azure.cognitiveservices.knowledge.qnamaker.runtime.models.QueryDTOContext>
  - name: ranker_type
    description: 'Optional field. Set to ''QuestionOnly'' for using a

      question only Ranker.'
    types:
    - <xref:str>
  - name: strict_filters
    description: Find only answers that contain these metadata.
    types:
    - <xref:list>[<xref:azure.cognitiveservices.knowledge.qnamaker.runtime.models.MetadataDTO>]
