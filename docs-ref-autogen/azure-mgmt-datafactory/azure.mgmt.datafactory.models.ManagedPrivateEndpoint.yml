### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.ManagedPrivateEndpoint
  fullName: azure.mgmt.datafactory.models.ManagedPrivateEndpoint
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: ManagedPrivateEndpoint
  summary: 'Properties of a managed private endpoint.


    Variables are only populated by the server, and will be ignored when

    sending a request.'
  syntax:
    content: 'ManagedPrivateEndpoint(*, additional_properties=None, connection_state=None,
      fqdns=None, group_id: str = None, private_link_resource_id: str = None, **kwargs)
      -> None'
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - description: The managed private endpoint connection state
      id: connection_state
      type:
      - azure.mgmt.datafactory.models.ConnectionStateProperties
    - description: Fully qualified domain names
      id: fqdns
      type:
      - list[str]
    - description: 'The groupId to which the managed private endpoint is

        created'
      id: group_id
      type:
      - str
    - description: 'The ARM resource ID of the resource to

        which the managed private endpoint is created'
      id: private_link_resource_id
      type:
      - str
    variables:
    - description: 'Denotes whether the managed private endpoint is

        reserved'
      id: is_reserved
      type:
      - bool
    - description: The managed private endpoint provisioning state
      id: provisioning_state
      type:
      - str
  type: class
  uid: azure.mgmt.datafactory.models.ManagedPrivateEndpoint
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
