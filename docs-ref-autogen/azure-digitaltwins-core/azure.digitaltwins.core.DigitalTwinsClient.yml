### YamlMime:PythonClass
uid: azure.digitaltwins.core.DigitalTwinsClient
name: DigitalTwinsClient
fullName: azure.digitaltwins.core.DigitalTwinsClient
module: azure.digitaltwins.core
inheritances:
- builtins.object
summary: Creates an instance of AzureDigitalTwinsAPI.
constructor:
  syntax: DigitalTwinsClient(endpoint, credential, **kwargs)
  parameters:
  - name: endpoint
    description: The URL endpoint of an Azure search service
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: credential
    description: A credential to authenticate requests to the service
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
methods:
- uid: azure.digitaltwins.core.DigitalTwinsClient.create_models
  name: create_models
  summary: Create one or more models. When any error occurs, no models are uploaded.
  signature: create_models(model_list=None, **kwargs)
  parameters:
  - name: model_list
    description: The set of models to create. Each string corresponds to exactly one
      model.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.List>[<xref:azure.digitaltwins.core.object>]
  return:
    description: The list of ModelData
    types:
    - <xref:azure.digitaltwins.core.List>[<xref:azure.digitaltwins.models.ModelData>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.decommission_model
  name: decommission_model
  summary: Decommissions a model.
  signature: decommission_model(model_id, **kwargs)
  parameters:
  - name: model_id
    description: The id for the model. The id is globally unique and case sensitive.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.delete_digital_twin
  name: delete_digital_twin
  summary: Delete a digital twin.
  signature: delete_digital_twin(digital_twin_id, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.delete_event_route
  name: delete_event_route
  summary: Delete an event route.
  signature: delete_event_route(event_route_id, **kwargs)
  parameters:
  - name: event_route_id
    description: The Id of the event route to delete.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.delete_model
  name: delete_model
  summary: Decommission a model using a json patch.
  signature: delete_model(model_id, **kwargs)
  parameters:
  - name: model_id
    description: The Id of the model to decommission.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.delete_relationship
  name: delete_relationship
  summary: Delete a digital twin.
  signature: delete_relationship(digital_twin_id, relationship_id, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: relationship_id
    description: The Id of the relationship to delete.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.get_component
  name: get_component
  summary: Get a component on a digital twin.
  signature: get_component(digital_twin_id, component_path, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: component_path
    description: The component being retrieved.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: Dictionary containing the component.
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>, <xref:azure.digitaltwins.core.object>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.get_digital_twin
  name: get_digital_twin
  summary: Get a digital twin.
  signature: get_digital_twin(digital_twin_id, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: Dictionary containing the twin.
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>, <xref:azure.digitaltwins.core.object>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.get_event_route
  name: get_event_route
  summary: Get an event route.
  signature: get_event_route(event_route_id, **kwargs)
  parameters:
  - name: event_route_id
    description: The Id of the event route.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: The EventRoute object.
    types:
    - <xref:azure.digitaltwins.models.EventRoute>
- uid: azure.digitaltwins.core.DigitalTwinsClient.get_model
  name: get_model
  summary: Get a model, including the model metadata and the model definition.
  signature: get_model(model_id, **kwargs)
  parameters:
  - name: model_id
    description: The Id of the model.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: The ModelDate object.
    types:
    - <xref:azure.digitaltwins.models.ModelData>
- uid: azure.digitaltwins.core.DigitalTwinsClient.get_relationship
  name: get_relationship
  summary: Get a relationship on a digital twin.
  signature: get_relationship(digital_twin_id, relationship_id, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: relationship_id
    description: The Id of the relationship to retrieve.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: Dictionary containing the relationship.
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>, <xref:azure.digitaltwins.core.object>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.list_event_routes
  name: list_event_routes
  summary: Retrieves all event routes.
  signature: list_event_routes(**kwargs)
  return:
    description: An iterator instance of list of EventRoute.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.digitaltwins.models.EventRoute>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.list_incoming_relationships
  name: list_incoming_relationships
  summary: Retrieve all incoming relationships for a digital twin.
  signature: list_incoming_relationships(digital_twin_id, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: An iterator like instance of either Relationship.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.digitaltwins.models.IncomingRelationship>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.list_models
  name: list_models
  summary: Get the list of models.
  signature: list_models(dependencies_for, **kwargs)
  parameters:
  - name: dependencies_for
    description: 'The model Ids to have dependencies retrieved.

      If omitted, all models are retrieved.'
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.List>[<xref:azure.digitaltwins.core.str>]
  return:
    description: An iterator instance of list of ModelData.
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.digitaltwins.models.ModelData>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.list_relationships
  name: list_relationships
  summary: Retrieve relationships for a digital twin.
  signature: list_relationships(digital_twin_id, relationship_id=None, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: relationship_id
    description: 'The Id of the relationship to

      get (if None all the relationship will be retrieved).'
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: An iterator instance of list of Relationship
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.digitaltwins.models.Relationship>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.publish_component_telemetry
  name: publish_component_telemetry
  summary: "Publish telemetry from a digital twin's component, which is then consumed\
    \ by\n   one or many destination endpoints (subscribers) defined under."
  signature: publish_component_telemetry(digital_twin_id, component_path, payload,
    message_id=None, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: component_path
    description: The name of the DTDL component.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: payload
    description: The telemetry payload to be sent.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.object>
  - name: message_id
    description: The message Id.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.publish_telemetry
  name: publish_telemetry
  summary: "Publish telemetry from a digital twin, which is then consumed by\n   one\
    \ or many destination endpoints (subscribers) defined under."
  signature: publish_telemetry(digital_twin_id, payload, message_id=None, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: payload
    description: The telemetry payload to be sent
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.object>
  - name: message_id
    description: The message Id
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.query_twins
  name: query_twins
  summary: Query for digital twins.
  signature: query_twins(query_expression, **kwargs)
  parameters:
  - name: query_expression
    description: The query expression to execute.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  return:
    description: The QueryResult object.
    types:
    - <xref:azure.core.async_paging.ItemPaged>[<xref:Dict>[<xref:azure.digitaltwins.core.str>,
      <xref:azure.digitaltwins.core.object>]]
- uid: azure.digitaltwins.core.DigitalTwinsClient.update_component
  name: update_component
  summary: Update properties of a component on a digital twin using a JSON patch.
  signature: update_component(digital_twin_id, component_path, json_patch, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: component_path
    description: The component being updated.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: object
    description: An update specification described by JSON Patch.
    isRequired: true
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>,
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.update_digital_twin
  name: update_digital_twin
  summary: Update a digital twin using a json patch.
  signature: update_digital_twin(digital_twin_id, json_patch, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: object
    description: 'An update specification described by JSON Patch.

      Updates to property values and $model elements may happen in the same request.

      Operations are limited to add, replace and remove.'
    isRequired: true
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>,
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.update_relationship
  name: update_relationship
  summary: Updates the properties of a relationship on a digital twin using a JSON
    patch.
  signature: update_relationship(digital_twin_id, relationship_id, json_patch=None,
    **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: relationship_id
    description: The Id of the relationship to retrieve.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: object
    description: 'JSON Patch description of the update

      to the relationship properties.'
    isRequired: true
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>,
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.upsert_digital_twin
  name: upsert_digital_twin
  summary: Create or update a digital twin.
  signature: upsert_digital_twin(digital_twin_id, digital_twin, **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: object
    description: Dictionary containing the twin to create or update.
    isRequired: true
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>,
  return:
    description: Dictionary containing the created or updated twin.
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>, <xref:azure.digitaltwins.core.object>]
- uid: azure.digitaltwins.core.DigitalTwinsClient.upsert_event_route
  name: upsert_event_route
  summary: Create or update an event route.
  signature: upsert_event_route(event_route_id, event_route, **kwargs)
  parameters:
  - name: event_route_id
    description: The Id of the event route to create or update.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: event_route
    description: The event route data.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.models.EventRoute>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.digitaltwins.core.DigitalTwinsClient.upsert_relationship
  name: upsert_relationship
  summary: Create or update a relationship on a digital twin.
  signature: upsert_relationship(digital_twin_id, relationship_id, relationship=None,
    **kwargs)
  parameters:
  - name: digital_twin_id
    description: The Id of the digital twin.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: relationship_id
    description: The Id of the relationship to retrieve.
    isRequired: true
    types:
    - <xref:azure.digitaltwins.core.str>
  - name: object
    description: Dictionary containing the relationship.
    isRequired: true
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>,
  return:
    description: The created or updated relationship.
    types:
    - <xref:Dict>[<xref:azure.digitaltwins.core.str>, <xref:azure.digitaltwins.core.object>]
