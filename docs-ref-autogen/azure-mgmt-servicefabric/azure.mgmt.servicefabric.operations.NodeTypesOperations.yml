### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.create_or_update
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.delete
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.delete_node
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.get
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.list_by_managed_clusters
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.reimage
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.restart
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.update
  - azure.mgmt.servicefabric.operations.NodeTypesOperations.models
  class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: NodeTypesOperations
  summary: 'NodeTypesOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: NodeTypesOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'The version of the Service Fabric resource provider API. This
        is a required parameter and it''s value must be "2020-01-01-preview" for this
        specification. Constant value: "2020-01-01-preview".'
      id: api_version
  type: class
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  exceptions:
  - type: azure.mgmt.servicefabric.models.ErrorModelException
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: create_or_update(resource_group_name, cluster_name, node_type_name, parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: create_or_update
  summary: 'Creates or updates a Service Fabric node type.


    Create or update a Service Fabric node type of a given managed cluster.'
  syntax:
    content: create_or_update(resource_group_name, cluster_name, node_type_name, parameters,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the cluster resource.
      id: cluster_name
      isRequired: true
      type:
      - str
    - description: The name of the node type.
      id: node_type_name
      isRequired: true
      type:
      - str
    - description: The node type resource.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.servicefabric.models.NodeType
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns NodeType or

        ClientRawResponse<NodeType> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.servicefabric.models.NodeType]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.servicefabric.models.NodeType]]
  type: method
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.create_or_update
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  exceptions:
  - type: azure.mgmt.servicefabric.models.ErrorModelException
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.delete
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: delete(resource_group_name, cluster_name, node_type_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: delete
  summary: 'Deletes a Service Fabric node type.


    Delete a Service Fabric node type of a given managed cluster.'
  syntax:
    content: delete(resource_group_name, cluster_name, node_type_name, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the cluster resource.
      id: cluster_name
      isRequired: true
      type:
      - str
    - description: The name of the node type.
      id: node_type_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.delete
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  exceptions:
  - type: azure.mgmt.servicefabric.models.ErrorModelException
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.delete_node
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: delete_node(resource_group_name, cluster_name, node_type_name, nodes, force=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: delete_node
  summary: 'Deletes one or more nodes on the node type.


    Deletes one or more nodes on the node type. It will disable the fabric

    nodes, trigger a delete on the VMs and removes the state from the

    cluster.'
  syntax:
    content: delete_node(resource_group_name, cluster_name, node_type_name, nodes,
      force=None, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the cluster resource.
      id: cluster_name
      isRequired: true
      type:
      - str
    - description: The name of the node type.
      id: node_type_name
      isRequired: true
      type:
      - str
    - description: List of node names from the node type.
      id: nodes
      isRequired: true
      type:
      - list[str]
    - defaultValue: None
      description: Force the action to go through.
      id: force
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.delete_node
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  exceptions:
  - type: azure.mgmt.servicefabric.models.ErrorModelException
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.get
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: get(resource_group_name, cluster_name, node_type_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: get
  summary: 'Gets a Service Fabric node type.


    Get a Service Fabric node type of a given managed cluster.'
  syntax:
    content: get(resource_group_name, cluster_name, node_type_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the cluster resource.
      id: cluster_name
      isRequired: true
      type:
      - str
    - description: The name of the node type.
      id: node_type_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: NodeType or ClientRawResponse if raw=true
      type:
      - azure.mgmt.servicefabric.models.NodeType
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.get
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  exceptions:
  - type: azure.mgmt.servicefabric.models.ErrorModelException
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.list_by_managed_clusters
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: list_by_managed_clusters(resource_group_name, cluster_name, custom_headers=None,
    raw=False, **operation_config)
  namewithoutparameters: list_by_managed_clusters
  summary: 'Gets the list of Node types of the specified managed cluster.


    Gets all Node types of the specified managed cluster.'
  syntax:
    content: list_by_managed_clusters(resource_group_name, cluster_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the cluster resource.
      id: cluster_name
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
      isRequired: true
    return:
      description: An iterator like instance of NodeType
      type:
      - azure.mgmt.servicefabric.models.NodeTypePaged[azure.mgmt.servicefabric.models.NodeType]
  type: method
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.list_by_managed_clusters
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  exceptions:
  - type: azure.mgmt.servicefabric.models.ErrorModelException
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.reimage
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: reimage(resource_group_name, cluster_name, node_type_name, nodes, force=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: reimage
  summary: 'Reimages one or more nodes on the node type.


    Reimages one or more nodes on the node type. It will disable the fabric

    nodes, trigger a reimage on the VMs and activate the nodes back again.'
  syntax:
    content: reimage(resource_group_name, cluster_name, node_type_name, nodes, force=None,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the cluster resource.
      id: cluster_name
      isRequired: true
      type:
      - str
    - description: The name of the node type.
      id: node_type_name
      isRequired: true
      type:
      - str
    - description: List of node names from the node type.
      id: nodes
      isRequired: true
      type:
      - list[str]
    - defaultValue: None
      description: Force the action to go through.
      id: force
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.reimage
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  exceptions:
  - type: azure.mgmt.servicefabric.models.ErrorModelException
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.restart
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: restart(resource_group_name, cluster_name, node_type_name, nodes, force=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  namewithoutparameters: restart
  summary: 'Restarts one or more nodes on the node type.


    Restarts one or more nodes on the node type. It will disable the fabric

    nodes, trigger a restart on the VMs and activate the nodes back again.'
  syntax:
    content: restart(resource_group_name, cluster_name, node_type_name, nodes, force=None,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the cluster resource.
      id: cluster_name
      isRequired: true
      type:
      - str
    - description: The name of the node type.
      id: node_type_name
      isRequired: true
      type:
      - str
    - description: List of node names from the node type.
      id: nodes
      isRequired: true
      type:
      - list[str]
    - defaultValue: None
      description: Force the action to go through.
      id: force
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.restart
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  exceptions:
  - type: azure.mgmt.servicefabric.models.ErrorModelException
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.update
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: update(resource_group_name, cluster_name, node_type_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  namewithoutparameters: update
  summary: 'Updates the configuration of a node type of a given managed cluster.


    Update the configuration of a node type of a given managed cluster.'
  syntax:
    content: update(resource_group_name, cluster_name, node_type_name, parameters,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the cluster resource.
      id: cluster_name
      isRequired: true
      type:
      - str
    - description: The name of the node type.
      id: node_type_name
      isRequired: true
      type:
      - str
    - description: 'The parameters to update the node type

        configuration.'
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.servicefabric.models.NodeTypeUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns NodeType or

        ClientRawResponse<NodeType> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.servicefabric.models.NodeType]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.servicefabric.models.NodeType]]
  type: method
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.update
- class: azure.mgmt.servicefabric.operations.NodeTypesOperations
  fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.models
  langs:
  - python
  module: azure.mgmt.servicefabric.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.servicefabric.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\servicefabric\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.models
references:
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, cluster_name, node_type_name, parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.create_or_update
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.delete
  isExternal: false
  name: delete(resource_group_name, cluster_name, node_type_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.delete
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.delete_node
  isExternal: false
  name: delete_node(resource_group_name, cluster_name, node_type_name, nodes, force=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.delete_node
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.get
  isExternal: false
  name: get(resource_group_name, cluster_name, node_type_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.get
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.list_by_managed_clusters
  isExternal: false
  name: list_by_managed_clusters(resource_group_name, cluster_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.list_by_managed_clusters
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.reimage
  isExternal: false
  name: reimage(resource_group_name, cluster_name, node_type_name, nodes, force=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.reimage
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.restart
  isExternal: false
  name: restart(resource_group_name, cluster_name, node_type_name, nodes, force=None,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.restart
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.update
  isExternal: false
  name: update(resource_group_name, cluster_name, node_type_name, parameters, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.update
- fullName: azure.mgmt.servicefabric.operations.NodeTypesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.servicefabric.operations.NodeTypesOperations
  uid: azure.mgmt.servicefabric.operations.NodeTypesOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.servicefabric.models.NodeType]
  name: AzureOperationPoller[NodeType]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.NodeType
    name: NodeType
    uid: azure.mgmt.servicefabric.models.NodeType
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.servicefabric.models.NodeType]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.servicefabric.models.NodeType]]
  name: AzureOperationPoller[ClientRawResponse[NodeType]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.NodeType
    name: NodeType
    uid: azure.mgmt.servicefabric.models.NodeType
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.servicefabric.models.NodeType]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: azure.mgmt.servicefabric.models.NodeTypePaged[azure.mgmt.servicefabric.models.NodeType]
  name: NodeTypePaged[NodeType]
  spec.python:
  - fullName: azure.mgmt.servicefabric.models.NodeTypePaged
    name: NodeTypePaged
    uid: azure.mgmt.servicefabric.models.NodeTypePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.NodeType
    name: NodeType
    uid: azure.mgmt.servicefabric.models.NodeType
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.servicefabric.models.NodeTypePaged[azure.mgmt.servicefabric.models.NodeType]
