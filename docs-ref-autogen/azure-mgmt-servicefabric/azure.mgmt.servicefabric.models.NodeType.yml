### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.servicefabric.models.NodeType
  fullName: azure.mgmt.servicefabric.models.NodeType
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.servicefabric.models._models_py3.ManagedProxyResource
  langs:
  - python
  module: azure.mgmt.servicefabric.models
  name: NodeType
  summary: 'Describes a node type in the cluster, each node type represents sub set
    of

    nodes in the cluster.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'NodeType(*, is_primary: bool, vm_instance_count: int, data_disk_size_gb:
      int, tags=None, placement_properties=None, capacities=None, application_ports=None,
      ephemeral_ports=None, vm_size: str = None, vm_image_publisher: str = None, vm_image_offer:
      str = None, vm_image_sku: str = None, vm_image_version: str = None, vm_secrets=None,
      vm_extensions=None, **kwargs) -> None'
    parameters:
    - description: Azure resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: 'Required. The node type on which system services will

        run. Only one node type should be marked as primary. Primary node type

        cannot be deleted or changed for existing clusters.'
      id: is_primary
      type:
      - bool
    - description: 'Required. The number of nodes in the node type.

        This count should match the capacity property in the corresponding

        VirtualMachineScaleSet resource.'
      id: vm_instance_count
      type:
      - int
    - description: 'Required. Disk size for each vm in the node type

        in GBs.'
      id: data_disk_size_gb
      type:
      - int
    - description: 'The placement tags applied to nodes in the

        node type, which can be used to indicate where certain services (workload)

        should run.'
      id: placement_properties
      type:
      - dict[str, str]
    - description: 'The capacity tags applied to the nodes in the node

        type, the cluster resource manager uses these tags to understand how much

        resource a node has.'
      id: capacities
      type:
      - dict[str, str]
    - description: 'The range of ports from which cluster assigned

        port to Service Fabric applications.'
      id: application_ports
      type:
      - azure.mgmt.servicefabric.models.EndpointRangeDescription
    - description: 'The range of ephemeral ports that nodes in this

        node type should be configured with.'
      id: ephemeral_ports
      type:
      - azure.mgmt.servicefabric.models.EndpointRangeDescription
    - description: 'The size of virtual machines in the pool. All virtual

        machines in a pool are the same size. For example, Standard_D3.'
      id: vm_size
      type:
      - str
    - description: 'The publisher of the Azure Virtual Machines

        Marketplace image. For example, Canonical or MicrosoftWindowsServer.'
      id: vm_image_publisher
      type:
      - str
    - description: 'The offer type of the Azure Virtual Machines

        Marketplace image. For example, UbuntuServer or WindowsServer.'
      id: vm_image_offer
      type:
      - str
    - description: 'The SKU of the Azure Virtual Machines Marketplace

        image. For example, 14.04.0-LTS or 2012-R2-Datacenter.'
      id: vm_image_sku
      type:
      - str
    - description: 'The version of the Azure Virtual Machines

        Marketplace image. A value of ''latest'' can be specified to select the

        latest version of an image. If omitted, the default is ''latest''.'
      id: vm_image_version
      type:
      - str
    - description: 'virtual machine secretes. The secrets to install in the

        virtual machines.'
      id: vm_secrets
      type:
      - list[azure.mgmt.servicefabric.models.VaultSecretGroup]
    - description: 'virtual machine extensions. Set of extensions that

        should be installed onto the virtual machines.'
      id: vm_extensions
      type:
      - list[azure.mgmt.servicefabric.models.VMSSExtension]
    variables:
    - description: Azure resource identifier.
      id: id
      type:
      - str
    - description: Azure resource name.
      id: name
      type:
      - str
    - description: Azure resource type.
      id: type
      type:
      - str
    - description: 'The provisioning state of the managed cluster

        resource. Possible values include: ''None'', ''Creating'', ''Created'',

        ''Updating'', ''Succeeded'', ''Failed'', ''Canceled'', ''Deleting'', ''Deleted'',

        ''Other'''
      id: provisioning_state
      type:
      - str
      - azure.mgmt.servicefabric.models.enum
  type: class
  uid: azure.mgmt.servicefabric.models.NodeType
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[azure.mgmt.servicefabric.models.VaultSecretGroup]
  name: list[VaultSecretGroup]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.VaultSecretGroup
    name: VaultSecretGroup
    uid: azure.mgmt.servicefabric.models.VaultSecretGroup
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.servicefabric.models.VaultSecretGroup]
- fullName: list[azure.mgmt.servicefabric.models.VMSSExtension]
  name: list[VMSSExtension]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.servicefabric.models.VMSSExtension
    name: VMSSExtension
    uid: azure.mgmt.servicefabric.models.VMSSExtension
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.servicefabric.models.VMSSExtension]
