### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations
name: TopicsOperations
fullName: azure.mgmt.eventgrid.aio.operations.TopicsOperations
module: azure.mgmt.eventgrid.aio.operations
inheritances:
- builtins.object
summary: 'TopicsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: TopicsOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: "models \u2013 Alias to model classes used in this operation group"
methods:
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: 'Create a topic.


    Asynchronously creates a new topic with the specified parameters.'
  signature: 'begin_create_or_update(resource_group_name: str, topic_name: str, topic_info:
    azure.mgmt.eventgrid.models._models_py3.Topic, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: topic_name
    description: Name of the topic.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: topic_info
    description: Topic information.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.Topic>
  return:
    description: An instance of AsyncLROPoller that returns either Topic or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.eventgrid.models.Topic>]
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.begin_delete
  name: begin_delete
  summary: 'Delete a topic.


    Delete existing topic.'
  signature: 'begin_delete(resource_group_name: str, topic_name: str, **kwargs) ->
    azure.core.polling._async_poller.AsyncLROPoller'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: topic_name
    description: Name of the topic.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[[None](https://docs.python.org/3.6/library/constants.html#None)]
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.begin_update
  name: begin_update
  summary: 'Update a topic.


    Asynchronously updates a topic with the specified parameters.'
  signature: 'begin_update(resource_group_name: str, topic_name: str, topic_update_parameters:
    azure.mgmt.eventgrid.models._models_py3.TopicUpdateParameters, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: topic_name
    description: Name of the topic.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: topic_update_parameters
    description: Topic update information.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.TopicUpdateParameters>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[[None](https://docs.python.org/3.6/library/constants.html#None)]
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.get
  name: get
  summary: 'Get a topic.


    Get properties of a topic.'
  signature: 'get(resource_group_name: str, topic_name: str, **kwargs) -> ''_models.Topic'''
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: topic_name
    description: Name of the topic.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: Topic, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.Topic>
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'List topics under a resource group.


    List all the topics under a resource group.'
  signature: 'list_by_resource_group(resource_group_name: str, filter: Optional[str]
    = None, top: Optional[int] = None, **kwargs) -> AsyncIterable[_ForwardRef(''_models.TopicsListResult'')]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page.'
    defaultValue: None
    types:
    - '[int](https://docs.python.org/3.6/library/functions.html#int)'
  return:
    description: An iterator like instance of either TopicsListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventgrid.models.TopicsListResult>]
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.list_by_subscription
  name: list_by_subscription
  summary: 'List topics under an Azure subscription.


    List all the topics under an Azure subscription.'
  signature: 'list_by_subscription(filter: Optional[str] = None, top: Optional[int]
    = None, **kwargs) -> AsyncIterable[_ForwardRef(''_models.TopicsListResult'')]'
  parameters:
  - name: filter
    description: 'The query used to filter the search results using OData syntax.
      Filtering is

      permitted on the ''name'' property only and with limited number of OData operations.
      These

      operations are: the ''contains'' function as well as the following logical operations:
      not, and,

      or, eq (for equal), and ne (for not equal). No arithmetic operations are supported.
      The

      following is a valid filter example: $filter=contains(namE, ''PATTERN'') and
      name ne ''PATTERN-1''.

      The following is not a valid filter example: $filter=location eq ''westus''.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: top
    description: 'The number of results to return per page for the list operation.
      Valid range for

      top parameter is 1 to 100. If not specified, the default number of results to
      be returned is 20

      items per page.'
    defaultValue: None
    types:
    - '[int](https://docs.python.org/3.6/library/functions.html#int)'
  return:
    description: An iterator like instance of either TopicsListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventgrid.models.TopicsListResult>]
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.list_event_types
  name: list_event_types
  summary: 'List topic event types.


    List event types for a topic.'
  signature: 'list_event_types(resource_group_name: str, provider_namespace: str,
    resource_type_name: str, resource_name: str, **kwargs) -> AsyncIterable[_ForwardRef(''_models.EventTypesListResult'')]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: provider_namespace
    description: Namespace of the provider of the topic.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: resource_type_name
    description: Name of the topic type.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: resource_name
    description: Name of the topic.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An iterator like instance of either EventTypesListResult or the result
      of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.eventgrid.models.EventTypesListResult>]
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.list_shared_access_keys
  name: list_shared_access_keys
  summary: 'List keys for a topic.


    List the two keys used to publish to a topic.'
  signature: 'list_shared_access_keys(resource_group_name: str, topic_name: str, **kwargs)
    -> ''_models.TopicSharedAccessKeys'''
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: topic_name
    description: Name of the topic.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: TopicSharedAccessKeys, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.TopicSharedAccessKeys>
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.regenerate_key
  name: regenerate_key
  summary: 'Regenerate key for a topic.


    Regenerate a shared access key for a topic.'
  signature: 'regenerate_key(resource_group_name: str, topic_name: str, regenerate_key_request:
    azure.mgmt.eventgrid.models._models_py3.TopicRegenerateKeyRequest, **kwargs) ->
    ''_models.TopicSharedAccessKeys'''
  parameters:
  - name: resource_group_name
    description: The name of the resource group within the user's subscription.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: topic_name
    description: Name of the topic.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: regenerate_key_request
    description: Request body to regenerate key.
    isRequired: true
    types:
    - <xref:azure.mgmt.eventgrid.models.TopicRegenerateKeyRequest>
  return:
    description: TopicSharedAccessKeys, or the result of cls(response)
    types:
    - <xref:azure.mgmt.eventgrid.models.TopicSharedAccessKeys>
attributes:
- uid: azure.mgmt.eventgrid.aio.operations.TopicsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.eventgrid.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\eventgrid\\models\\__init__.py'>
