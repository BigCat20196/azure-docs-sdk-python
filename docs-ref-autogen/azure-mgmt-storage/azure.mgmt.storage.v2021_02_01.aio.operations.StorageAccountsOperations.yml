### YamlMime:PythonClass
uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations
name: StorageAccountsOperations
fullName: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations
module: azure.mgmt.storage.v2021_02_01.aio.operations
inheritances:
- builtins.object
summary: 'StorageAccountsOperations async operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: StorageAccountsOperations(client, config, serializer, deserializer) -> None
  parameters:
  - name: client
    description: Client for service requests.
  - name: config
    description: Configuration of service client.
  - name: serializer
    description: An object model serializer.
  - name: deserializer
    description: An object model deserializer.
variables:
- description: Alias to model classes used in this operation group.
  name: "models \u2013 Alias to model classes used in this operation group"
methods:
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.begin_create
  name: begin_create
  summary: 'Asynchronously creates a new storage account with the specified parameters.
    If an account is

    already created and a subsequent create request is issued with different properties,
    the

    account properties will be updated. If an account is already created and a subsequent
    create or

    update request is issued with the exact same set of properties, the request will
    succeed.'
  signature: 'begin_create(resource_group_name: str, account_name: str, parameters:
    azure.mgmt.storage.v2021_02_01.models._models_py3.StorageAccountCreateParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: parameters
    description: The parameters to provide for the created account.
    isRequired: true
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountCreateParameters>
  return:
    description: An instance of AsyncLROPoller that returns either StorageAccount
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.storage.v2021_02_01.models.StorageAccount>]
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.begin_failover
  name: begin_failover
  summary: 'Failover request can be triggered for a storage account in case of availability
    issues. The

    failover occurs from the storage account''s primary cluster to secondary cluster
    for RA-GRS

    accounts. The secondary cluster will become primary after failover.'
  signature: 'begin_failover(resource_group_name: str, account_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[[None](https://docs.python.org/3.6/library/constants.html#None)]
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.begin_restore_blob_ranges
  name: begin_restore_blob_ranges
  summary: Restore blobs in the specified blob ranges.
  signature: 'begin_restore_blob_ranges(resource_group_name: str, account_name: str,
    parameters: azure.mgmt.storage.v2021_02_01.models._models_py3.BlobRestoreParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: parameters
    description: The parameters to provide for restore blob ranges.
    isRequired: true
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.BlobRestoreParameters>
  return:
    description: An instance of AsyncLROPoller that returns either BlobRestoreStatus
      or the result of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.storage.v2021_02_01.models.BlobRestoreStatus>]
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.check_name_availability
  name: check_name_availability
  summary: Checks that the storage account name is valid and is not already in use.
  signature: 'check_name_availability(account_name: azure.mgmt.storage.v2021_02_01.models._models_py3.StorageAccountCheckNameAvailabilityParameters,
    **kwargs) -> ''_models.CheckNameAvailabilityResult'''
  parameters:
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountCheckNameAvailabilityParameters>
  return:
    description: CheckNameAvailabilityResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.CheckNameAvailabilityResult>
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.delete
  name: delete
  summary: Deletes a storage account in Microsoft Azure.
  signature: 'delete(resource_group_name: str, account_name: str, **kwargs) -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: None, or the result of cls(response)
    types:
    - '[None](https://docs.python.org/3.6/library/constants.html#None)'
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.get_properties
  name: get_properties
  summary: 'Returns the properties for the specified storage account including but
    not limited to name, SKU

    name, location, and account status. The ListKeys operation should be used to retrieve
    storage

    keys.'
  signature: 'get_properties(resource_group_name: str, account_name: str, expand:
    Optional[str] = None, **kwargs) -> ''_models.StorageAccount'''
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: expand
    description: 'May be used to expand the properties within account''s properties.
      By default,

      data is not included when fetching properties. Currently we only support geoReplicationStats

      and blobRestoreStatus.'
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str) or <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountExpand>'
  return:
    description: StorageAccount, or the result of cls(response)
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccount>
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.list
  name: list
  summary: 'Lists all the storage accounts available under the subscription. Note
    that storage keys are not

    returned; use the ListKeys operation for this.'
  signature: list(**kwargs) -> AsyncIterable[_ForwardRef('_models.StorageAccountListResult')]
  return:
    description: An iterator like instance of either StorageAccountListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountListResult>]
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.list_account_sas
  name: list_account_sas
  summary: List SAS credentials of a storage account.
  signature: 'list_account_sas(resource_group_name: str, account_name: str, parameters:
    azure.mgmt.storage.v2021_02_01.models._models_py3.AccountSasParameters, **kwargs)
    -> ''_models.ListAccountSasResponse'''
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: parameters
    description: The parameters to provide to list SAS credentials for the storage
      account.
    isRequired: true
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.AccountSasParameters>
  return:
    description: ListAccountSasResponse, or the result of cls(response)
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.ListAccountSasResponse>
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.list_by_resource_group
  name: list_by_resource_group
  summary: 'Lists all the storage accounts available under the given resource group.
    Note that storage keys

    are not returned; use the ListKeys operation for this.'
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs) -> AsyncIterable[_ForwardRef(''_models.StorageAccountListResult'')]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: An iterator like instance of either StorageAccountListResult or the
      result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountListResult>]
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.list_keys
  name: list_keys
  summary: 'Lists the access keys or Kerberos keys (if active directory enabled) for
    the specified storage

    account.'
  signature: 'list_keys(resource_group_name: str, account_name: str, expand: Optional[str]
    = ''kerb'', **kwargs) -> ''_models.StorageAccountListKeysResult'''
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: expand
    description: Specifies type of the key to be listed. Possible value is kerb.
    defaultValue: kerb
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: StorageAccountListKeysResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountListKeysResult>
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.list_service_sas
  name: list_service_sas
  summary: List service SAS credentials of a specific resource.
  signature: 'list_service_sas(resource_group_name: str, account_name: str, parameters:
    azure.mgmt.storage.v2021_02_01.models._models_py3.ServiceSasParameters, **kwargs)
    -> ''_models.ListServiceSasResponse'''
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: parameters
    description: The parameters to provide to list service SAS credentials.
    isRequired: true
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.ServiceSasParameters>
  return:
    description: ListServiceSasResponse, or the result of cls(response)
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.ListServiceSasResponse>
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.regenerate_key
  name: regenerate_key
  summary: Regenerates one of the access keys or Kerberos keys for the specified storage
    account.
  signature: 'regenerate_key(resource_group_name: str, account_name: str, regenerate_key:
    azure.mgmt.storage.v2021_02_01.models._models_py3.StorageAccountRegenerateKeyParameters,
    **kwargs) -> ''_models.StorageAccountListKeysResult'''
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: regenerate_key
    description: "Specifies name of the key which should be regenerated \u2013 key1,\
      \ key2,\nkerb1, kerb2."
    isRequired: true
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountRegenerateKeyParameters>
  return:
    description: StorageAccountListKeysResult, or the result of cls(response)
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountListKeysResult>
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.revoke_user_delegation_keys
  name: revoke_user_delegation_keys
  summary: Revoke user delegation keys.
  signature: 'revoke_user_delegation_keys(resource_group_name: str, account_name:
    str, **kwargs) -> None'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    description: None, or the result of cls(response)
    types:
    - '[None](https://docs.python.org/3.6/library/constants.html#None)'
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.update
  name: update
  summary: 'The update operation can be used to update the SKU, encryption, access
    tier, or tags for a

    storage account. It can also be used to map the account to a custom domain. Only
    one custom

    domain is supported per storage account; the replacement/change of custom domain
    is not

    supported. In order to replace an old custom domain, the old value must be cleared/unregistered

    before a new value can be set. The update of multiple properties is supported.
    This call does

    not change the storage keys for the account. If you want to change the storage
    account keys,

    use the regenerate keys operation. The location and name of the storage account
    cannot be

    changed after creation.'
  signature: 'update(resource_group_name: str, account_name: str, parameters: azure.mgmt.storage.v2021_02_01.models._models_py3.StorageAccountUpdateParameters,
    **kwargs) -> ''_models.StorageAccount'''
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group within the user''s subscription.
      The

      name is case insensitive.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: account_name
    description: 'The name of the storage account within the specified resource group.

      Storage account names must be between 3 and 24 characters in length and use
      numbers and lower-

      case letters only.'
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: parameters
    description: The parameters to provide for the updated account.
    isRequired: true
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccountUpdateParameters>
  return:
    description: StorageAccount, or the result of cls(response)
    types:
    - <xref:azure.mgmt.storage.v2021_02_01.models.StorageAccount>
attributes:
- uid: azure.mgmt.storage.v2021_02_01.aio.operations.StorageAccountsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.storage.v2021_02_01.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\storage\\v2021_02_01\\models\\__init__.py'>
