### YamlMime:PythonClass
uid: azure.eventgrid.aio.EventGridPublisherClient
name: EventGridPublisherClient
fullName: azure.eventgrid.aio.EventGridPublisherClient
module: azure.eventgrid.aio
inheritances:
- builtins.object
summary: 'Asynchronous EventGridPublisherClient publishes events to an EventGrid topic
  or domain.

  It can be used to publish either an EventGridEvent, a CloudEvent or a Custom Schema.'
constructor:
  syntax: 'EventGridPublisherClient(endpoint: str, credential: Union[azure.core.credentials.AzureKeyCredential,
    azure.core.credentials.AzureSasCredential], **kwargs: Any) -> None'
  parameters:
  - name: endpoint
    description: The topic endpoint to send the events to.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: credential
    description: 'The credential object used for authentication which implements

      SAS key authentication or SAS token authentication.'
    types:
    - <xref:azure.core.credentials.AzureKeyCredential> or <xref:azure.core.credentials.AzureSasCredential>
methods:
- uid: azure.eventgrid.aio.EventGridPublisherClient.close
  name: close
  summary: Close the <xref:azure.eventgrid.aio.EventGridPublisherClient> session.
  signature: close() -> None
- uid: azure.eventgrid.aio.EventGridPublisherClient.send
  name: send
  summary: 'Sends events to a topic or a domain specified during the client initialization.


    A single instance or a list of dictionaries, CloudEvents or EventGridEvents are
    accepted.


    Dict representation of respective serialized models is accepted as CloudEvent(s)
    or

    EventGridEvent(s) apart from the strongly typed objects.


    When publishing a Custom Schema Event(s), dict-like representation is accepted.

    Either a single dictionary or a list of dictionaries can be passed.


    **WARNING**: When sending a list of multiple events at one time, iterating over
    and sending each event

    will not result in optimal performance. For best performance, it is highly recommended
    to send

    a list of events.'
  signature: 'send(events: Union[azure.core.messaging.CloudEvent, azure.eventgrid._models.EventGridEvent,
    Dict, List[azure.core.messaging.CloudEvent], List[azure.eventgrid._models.EventGridEvent],
    List[Dict]], **kwargs: Any) -> None'
  parameters:
  - name: events
    description: A single instance or a list of dictionaries/CloudEvent/EventGridEvent
      to be sent.
    isRequired: true
    types:
    - <xref:azure.core.messaging.CloudEvent> or <xref:azure.eventgrid.EventGridEvent>
      or [dict](https://docs.python.org/3.6/library/stdtypes.html#dict
  return:
    types:
    - '[None](https://docs.python.org/3.6/library/constants.html#None)'
