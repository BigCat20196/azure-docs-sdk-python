### YamlMime:PythonClass
uid: azure.storage.fileshare.aio.ShareFileClient
name: ShareFileClient
fullName: azure.storage.fileshare.aio.ShareFileClient
module: azure.storage.fileshare.aio
inheritances:
- azure.storage.fileshare._shared.base_client_async.AsyncStorageAccountHostsMixin
- azure.storage.fileshare._file_client.ShareFileClient
summary: A client to interact with a specific file, although that file may not yet
  exist.
constructor:
  syntax: ShareFileClient(account_url, share_name, file_path, snapshot=None, credential=None,
    **kwargs)
  parameters:
  - name: account_url
    description: 'The URI to the storage account. In order to create a client given
      the full URI to the

      file, use the <xref:azure.storage.fileshare.aio.from_file_url> classmethod.'
    isRequired: true
    types:
    - <xref:str>
  - name: share_name
    description: The name of the share for the file.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: 'The file path to the file with which to interact. If specified,
      this value will override

      a file value specified in the file URL.'
    isRequired: true
    types:
    - <xref:str>
  - name: snapshot
    description: 'An optional file snapshot on which to operate. This can be the snapshot
      ID string

      or the response returned from <xref:azure.storage.fileshare.aio.ShareClient.create_snapshot>.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credential with which to authenticate. This is optional if the

      account URL already has a SAS token. The value can be a SAS token string,

      an instance of a AzureSasCredential from azure.core.credentials or an account

      shared access key.'
    isRequired: true
variables:
- description: 'The Storage API version to use for requests. Default value is ''2019-07-07''.

    Setting to an older version may result in reduced feature compatibility.


    New in version 12.1.0.'
  name: api_version
  types:
  - <xref:str>
- description: The hostname of the secondary endpoint.
  name: secondary_hostname
  types:
  - <xref:str>
- description: The event loop to run the asynchronous tasks.
  name: loop
- description: The maximum range size used for a file upload. Defaults to 4*1024*1024.
  name: max_range_size
  types:
  - <xref:int>
methods:
- uid: azure.storage.fileshare.aio.ShareFileClient.abort_copy
  name: abort_copy
  summary: 'Abort an ongoing copy operation.


    This will leave a destination file with zero length and full metadata.

    This will raise an error if the copy operation has already ended.'
  signature: abort_copy(copy_id, **kwargs)
  parameters:
  - name: copy_id
    description: 'The copy operation to abort. This can be either an ID, or an

      instance of FileProperties.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.FileProperties>
  return:
    types:
    - <xref:None>
- uid: azure.storage.fileshare.aio.ShareFileClient.acquire_lease
  name: acquire_lease
  summary: 'Requests a new lease.


    If the file does not have an active lease, the File

    Service creates a lease on the blob and returns a new lease.'
  signature: acquire_lease(lease_id=None, **kwargs)
  parameters:
  - name: lease_id
    description: 'Proposed lease ID, in a GUID string format. The File Service

      returns 400 (Invalid request) if the proposed lease ID is not

      in the correct format.'
    isRequired: true
    types:
    - <xref:str>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: A ShareLeaseClient object.
    types:
    - <xref:azure.storage.fileshare.aio.ShareLeaseClient>
- uid: azure.storage.fileshare.aio.ShareFileClient.clear_range
  name: clear_range
  summary: 'Clears the specified range and releases the space used in storage for

    that range.'
  signature: clear_range(offset, length, **kwargs)
  parameters:
  - name: offset
    description: 'Start of byte range to use for clearing a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for clearing a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:azure.storage.fileshare.aio.Any>]
- uid: azure.storage.fileshare.aio.ShareFileClient.close_all_handles
  name: close_all_handles
  summary: 'Close any open file handles.


    This operation will block until the service has closed all open handles.'
  signature: close_all_handles(**kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: 'The number of handles closed (this may be 0 if the specified handle
      was not found)

      and the number of handles failed to close in a dict.'
    types:
    - <xref:dict>[<xref:str>, <xref:int>]
- uid: azure.storage.fileshare.aio.ShareFileClient.close_handle
  name: close_handle
  summary: Close an open file handle.
  signature: close_handle(handle, **kwargs)
  parameters:
  - name: handle
    description: A specific handle to close.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.Handle>
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: 'The number of handles closed (this may be 0 if the specified handle
      was not found)

      and the number of handles failed to close in a dict.'
    types:
    - <xref:dict>[<xref:str>, <xref:int>]
- uid: azure.storage.fileshare.aio.ShareFileClient.create_file
  name: create_file
  summary: 'Creates a new file.


    Note that it only initializes the file with no content.'
  signature: create_file(size, file_attributes='none', file_creation_time='now', file_last_write_time='now',
    file_permission=None, permission_key=None, **kwargs)
  parameters:
  - name: size
    description: 'Specifies the maximum size for the file,

      up to 1 TB.'
    isRequired: true
    types:
    - <xref:int>
  - name: file_attributes
    description: 'The file system attributes for files and directories.

      If not set, the default value would be "None" and the attributes will be set
      to "Archive".

      Here is an example for when the var type is str: ''Temporary|Archive''.

      file_attributes value is not case sensitive.'
    isRequired: true
    types:
    - str
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'Creation time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'Last write time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_permission
    description: 'If specified the permission (security

      descriptor) shall be set for the directory/file. This header can be

      used if Permission size is <= 8KB, else x-ms-file-permission-key

      header shall be used. Default value: Inherit. If SDDL is specified as

      input, it must have owner, group and dacl. Note: Only one of the

      x-ms-file-permission or x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the

      directory/file. Note: Only one of the x-ms-file-permission or

      x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:azure.storage.fileshare.aio.Any>)
  examples:
  - "Create a file.<!--[!code-python[Main](les\\file_samples_client_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\104\\\\\
    azure-storage-file-share-12.4.2\\\\samples\\\\file_samples_client_async.py\",\
    \ \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   # Create and allocate bytes for the file (no content added yet)\n   await\
    \ my_allocated_file.create_file(size=100)\n\n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.delete_file
  name: delete_file
  summary: 'Marks the specified file for deletion. The file is

    later deleted during garbage collection.'
  signature: delete_file(**kwargs)
  return:
    types:
    - <xref:None>
  examples:
  - "Delete a file.<!--[!code-python[Main](les\\file_samples_client_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\104\\\\\
    azure-storage-file-share-12.4.2\\\\samples\\\\file_samples_client_async.py\",\
    \ \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   await my_file.delete_file()\n\n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.download_file
  name: download_file
  summary: 'Downloads a file to the StorageStreamDownloader. The readall() method
    must

    be used to read all the content or readinto() must be used to download the file
    into

    a stream. Using chunks() returns an async iterator which allows the user to iterate
    over the content in chunks.'
  signature: download_file(offset=None, length=None, **kwargs)
  parameters:
  - name: offset
    description: 'Start of byte range to use for downloading a section of the file.

      Must be set if length is provided.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to read from the stream. This is optional, but

      should be supplied for optimal performance.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: A streaming object (StorageStreamDownloader)
    types:
    - <xref:azure.storage.fileshare.aio.StorageStreamDownloader>
  examples:
  - "Download a file.<!--[!code-python[Main](les\\file_samples_client_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\104\\\\\
    azure-storage-file-share-12.4.2\\\\samples\\\\file_samples_client_async.py\",\
    \ \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   with open(DEST_FILE, \"wb\") as data:\n       stream = await my_file.download_file()\n\
    \       data.write(await stream.readall())\n\n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.get_file_properties
  name: get_file_properties
  summary: 'Returns all user-defined metadata, standard HTTP properties, and

    system properties for the file.'
  signature: get_file_properties(**kwargs)
  return:
    description: FileProperties
    types:
    - <xref:azure.storage.fileshare.FileProperties>
- uid: azure.storage.fileshare.aio.ShareFileClient.get_ranges
  name: get_ranges
  summary: 'Returns the list of valid page ranges for a file or snapshot

    of a file.'
  signature: get_ranges(offset=None, length=None, **kwargs)
  parameters:
  - name: offset
    description: Specifies the start offset of bytes over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: Number of bytes to use over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  return:
    description: A list of valid ranges.
    types:
    - <xref:azure.storage.fileshare.aio.List>[<xref:dict>[<xref:str>, <xref:int>]]
- uid: azure.storage.fileshare.aio.ShareFileClient.get_ranges_diff
  name: get_ranges_diff
  summary: 'Returns the list of valid page ranges for a file or snapshot

    of a file.


    New in version 12.6.0.'
  signature: get_ranges_diff(previous_sharesnapshot, offset=None, length=None, **kwargs)
  parameters:
  - name: offset
    description: Specifies the start offset of bytes over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: Number of bytes to use over which to get ranges.
    isRequired: true
    types:
    - <xref:int>
  - name: previous_sharesnapshot
    description: 'The snapshot diff parameter that contains an opaque DateTime value
      that

      specifies a previous file snapshot to be compared

      against a more recent snapshot or the current file.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'A tuple of two lists of file ranges as dictionaries with ''start''
      and ''end'' keys.

      The first element are filled file ranges, the 2nd element is cleared file ranges.'
    types:
    - <xref:azure.storage.fileshare.aio.tuple>(<xref:list>(<xref:dict>(<xref:str>,
      <xref:str>), <xref:list>(<xref:dict>(<xref:str>, <xref:str>))
- uid: azure.storage.fileshare.aio.ShareFileClient.list_handles
  name: list_handles
  summary: Lists handles for file.
  signature: list_handles(**kwargs)
  parameters:
  - name: timeout
    description: The timeout parameter is expressed in seconds.
    types:
    - <xref:int>
  return:
    description: An auto-paging iterable of HandleItem
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.storage.fileshare.HandleItem>]
- uid: azure.storage.fileshare.aio.ShareFileClient.resize_file
  name: resize_file
  summary: Resizes a file to the specified size.
  signature: resize_file(size, **kwargs)
  parameters:
  - name: size
    description: Size to resize file to (in bytes)
    isRequired: true
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:azure.storage.fileshare.aio.Any>]
- uid: azure.storage.fileshare.aio.ShareFileClient.set_file_metadata
  name: set_file_metadata
  summary: 'Sets user-defined metadata for the specified file as one or more

    name-value pairs.


    Each call to this operation replaces all existing metadata

    attached to the file. To remove all metadata from the file,

    call this operation with no metadata dict.'
  signature: set_file_metadata(metadata=None, **kwargs)
  parameters:
  - name: metadata
    description: Name-value pairs associated with the file as metadata.
    isRequired: true
    types:
    - <xref:dict>(<xref:str>, <xref:str>)
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:azure.storage.fileshare.aio.Any>)
- uid: azure.storage.fileshare.aio.ShareFileClient.set_http_headers
  name: set_http_headers
  summary: Sets HTTP headers on the file.
  signature: set_http_headers(content_settings, file_attributes='preserve', file_creation_time='preserve',
    file_last_write_time='preserve', file_permission=None, permission_key=None, **kwargs)
  parameters:
  - name: content_settings
    description: 'ContentSettings object used to set file properties. Used to set
      content type, encoding,

      language, disposition, md5, and cache control.'
    isRequired: true
    types:
    - <xref:azure.storage.fileshare.ContentSettings>
  - name: file_attributes
    description: 'The file system attributes for files and directories.

      If not set, indicates preservation of existing values.

      Here is an example for when the var type is str: ''Temporary|Archive'''
    isRequired: true
    types:
    - str
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'Creation time for the file

      Default value: Preserve.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'Last write time for the file

      Default value: Preserve.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_permission
    description: 'If specified the permission (security

      descriptor) shall be set for the directory/file. This header can be

      used if Permission size is <= 8KB, else x-ms-file-permission-key

      header shall be used. Default value: Inherit. If SDDL is specified as

      input, it must have owner, group and dacl. Note: Only one of the

      x-ms-file-permission or x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the

      directory/file. Note: Only one of the x-ms-file-permission or

      x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:azure.storage.fileshare.aio.Any>)
- uid: azure.storage.fileshare.aio.ShareFileClient.start_copy_from_url
  name: start_copy_from_url
  summary: 'Initiates the copying of data from a source URL into the file

    referenced by the client.


    The status of this copy operation can be found using the *get_properties*

    method.'
  signature: start_copy_from_url(source_url, **kwargs)
  parameters:
  - name: source_url
    description: Specifies the URL of the source file.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:dict>(<xref:str>, <xref:azure.storage.fileshare.aio.Any>)
  examples:
  - "Copy a file from a URL<!--[!code-python[Main](les\\file_samples_client_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\104\\\\azure-storage-file-share-12.4.2\\\\samples\\\\file_samples_client_async.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   await destination_file.start_copy_from_url(source_url=source_url)\n\n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.upload_file
  name: upload_file
  summary: Uploads a new file.
  signature: upload_file(data, length=None, file_attributes='none', file_creation_time='now',
    file_last_write_time='now', file_permission=None, permission_key=None, **kwargs)
  parameters:
  - name: data
    description: Content of the file.
    isRequired: true
    types:
    - <xref:azure.storage.fileshare.aio.Any>
  - name: length
    description: Length of the file in bytes. Specify its maximum size, up to 1 TiB.
    isRequired: true
    types:
    - <xref:int>
  - name: file_attributes
    description: 'The file system attributes for files and directories.

      If not set, the default value would be "None" and the attributes will be set
      to "Archive".

      Here is an example for when the var type is str: ''Temporary|Archive''.

      file_attributes value is not case sensitive.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.storage.fileshare.NTFSAttributes>
  - name: file_creation_time
    description: 'Creation time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_last_write_time
    description: 'Last write time for the file

      Default value: Now.'
    isRequired: true
    types:
    - <xref:str>
    - <xref:datetime.datetime>
  - name: file_permission
    description: 'If specified the permission (security

      descriptor) shall be set for the directory/file. This header can be

      used if Permission size is <= 8KB, else x-ms-file-permission-key

      header shall be used. Default value: Inherit. If SDDL is specified as

      input, it must have owner, group and dacl. Note: Only one of the

      x-ms-file-permission or x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  - name: permission_key
    description: 'Key of the permission to be set for the

      directory/file. Note: Only one of the x-ms-file-permission or

      x-ms-file-permission-key should be specified.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:dict>(<xref:str>, <xref:azure.storage.fileshare.aio.Any>)
  examples:
  - "Upload a file.<!--[!code-python[Main](les\\file_samples_client_async.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\104\\\\\
    azure-storage-file-share-12.4.2\\\\samples\\\\file_samples_client_async.py\",\
    \ \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\", \"\
    highlight_args\": {\"linenostart\": 1}, \"linenos\": false} -->\n\n````python\n\
    \n   with open(SOURCE_FILE, \"rb\") as source:\n       await my_file.upload_file(source)\n\
    \n   ````\n"
- uid: azure.storage.fileshare.aio.ShareFileClient.upload_range
  name: upload_range
  summary: Upload a range of bytes to a file.
  signature: upload_range(data, offset, length, **kwargs)
  parameters:
  - name: data
    description: The data to upload.
    isRequired: true
    types:
    - <xref:azure.storage.fileshare.aio.bytes>
  - name: offset
    description: 'Start of byte range to use for uploading a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for uploading a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  return:
    description: File-updated property dict (Etag and last modified).
    types:
    - <xref:Dict>[<xref:str>, <xref:azure.storage.fileshare.aio.Any>]
- uid: azure.storage.fileshare.aio.ShareFileClient.upload_range_from_url
  name: upload_range_from_url
  summary: Writes the bytes from one Azure File endpoint into the specified range
    of another Azure File endpoint.
  signature: upload_range_from_url(source_url, offset, length, source_offset, **kwargs)
  parameters:
  - name: offset
    description: 'Start of byte range to use for updating a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: length
    description: 'Number of bytes to use for updating a section of the file.

      The range can be up to 4 MB in size.'
    isRequired: true
    types:
    - <xref:int>
  - name: source_url
    description: 'A URL of up to 2 KB in length that specifies an Azure file or blob.

      The value should be URL-encoded as it would appear in a request URI.

      If the source is in another account, the source must either be public

      or must be authenticated via a shared access signature. If the source

      is public, no authentication is required.

      Examples:

      [https://myaccount.file.core.windows.net/myshare/mydir/myfile](https://myaccount.file.core.windows.net/myshare/mydir/myfile)

      [https://otheraccount.file.core.windows.net/myshare/mydir/myfile?sastoken](https://otheraccount.file.core.windows.net/myshare/mydir/myfile?sastoken)'
    isRequired: true
    types:
    - <xref:str>
  - name: source_offset
    description: 'This indicates the start of the range of bytes(inclusive) that has
      to be taken from the copy source.

      The service will read the same number of bytes as the destination range (length-offset).'
    isRequired: true
    types:
    - <xref:int>
