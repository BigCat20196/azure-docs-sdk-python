### YamlMime:PythonClass
uid: azure.identity.aio.ClientSecretCredential
name: ClientSecretCredential
fullName: azure.identity.aio.ClientSecretCredential
module: azure.identity.aio
inheritances:
- azure.identity.aio._internal.AsyncContextManager
- azure.identity._internal.client_secret_credential_base.ClientSecretCredentialBase
summary: Authenticates as a service principal using a client ID and client secret.
constructor:
  syntax: ClientSecretCredential(tenant_id, client_id, client_secret, **kwargs)
  parameters:
  - name: tenant_id
    description: ID of the service principal's tenant. Also called its 'directory'
      ID.
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: client_id
    description: the service principal's client ID
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: client_secret
    description: one of the service principal's client secrets
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
methods:
- uid: azure.identity.aio.ClientSecretCredential.close
  name: close
  summary: Close the credential's transport session.
  signature: close()
- uid: azure.identity.aio.ClientSecretCredential.get_token
  name: get_token
  summary: 'Asynchronously request an access token for *scopes*.


    This method is called automatically by Azure SDK clients.'
  signature: 'get_token(*scopes: str, **kwargs: Any) -> ''AccessToken'''
  parameters:
  - name: scopes
    description: desired scopes for the access token. This method requires at least
      one scope.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  return:
    types:
    - <xref:azure.core.credentials.AccessToken>
