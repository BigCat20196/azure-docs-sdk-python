<<<<<<< HEAD
### YamlMime:PythonClass
uid: azure.functions.cosmosdb.CosmosDBConverter
name: CosmosDBConverter
fullName: azure.functions.cosmosdb.CosmosDBConverter
module: azure.functions.cosmosdb
inheritances:
- azure.functions.meta.InConverter
- azure.functions.meta.OutConverter
methods:
- uid: azure.functions.cosmosdb.CosmosDBConverter.check_input_type_annotation
  name: check_input_type_annotation
  signature: 'check_input_type_annotation(pytype: type) -> bool'
- uid: azure.functions.cosmosdb.CosmosDBConverter.check_output_type_annotation
  name: check_output_type_annotation
  signature: 'check_output_type_annotation(pytype: type) -> bool'
- uid: azure.functions.cosmosdb.CosmosDBConverter.decode
  name: decode
  signature: 'decode(data: azure.functions.meta.Datum, *, trigger_metadata) -> typing.Union[azure.functions._cosmosdb.DocumentList,
    NoneType]'
- uid: azure.functions.cosmosdb.CosmosDBConverter.encode
  name: encode
  signature: 'encode(obj: typing.Any, *, expected_type: typing.Union[type, NoneType])
    -> azure.functions.meta.Datum'
=======
### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.functions.cosmosdb.CosmosDBConverter.check_input_type_annotation
  - azure.functions.cosmosdb.CosmosDBConverter.check_output_type_annotation
  - azure.functions.cosmosdb.CosmosDBConverter.decode
  - azure.functions.cosmosdb.CosmosDBConverter.encode
  class: azure.functions.cosmosdb.CosmosDBConverter
  fullName: azure.functions.cosmosdb.CosmosDBConverter
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.functions.meta._BaseConverter
    type: azure.functions.meta.InConverter
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.functions.meta._BaseConverter
    type: azure.functions.meta.OutConverter
  langs:
  - python
  module: azure.functions.cosmosdb
  name: CosmosDBConverter
  summary: ''
  syntax: {}
  type: class
  uid: azure.functions.cosmosdb.CosmosDBConverter
- class: azure.functions.cosmosdb.CosmosDBConverter
  fullName: azure.functions.cosmosdb.CosmosDBConverter.check_input_type_annotation
  langs:
  - python
  module: azure.functions.cosmosdb
  name: 'check_input_type_annotation(pytype: type) -> bool'
  namewithoutparameters: check_input_type_annotation
  syntax:
    content: 'check_input_type_annotation(pytype: type) -> bool'
  type: method
  uid: azure.functions.cosmosdb.CosmosDBConverter.check_input_type_annotation
- class: azure.functions.cosmosdb.CosmosDBConverter
  fullName: azure.functions.cosmosdb.CosmosDBConverter.check_output_type_annotation
  langs:
  - python
  module: azure.functions.cosmosdb
  name: 'check_output_type_annotation(pytype: type) -> bool'
  namewithoutparameters: check_output_type_annotation
  syntax:
    content: 'check_output_type_annotation(pytype: type) -> bool'
  type: method
  uid: azure.functions.cosmosdb.CosmosDBConverter.check_output_type_annotation
- class: azure.functions.cosmosdb.CosmosDBConverter
  fullName: azure.functions.cosmosdb.CosmosDBConverter.decode
  langs:
  - python
  module: azure.functions.cosmosdb
  name: 'decode(data: azure.functions.meta.Datum, *, trigger_metadata) -> typing.Union[azure.functions._cosmosdb.DocumentList,
    NoneType]'
  namewithoutparameters: decode
  syntax:
    content: 'decode(data: azure.functions.meta.Datum, *, trigger_metadata) -> typing.Union[azure.functions._cosmosdb.DocumentList,
      NoneType]'
  type: method
  uid: azure.functions.cosmosdb.CosmosDBConverter.decode
- class: azure.functions.cosmosdb.CosmosDBConverter
  fullName: azure.functions.cosmosdb.CosmosDBConverter.encode
  langs:
  - python
  module: azure.functions.cosmosdb
  name: 'encode(obj: typing.Any, *, expected_type: typing.Union[type, NoneType]) ->
    azure.functions.meta.Datum'
  namewithoutparameters: encode
  syntax:
    content: 'encode(obj: typing.Any, *, expected_type: typing.Union[type, NoneType])
      -> azure.functions.meta.Datum'
  type: method
  uid: azure.functions.cosmosdb.CosmosDBConverter.encode
references:
- fullName: azure.functions.cosmosdb.CosmosDBConverter.check_input_type_annotation
  isExternal: false
  name: 'check_input_type_annotation(pytype: type) -> bool'
  parent: azure.functions.cosmosdb.CosmosDBConverter
  uid: azure.functions.cosmosdb.CosmosDBConverter.check_input_type_annotation
- fullName: azure.functions.cosmosdb.CosmosDBConverter.check_output_type_annotation
  isExternal: false
  name: 'check_output_type_annotation(pytype: type) -> bool'
  parent: azure.functions.cosmosdb.CosmosDBConverter
  uid: azure.functions.cosmosdb.CosmosDBConverter.check_output_type_annotation
- fullName: azure.functions.cosmosdb.CosmosDBConverter.decode
  isExternal: false
  name: 'decode(data: azure.functions.meta.Datum, *, trigger_metadata) -> typing.Union[azure.functions._cosmosdb.DocumentList,
    NoneType]'
  parent: azure.functions.cosmosdb.CosmosDBConverter
  uid: azure.functions.cosmosdb.CosmosDBConverter.decode
- fullName: azure.functions.cosmosdb.CosmosDBConverter.encode
  isExternal: false
  name: 'encode(obj: typing.Any, *, expected_type: typing.Union[type, NoneType]) ->
    azure.functions.meta.Datum'
  parent: azure.functions.cosmosdb.CosmosDBConverter
  uid: azure.functions.cosmosdb.CosmosDBConverter.encode
>>>>>>> smoke-test
