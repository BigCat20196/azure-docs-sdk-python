### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.synapse.artifacts.models.IfConditionActivity
  fullName: azure.synapse.artifacts.models.IfConditionActivity
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.synapse.artifacts.models._models_py3.Activity
  langs:
  - python
  module: azure.synapse.artifacts.models
  name: IfConditionActivity
  summary: 'This activity evaluates a boolean expression and executes either the activities
    under the ifTrueActivities property or the ifFalseActivities property depending
    on the result of the expression.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'IfConditionActivity(*, name: str, expression: azure.synapse.artifacts.models._models_py3.Expression,
      additional_properties: typing.Union[typing.Dict[str, object], NoneType] = None,
      description: typing.Union[str, NoneType] = None, depends_on: typing.Union[typing.List[_ForwardRef(''ActivityDependency'')],
      NoneType] = None, user_properties: typing.Union[typing.List[_ForwardRef(''UserProperty'')],
      NoneType] = None, if_true_activities: typing.Union[typing.List[_ForwardRef(''Activity'')],
      NoneType] = None, if_false_activities: typing.Union[typing.List[_ForwardRef(''Activity'')],
      NoneType] = None, **kwargs)'
    parameters:
    - description: 'Unmatched properties from the message are deserialized to this

        collection.'
      id: additional_properties
      type:
      - dict[str, object]
    - description: Required. Activity name.
      id: name
      type:
      - str
    - description: Required. Type of activity.Constant filled by server.
      id: type
      type:
      - str
    - description: Activity description.
      id: description
      type:
      - str
    - description: Activity depends on condition.
      id: depends_on
      type:
      - list[azure.synapse.artifacts.models.ActivityDependency]
    - description: Activity user properties.
      id: user_properties
      type:
      - list[azure.synapse.artifacts.models.UserProperty]
    - description: 'Required. An expression that would evaluate to Boolean. This is
        used to

        determine the block of activities (ifTrueActivities or ifFalseActivities)
        that will be

        executed.'
      id: expression
      type:
      - azure.synapse.artifacts.models.Expression
    - description: 'List of activities to execute if expression is evaluated to true.

        This is an optional property and if not provided, the activity will exit without
        any action.'
      id: if_true_activities
      type:
      - list[azure.synapse.artifacts.models.Activity]
    - description: 'List of activities to execute if expression is evaluated to false.

        This is an optional property and if not provided, the activity will exit without
        any action.'
      id: if_false_activities
      type:
      - list[azure.synapse.artifacts.models.Activity]
  type: class
  uid: azure.synapse.artifacts.models.IfConditionActivity
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: list[azure.synapse.artifacts.models.ActivityDependency]
  name: list[ActivityDependency]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.synapse.artifacts.models.ActivityDependency
    name: ActivityDependency
    uid: azure.synapse.artifacts.models.ActivityDependency
  - fullName: ']'
    name: ']'
  uid: list[azure.synapse.artifacts.models.ActivityDependency]
- fullName: list[azure.synapse.artifacts.models.UserProperty]
  name: list[UserProperty]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.synapse.artifacts.models.UserProperty
    name: UserProperty
    uid: azure.synapse.artifacts.models.UserProperty
  - fullName: ']'
    name: ']'
  uid: list[azure.synapse.artifacts.models.UserProperty]
- fullName: list[azure.synapse.artifacts.models.Activity]
  name: list[Activity]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.synapse.artifacts.models.Activity
    name: Activity
    uid: azure.synapse.artifacts.models.Activity
  - fullName: ']'
    name: ']'
  uid: list[azure.synapse.artifacts.models.Activity]
- fullName: list[azure.synapse.artifacts.models.Activity]
  name: list[Activity]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.synapse.artifacts.models.Activity
    name: Activity
    uid: azure.synapse.artifacts.models.Activity
  - fullName: ']'
    name: ']'
  uid: list[azure.synapse.artifacts.models.Activity]
