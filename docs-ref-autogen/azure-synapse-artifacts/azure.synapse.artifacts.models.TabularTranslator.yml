### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.synapse.artifacts.models.TabularTranslator
  fullName: azure.synapse.artifacts.models.TabularTranslator
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.synapse.artifacts.models._models_py3.CopyTranslator
  langs:
  - python
  module: azure.synapse.artifacts.models
  name: TabularTranslator
  summary: 'A copy activity tabular translator.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'TabularTranslator(*, additional_properties: typing.Union[typing.Dict[str,
      object], NoneType] = None, column_mappings: object = None, schema_mapping: object
      = None, collection_reference: object = None, map_complex_values_to_string: object
      = None, mappings: object = None, **kwargs)'
    parameters:
    - description: 'Unmatched properties from the message are deserialized to this

        collection.'
      id: additional_properties
      type:
      - dict[str, object]
    - description: Required. Copy translator type.Constant filled by server.
      id: type
      type:
      - str
    - description: 'Column mappings. Example: "UserId: MyUserId, Group: MyGroup, Name:

        MyName" Type: string (or Expression with resultType string). This property
        will be retired.

        Please use mappings property.'
      id: column_mappings
      type:
      - object
    - description: 'The schema mapping to map between tabular data and hierarchical
        data.

        Example: {"Column1": "$.Column1", "Column2": "$.Column2.Property1", "Column3":

        "$.Column2.Property2"}. Type: object (or Expression with resultType object).
        This property will

        be retired. Please use mappings property.'
      id: schema_mapping
      type:
      - object
    - description: 'The JSON Path of the Nested Array that is going to do cross-apply.

        Type: object (or Expression with resultType object).'
      id: collection_reference
      type:
      - object
    - description: 'Whether to map complex (array and object) values to simple

        strings in json format. Type: boolean (or Expression with resultType boolean).'
      id: map_complex_values_to_string
      type:
      - object
    - description: 'Column mappings with logical types. Tabular->tabular example:

        [{"source":{"name":"CustomerName","type":"String"},"sink":{"name":"ClientName","type":"String"}},{"source":{"name":"CustomerAddress","type":"String"},"sink":{"name":"ClientAddress","type":"String"}}].

        Hierarchical->tabular example:

        [{"source":{"path":"$.CustomerName","type":"String"},"sink":{"name":"ClientName","type":"String"}},{"source":{"path":"$.CustomerAddress","type":"String"},"sink":{"name":"ClientAddress","type":"String"}}].

        Type: object (or Expression with resultType object).'
      id: mappings
      type:
      - object
  type: class
  uid: azure.synapse.artifacts.models.TabularTranslator
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
