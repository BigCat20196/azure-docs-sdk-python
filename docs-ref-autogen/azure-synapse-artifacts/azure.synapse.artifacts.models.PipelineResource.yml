### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.synapse.artifacts.models.PipelineResource
  fullName: azure.synapse.artifacts.models.PipelineResource
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: msrest.serialization.Model
      type: azure.synapse.artifacts.models._models_py3.Resource
    type: azure.synapse.artifacts.models._models_py3.AzureEntityResource
  langs:
  - python
  module: azure.synapse.artifacts.models
  name: PipelineResource
  summary: 'Pipeline resource type.


    Variables are only populated by the server, and will be ignored when sending a
    request.'
  syntax:
    content: 'PipelineResource(*, additional_properties: typing.Union[typing.Dict[str,
      object], NoneType] = None, description: typing.Union[str, NoneType] = None,
      activities: typing.Union[typing.List[_ForwardRef(''Activity'')], NoneType] =
      None, parameters: typing.Union[typing.Dict[str, _ForwardRef(''ParameterSpecification'')],
      NoneType] = None, variables: typing.Union[typing.Dict[str, _ForwardRef(''VariableSpecification'')],
      NoneType] = None, concurrency: typing.Union[int, NoneType] = None, annotations:
      typing.Union[typing.List[object], NoneType] = None, run_dimensions: typing.Union[typing.Dict[str,
      object], NoneType] = None, folder: typing.Union[_ForwardRef(''PipelineFolder''),
      NoneType] = None, **kwargs)'
    parameters:
    - description: 'Unmatched properties from the message are deserialized to this

        collection.'
      id: additional_properties
      type:
      - dict[str, object]
    - description: The description of the pipeline.
      id: description
      type:
      - str
    - description: List of activities in pipeline.
      id: activities
      type:
      - list[azure.synapse.artifacts.models.Activity]
    - description: List of parameters for pipeline.
      id: parameters
      type:
      - dict[str, azure.synapse.artifacts.models.ParameterSpecification]
    - description: List of variables for pipeline.
      id: variables
      type:
      - dict[str, azure.synapse.artifacts.models.VariableSpecification]
    - description: The max number of concurrent runs for the pipeline.
      id: concurrency
      type:
      - int
    - description: List of tags that can be used for describing the Pipeline.
      id: annotations
      type:
      - list[object]
    - description: Dimensions emitted by Pipeline.
      id: run_dimensions
      type:
      - dict[str, object]
    - description: 'The folder that this Pipeline is in. If not specified, Pipeline
        will appear at

        the root level.'
      id: folder
      type:
      - azure.synapse.artifacts.models.PipelineFolder
    variables:
    - description: 'Fully qualified resource Id for the resource. Ex -

        /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
      id: id
      type:
      - str
    - description: The name of the resource.
      id: name
      type:
      - str
    - description: 'The type of the resource. Ex- Microsoft.Compute/virtualMachines
        or

        Microsoft.Storage/storageAccounts.'
      id: type
      type:
      - str
    - description: Resource Etag.
      id: etag
      type:
      - str
  type: class
  uid: azure.synapse.artifacts.models.PipelineResource
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: list[azure.synapse.artifacts.models.Activity]
  name: list[Activity]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.synapse.artifacts.models.Activity
    name: Activity
    uid: azure.synapse.artifacts.models.Activity
  - fullName: ']'
    name: ']'
  uid: list[azure.synapse.artifacts.models.Activity]
- fullName: dict[str, azure.synapse.artifacts.models.ParameterSpecification]
  name: dict[str, ParameterSpecification]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: azure.synapse.artifacts.models.ParameterSpecification
    name: ParameterSpecification
    uid: azure.synapse.artifacts.models.ParameterSpecification
  - fullName: ']'
    name: ']'
  uid: dict[str, azure.synapse.artifacts.models.ParameterSpecification]
- fullName: dict[str, azure.synapse.artifacts.models.VariableSpecification]
  name: dict[str, VariableSpecification]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: azure.synapse.artifacts.models.VariableSpecification
    name: VariableSpecification
    uid: azure.synapse.artifacts.models.VariableSpecification
  - fullName: ']'
    name: ']'
  uid: dict[str, azure.synapse.artifacts.models.VariableSpecification]
- fullName: list[object]
  name: list[object]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: list[object]
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
