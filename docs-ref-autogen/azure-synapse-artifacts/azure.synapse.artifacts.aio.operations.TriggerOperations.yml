### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.synapse.artifacts.aio.operations.TriggerOperations.begin_create_or_update_trigger
  - azure.synapse.artifacts.aio.operations.TriggerOperations.begin_delete_trigger
  - azure.synapse.artifacts.aio.operations.TriggerOperations.begin_start_trigger
  - azure.synapse.artifacts.aio.operations.TriggerOperations.begin_stop_trigger
  - azure.synapse.artifacts.aio.operations.TriggerOperations.begin_subscribe_trigger_to_events
  - azure.synapse.artifacts.aio.operations.TriggerOperations.begin_unsubscribe_trigger_from_events
  - azure.synapse.artifacts.aio.operations.TriggerOperations.get_event_subscription_status
  - azure.synapse.artifacts.aio.operations.TriggerOperations.get_trigger
  - azure.synapse.artifacts.aio.operations.TriggerOperations.get_triggers_by_workspace
  - azure.synapse.artifacts.aio.operations.TriggerOperations.models
  class: azure.synapse.artifacts.aio.operations.TriggerOperations
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: TriggerOperations
  summary: 'TriggerOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: TriggerOperations(client, config, serializer, deserializer) -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_create_or_update_trigger
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: 'begin_create_or_update_trigger(trigger_name: str, properties: azure.synapse.artifacts.models._models_py3.Trigger,
    if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerResource'')]'
  namewithoutparameters: begin_create_or_update_trigger
  summary: Creates or updates a trigger.
  syntax:
    content: 'begin_create_or_update_trigger(trigger_name: str, properties: azure.synapse.artifacts.models._models_py3.Trigger,
      if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerResource'')]'
    parameters:
    - description: The trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: Properties of the trigger.
      id: properties
      isRequired: true
      type:
      - azure.synapse.artifacts.models.Trigger
    - description: 'ETag of the trigger entity.  Should only be specified for update,
        for which it

        should match existing entity or can be * for unconditional update.'
      id: if_match
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either TriggerResource
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.synapse.artifacts.models.TriggerResource]
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_create_or_update_trigger
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_delete_trigger
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: 'begin_delete_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_delete_trigger
  summary: Deletes a trigger.
  syntax:
    content: 'begin_delete_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_delete_trigger
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_start_trigger
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: 'begin_start_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_start_trigger
  summary: Starts a trigger.
  syntax:
    content: 'begin_start_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_start_trigger
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_stop_trigger
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: 'begin_stop_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_stop_trigger
  summary: Stops a trigger.
  syntax:
    content: 'begin_stop_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_stop_trigger
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_subscribe_trigger_to_events
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: 'begin_subscribe_trigger_to_events(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerSubscriptionOperationStatus'')]'
  namewithoutparameters: begin_subscribe_trigger_to_events
  summary: Subscribe event trigger to events.
  syntax:
    content: 'begin_subscribe_trigger_to_events(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerSubscriptionOperationStatus'')]'
    parameters:
    - description: The trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either TriggerSubscriptionOperationStatus
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.synapse.artifacts.models.TriggerSubscriptionOperationStatus]
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_subscribe_trigger_to_events
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_unsubscribe_trigger_from_events
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: 'begin_unsubscribe_trigger_from_events(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerSubscriptionOperationStatus'')]'
  namewithoutparameters: begin_unsubscribe_trigger_from_events
  summary: Unsubscribe event trigger from events.
  syntax:
    content: 'begin_unsubscribe_trigger_from_events(trigger_name: str, **kwargs) ->
      azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerSubscriptionOperationStatus'')]'
    parameters:
    - description: The trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either TriggerSubscriptionOperationStatus
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.synapse.artifacts.models.TriggerSubscriptionOperationStatus]
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_unsubscribe_trigger_from_events
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.get_event_subscription_status
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: 'get_event_subscription_status(trigger_name: str, **kwargs) -> azure.synapse.artifacts.models._models_py3.TriggerSubscriptionOperationStatus'
  namewithoutparameters: get_event_subscription_status
  summary: Get a trigger's event subscription status.
  syntax:
    content: 'get_event_subscription_status(trigger_name: str, **kwargs) -> azure.synapse.artifacts.models._models_py3.TriggerSubscriptionOperationStatus'
    parameters:
    - description: The trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: TriggerSubscriptionOperationStatus, or the result of cls(response)
      type:
      - azure.synapse.artifacts.models.TriggerSubscriptionOperationStatus
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.get_event_subscription_status
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.get_trigger
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: 'get_trigger(trigger_name: str, if_none_match: typing.Union[str, NoneType]
    = None, **kwargs) -> typing.Union[_ForwardRef(''models.TriggerResource''), NoneType]'
  namewithoutparameters: get_trigger
  summary: Gets a trigger.
  syntax:
    content: 'get_trigger(trigger_name: str, if_none_match: typing.Union[str, NoneType]
      = None, **kwargs) -> typing.Union[_ForwardRef(''models.TriggerResource''), NoneType]'
    parameters:
    - description: The trigger name.
      id: trigger_name
      isRequired: true
      type:
      - str
    - description: 'ETag of the trigger entity. Should only be specified for get.
        If the ETag

        matches the existing entity tag, or if * was provided, then no content will
        be returned.'
      id: if_none_match
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: TriggerResource, or the result of cls(response)
      type:
      - azure.synapse.artifacts.models.TriggerResource
      - None
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.get_trigger
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.get_triggers_by_workspace
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: get_triggers_by_workspace(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.TriggerListResponse')]
  namewithoutparameters: get_triggers_by_workspace
  summary: Lists triggers.
  syntax:
    content: get_triggers_by_workspace(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.TriggerListResponse')]
    parameters:
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either TriggerListResponse or the
        result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.synapse.artifacts.models.TriggerListResponse]
  type: method
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.get_triggers_by_workspace
- class: azure.synapse.artifacts.aio.operations.TriggerOperations
  fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.models
  langs:
  - python
  module: azure.synapse.artifacts.aio.operations
  name: models
  syntax:
    content: models = <module 'azure.synapse.artifacts.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\synapse\\artifacts\\models\\__init__.py'>
  type: attribute
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.models
references:
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_create_or_update_trigger
  isExternal: false
  name: 'begin_create_or_update_trigger(trigger_name: str, properties: azure.synapse.artifacts.models._models_py3.Trigger,
    if_match: typing.Union[str, NoneType] = None, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerResource'')]'
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_create_or_update_trigger
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_delete_trigger
  isExternal: false
  name: 'begin_delete_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_delete_trigger
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_start_trigger
  isExternal: false
  name: 'begin_start_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_start_trigger
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_stop_trigger
  isExternal: false
  name: 'begin_stop_trigger(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_stop_trigger
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_subscribe_trigger_to_events
  isExternal: false
  name: 'begin_subscribe_trigger_to_events(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerSubscriptionOperationStatus'')]'
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_subscribe_trigger_to_events
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_unsubscribe_trigger_from_events
  isExternal: false
  name: 'begin_unsubscribe_trigger_from_events(trigger_name: str, **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[_ForwardRef(''models.TriggerSubscriptionOperationStatus'')]'
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.begin_unsubscribe_trigger_from_events
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.get_event_subscription_status
  isExternal: false
  name: 'get_event_subscription_status(trigger_name: str, **kwargs) -> azure.synapse.artifacts.models._models_py3.TriggerSubscriptionOperationStatus'
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.get_event_subscription_status
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.get_trigger
  isExternal: false
  name: 'get_trigger(trigger_name: str, if_none_match: typing.Union[str, NoneType]
    = None, **kwargs) -> typing.Union[_ForwardRef(''models.TriggerResource''), NoneType]'
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.get_trigger
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.get_triggers_by_workspace
  isExternal: false
  name: get_triggers_by_workspace(**kwargs) -> typing.AsyncIterable[_ForwardRef('models.TriggerListResponse')]
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.get_triggers_by_workspace
- fullName: azure.synapse.artifacts.aio.operations.TriggerOperations.models
  isExternal: false
  name: models
  parent: azure.synapse.artifacts.aio.operations.TriggerOperations
  uid: azure.synapse.artifacts.aio.operations.TriggerOperations.models
- fullName: azure.core.polling.AsyncLROPoller[azure.synapse.artifacts.models.TriggerResource]
  name: AsyncLROPoller[TriggerResource]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.synapse.artifacts.models.TriggerResource
    name: TriggerResource
    uid: azure.synapse.artifacts.models.TriggerResource
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.synapse.artifacts.models.TriggerResource]
- fullName: azure.core.polling.AsyncLROPoller[None]
  name: AsyncLROPoller[None]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[None]
- fullName: azure.core.polling.AsyncLROPoller[azure.synapse.artifacts.models.TriggerSubscriptionOperationStatus]
  name: AsyncLROPoller[TriggerSubscriptionOperationStatus]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.synapse.artifacts.models.TriggerSubscriptionOperationStatus
    name: TriggerSubscriptionOperationStatus
    uid: azure.synapse.artifacts.models.TriggerSubscriptionOperationStatus
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.synapse.artifacts.models.TriggerSubscriptionOperationStatus]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.synapse.artifacts.models.TriggerListResponse]
  name: AsyncItemPaged[TriggerListResponse]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.synapse.artifacts.models.TriggerListResponse
    name: TriggerListResponse
    uid: azure.synapse.artifacts.models.TriggerListResponse
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.synapse.artifacts.models.TriggerListResponse]
