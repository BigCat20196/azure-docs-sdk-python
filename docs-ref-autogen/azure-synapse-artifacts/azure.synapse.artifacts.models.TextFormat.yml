### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.synapse.artifacts.models.TextFormat
  fullName: azure.synapse.artifacts.models.TextFormat
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.synapse.artifacts.models._models_py3.DatasetStorageFormat
  langs:
  - python
  module: azure.synapse.artifacts.models
  name: TextFormat
  summary: 'The data stored in text format.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'TextFormat(*, additional_properties: typing.Union[typing.Dict[str, object],
      NoneType] = None, serializer: object = None, deserializer: object = None, column_delimiter:
      object = None, row_delimiter: object = None, escape_char: object = None, quote_char:
      object = None, null_value: object = None, encoding_name: object = None, treat_empty_as_null:
      object = None, skip_line_count: object = None, first_row_as_header: object =
      None, **kwargs)'
    parameters:
    - description: 'Unmatched properties from the message are deserialized to this

        collection.'
      id: additional_properties
      type:
      - dict[str, object]
    - description: Required. Type of dataset storage format.Constant filled by server.
      id: type
      type:
      - str
    - description: 'Serializer. Type: string (or Expression with resultType string).'
      id: serializer
      type:
      - object
    - description: 'Deserializer. Type: string (or Expression with resultType string).'
      id: deserializer
      type:
      - object
    - description: 'The column delimiter. Type: string (or Expression with resultType

        string).'
      id: column_delimiter
      type:
      - object
    - description: 'The row delimiter. Type: string (or Expression with resultType
        string).'
      id: row_delimiter
      type:
      - object
    - description: 'The escape character. Type: string (or Expression with resultType
        string).'
      id: escape_char
      type:
      - object
    - description: 'The quote character. Type: string (or Expression with resultType
        string).'
      id: quote_char
      type:
      - object
    - description: 'The null value string. Type: string (or Expression with resultType
        string).'
      id: null_value
      type:
      - object
    - description: "The code page name of the preferred encoding. If miss, the default\
        \ value\nis \u0393\xC7\xA3utf-8\u0393\xC7\xA5, unless BOM denotes another\
        \ Unicode encoding. Refer to the \u0393\xC7\xA3Name\u0393\xC7\xA5 column of\n\
        the table in the following link to set supported values:\n[https://msdn.microsoft.com/library/system.text.encoding.aspx](https://msdn.microsoft.com/library/system.text.encoding.aspx).\
        \ Type: string (or Expression with\nresultType string)."
      id: encoding_name
      type:
      - object
    - description: 'Treat empty column values in the text file as null. The default

        value is true. Type: boolean (or Expression with resultType boolean).'
      id: treat_empty_as_null
      type:
      - object
    - description: 'The number of lines/rows to be skipped when parsing text files.
        The

        default value is 0. Type: integer (or Expression with resultType integer).'
      id: skip_line_count
      type:
      - object
    - description: 'When used as input, treat the first row of data as headers. When

        used as output,write the headers into the output as the first row of data.
        The default value is

        false. Type: boolean (or Expression with resultType boolean).'
      id: first_row_as_header
      type:
      - object
  type: class
  uid: azure.synapse.artifacts.models.TextFormat
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
