### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.synapse.artifacts.models.Dataset
  fullName: azure.synapse.artifacts.models.Dataset
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.synapse.artifacts.models
  name: Dataset
  summary: 'The Azure Data Factory nested object which identifies data within different
    data stores, such as tables, files, folders, and documents.


    You probably want to use the sub-classes and not this class directly. Known

    sub-classes are: AmazonMWSObjectDataset, AmazonRedshiftTableDataset, AvroDataset,
    AzureDataExplorerTableDataset, AzureMariaDBTableDataset, AzureMySqlTableDataset,
    AzurePostgreSqlTableDataset, AzureSearchIndexDataset, AzureSqlDWTableDataset,
    AzureSqlMITableDataset, AzureSqlTableDataset, AzureTableDataset, BinaryDataset,
    CassandraTableDataset, CommonDataServiceForAppsEntityDataset, ConcurObjectDataset,
    CosmosDbMongoDbApiCollectionDataset, CosmosDbSqlApiCollectionDataset, CouchbaseTableDataset,
    CustomDataset, Db2TableDataset, DelimitedTextDataset, DocumentDbCollectionDataset,
    DrillTableDataset, DynamicsAXResourceDataset, DynamicsCrmEntityDataset, DynamicsEntityDataset,
    EloquaObjectDataset, GoogleAdWordsObjectDataset, GoogleBigQueryObjectDataset,
    GreenplumTableDataset, HBaseObjectDataset, HiveObjectDataset, HubspotObjectDataset,
    ImpalaObjectDataset, InformixTableDataset, JiraObjectDataset, JsonDataset, MagentoObjectDataset,
    MariaDBTableDataset, MarketoObjectDataset, MicrosoftAccessTableDataset, MongoDbCollectionDataset,
    MongoDbV2CollectionDataset, MySqlTableDataset, NetezzaTableDataset, ODataResourceDataset,
    OdbcTableDataset, Office365Dataset, OracleServiceCloudObjectDataset, OracleTableDataset,
    OrcDataset, ParquetDataset, PaypalObjectDataset, PhoenixObjectDataset, PostgreSqlTableDataset,
    PrestoObjectDataset, QuickBooksObjectDataset, RelationalTableDataset, ResponsysObjectDataset,
    RestResourceDataset, SalesforceMarketingCloudObjectDataset, SalesforceObjectDataset,
    SalesforceServiceCloudObjectDataset, SapBwCubeDataset, SapCloudForCustomerResourceDataset,
    SapEccResourceDataset, SapHanaTableDataset, SapOpenHubTableDataset, SapTableResourceDataset,
    ServiceNowObjectDataset, ShopifyObjectDataset, SparkObjectDataset, SqlServerTableDataset,
    SquareObjectDataset, SybaseTableDataset, TeradataTableDataset, VerticaTableDataset,
    WebTableDataset, XeroObjectDataset, ZohoObjectDataset.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'Dataset(*, linked_service_name: azure.synapse.artifacts.models._models_py3.LinkedServiceReference,
      additional_properties: typing.Union[typing.Dict[str, object], NoneType] = None,
      description: typing.Union[str, NoneType] = None, structure: object = None, schema:
      object = None, parameters: typing.Union[typing.Dict[str, _ForwardRef(''ParameterSpecification'')],
      NoneType] = None, annotations: typing.Union[typing.List[object], NoneType] =
      None, folder: typing.Union[_ForwardRef(''DatasetFolder''), NoneType] = None,
      **kwargs)'
    parameters:
    - description: 'Unmatched properties from the message are deserialized to this

        collection.'
      id: additional_properties
      type:
      - dict[str, object]
    - description: Required. Type of dataset.Constant filled by server.
      id: type
      type:
      - str
    - description: Dataset description.
      id: description
      type:
      - str
    - description: 'Columns that define the structure of the dataset. Type: array
        (or Expression

        with resultType array), itemType: DatasetDataElement.'
      id: structure
      type:
      - object
    - description: 'Columns that define the physical type schema of the dataset. Type:
        array (or

        Expression with resultType array), itemType: DatasetSchemaDataElement.'
      id: schema
      type:
      - object
    - description: Required. Linked service reference.
      id: linked_service_name
      type:
      - azure.synapse.artifacts.models.LinkedServiceReference
    - description: Parameters for dataset.
      id: parameters
      type:
      - dict[str, azure.synapse.artifacts.models.ParameterSpecification]
    - description: List of tags that can be used for describing the Dataset.
      id: annotations
      type:
      - list[object]
    - description: 'The folder that this Dataset is in. If not specified, Dataset
        will appear at the

        root level.'
      id: folder
      type:
      - azure.synapse.artifacts.models.DatasetFolder
  type: class
  uid: azure.synapse.artifacts.models.Dataset
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
- fullName: dict[str, azure.synapse.artifacts.models.ParameterSpecification]
  name: dict[str, ParameterSpecification]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: azure.synapse.artifacts.models.ParameterSpecification
    name: ParameterSpecification
    uid: azure.synapse.artifacts.models.ParameterSpecification
  - fullName: ']'
    name: ']'
  uid: dict[str, azure.synapse.artifacts.models.ParameterSpecification]
- fullName: list[object]
  name: list[object]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: list[object]
