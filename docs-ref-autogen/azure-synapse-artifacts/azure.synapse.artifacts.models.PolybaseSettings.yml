### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.synapse.artifacts.models.PolybaseSettings
  fullName: azure.synapse.artifacts.models.PolybaseSettings
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.synapse.artifacts.models
  name: PolybaseSettings
  summary: PolyBase settings.
  syntax:
    content: 'PolybaseSettings(*, additional_properties: typing.Union[typing.Dict[str,
      object], NoneType] = None, reject_type: typing.Union[str, _ForwardRef(''PolybaseSettingsRejectType''),
      NoneType] = None, reject_value: object = None, reject_sample_value: object =
      None, use_type_default: object = None, **kwargs)'
    parameters:
    - description: 'Unmatched properties from the message are deserialized to this

        collection.'
      id: additional_properties
      type:
      - dict[str, object]
    - description: 'Reject type. Possible values include: "value", "percentage".'
      id: reject_type
      type:
      - str
      - azure.synapse.artifacts.models.PolybaseSettingsRejectType
    - description: 'Specifies the value or the percentage of rows that can be rejected
        before

        the query fails. Type: number (or Expression with resultType number), minimum:
        0.'
      id: reject_value
      type:
      - object
    - description: 'Determines the number of rows to attempt to retrieve before the

        PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression
        with

        resultType integer), minimum: 0.'
      id: reject_sample_value
      type:
      - object
    - description: 'Specifies how to handle missing values in delimited text files
        when

        PolyBase retrieves data from the text file. Type: boolean (or Expression with
        resultType

        boolean).'
      id: use_type_default
      type:
      - object
  type: class
  uid: azure.synapse.artifacts.models.PolybaseSettings
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
