### YamlMime:PythonClass
uid: azure.servicebus.aio.async_client.ServiceBusClient
name: ServiceBusClient
fullName: azure.servicebus.aio.async_client.ServiceBusClient
module: azure.servicebus.aio.async_client
inheritances:
- azure.servicebus.common.mixins.ServiceBusMixin
summary: A Service Bus client for a namespace with the specified SAS authentication
  settings.
constructor:
  syntax: ServiceBusClient(*, service_namespace=None, host_base='.servicebus.windows.net',
    shared_access_key_name=None, shared_access_key_value=None, loop=None, http_request_timeout=65,
    http_request_session=None, debug=False)
  parameters:
  - name: service_namespace
    description: Service Bus namespace, required for all operations.
    types:
    - <xref:str>
  - name: host_base
    description: Optional. Live host base URL. Defaults to Azure URL.
    types:
    - <xref:str>
  - name: shared_access_key_name
    description: SAS authentication key name.
    types:
    - <xref:str>
  - name: shared_access_key_value
    description: SAS authentication key value.
    types:
    - <xref:str>
  - name: loop
    description: An async event loop.
  - name: http_request_timeout
    description: Optional. Timeout for the HTTP request, in seconds.
    types:
    - <xref:int>
  - name: http_request_session
    description: Optional. Session object to use for HTTP requests.
  - name: debug
    description: Whether to output AMQP network trace to the logger.
    types:
    - <xref:bool>
methods:
- uid: azure.servicebus.aio.async_client.ServiceBusClient.from_connection_string
  name: from_connection_string
  summary: Create a Service Bus client from a connection string.
  signature: from_connection_string(conn_str, *, loop=None, **kwargs)
  parameters:
  - name: conn_str
    description: The connection string.
    isRequired: true
    types:
    - <xref:str>
  - name: conn_str
    isRequired: true
- uid: azure.servicebus.aio.async_client.ServiceBusClient.get_queue
  name: get_queue
  summary: Get an async client for a queue entity.
  signature: get_queue(queue_name)
  parameters:
  - name: queue_name
    description: The name of the queue.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.servicebus.aio.async_client.QueueClient>
- uid: azure.servicebus.aio.async_client.ServiceBusClient.get_subscription
  name: get_subscription
  summary: Get an async client for a subscription entity.
  signature: get_subscription(topic_name, subscription_name)
  parameters:
  - name: topic_name
    description: The name of the topic.
    isRequired: true
    types:
    - <xref:str>
  - name: subscription_name
    description: The name of the subscription.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.servicebus.aio.async_client.SubscriptionClient>
- uid: azure.servicebus.aio.async_client.ServiceBusClient.get_topic
  name: get_topic
  summary: Get an async client for a topic entity.
  signature: get_topic(topic_name)
  parameters:
  - name: topic_name
    description: The name of the topic.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.servicebus.aio.async_client.TopicClient>
- uid: azure.servicebus.aio.async_client.ServiceBusClient.list_queues
  name: list_queues
  summary: Get async clients for all queue entities in the namespace.
  signature: list_queues()
  return:
    types:
    - <xref:list>[<xref:azure.servicebus.aio.async_client.QueueClient>]
- uid: azure.servicebus.aio.async_client.ServiceBusClient.list_subscriptions
  name: list_subscriptions
  summary: Get an async client for all subscription entities in the topic.
  signature: list_subscriptions(topic_name)
  parameters:
  - name: topic_name
    description: The topic to list subscriptions for.
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:list>[<xref:azure.servicebus.aio.async_client.SubscriptionClient>]
- uid: azure.servicebus.aio.async_client.ServiceBusClient.list_topics
  name: list_topics
  summary: Get an async client for all topic entities in the namespace.
  signature: list_topics()
  return:
    types:
    - <xref:list>[<xref:azure.servicebus.aio.async_client.TopicClient>]
