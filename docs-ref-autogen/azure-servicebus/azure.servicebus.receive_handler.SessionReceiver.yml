### YamlMime:PythonClass
uid: azure.servicebus.receive_handler.SessionReceiver
name: SessionReceiver
fullName: azure.servicebus.receive_handler.SessionReceiver
module: azure.servicebus.receive_handler
inheritances:
- azure.servicebus.receive_handler.Receiver
- azure.servicebus.common.mixins.SessionMixin
summary: 'A session message receiver.


  This receive handler acts as an iterable message stream for retrieving

  messages for a sessionful Service Bus entity. It operates a single connection that
  must be opened and

  closed on completion. The service connection will remain open for the entirety of
  the iterator.

  If you find yourself only partially iterating the message stream, you should run
  the receiver

  in a *with* statement to ensure the connection is closed.

  The Receiver should not be instantiated directly, and should be accessed from a
  *QueueClient* or

  *SubscriptionClient* using the *get_receiver()* method.

  When receiving messages from a session, connection errors that would normally be
  automatically

  retried will instead raise an error due to the loss of the lock on a particular
  session.

  A specific session can be specified, or the receiver can retrieve any available
  session using

  the *NEXT_AVAILABLE* constant.



  > [!NOTE]

  > This object is not thread-safe.

  >'
constructor:
  syntax: SessionReceiver(handler_id, source, auth_config, session=None, connection=None,
    encoding='UTF-8', debug=False, **kwargs)
  parameters:
  - name: handler_id
    description: The ID used as the connection name for the Receiver.
    types:
    - <xref:str>
  - name: source
    description: The endpoint from which to receive messages.
    types:
    - <xref:uamqp.Source>
  - name: auth_config
    description: The SASL auth credentials.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: session
    description: The ID of the session to receive from.
    types:
    - <xref:str>
    - <xref:azure.servicebus.common.constants.NEXT_AVAILABLE>
  - name: loop
    description: An async event loop
    types:
    - <xref:asyncio.EventLoop>
  - name: connection
    description: A shared connection [not yet supported].
    types:
    - <xref:uamqp.Connection>
  - name: mode
    description: The receive connection mode. Value must be either PeekLock or ReceiveAndDelete.
    types:
    - <xref:azure.servicebus.common.constants.ReceiveSettleMode>
  - name: encoding
    description: The encoding used for string properties. Default is 'UTF-8'.
    types:
    - <xref:str>
  - name: debug
    description: Whether to enable network trace debug logs.
    types:
    - <xref:bool>
methods:
- uid: azure.servicebus.receive_handler.SessionReceiver.get_session_state
  name: get_session_state
  summary: 'Get the session state.


    Returns None if no state has been set.'
  signature: get_session_state()
  return:
    types:
    - <xref:str>
- uid: azure.servicebus.receive_handler.SessionReceiver.list_sessions
  name: list_sessions
  summary: 'List session IDs.


    List the Session IDs with pending messages in the queue where the state of the
    session

    has been updated since the timestamp provided. If no timestamp is provided, all
    will be returned.

    If the state of a Session has never been set, it will not be returned regardless
    of whether

    there are messages pending.'
  signature: list_sessions(updated_since=None, max_results=100, skip=0)
  parameters:
  - name: updated_since
    description: The UTC datetime from which to return updated pending Session IDs.
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: The maximum number of Session IDs to return. Default value is 100.
    defaultValue: '100'
    types:
    - <xref:int>
  - name: skip
    description: The page value to jump to. Default value is 0.
    defaultValue: '0'
    types:
    - <xref:int>
  return:
    types:
    - <xref:list>[<xref:str>]
- uid: azure.servicebus.receive_handler.SessionReceiver.peek
  name: peek
  summary: 'Browse messages currently pending in the queue.


    Peeked messages are not removed from queue, nor are they locked. They cannot be
    completed,

    deferred or dead-lettered.

    This operation will only peek pending messages in the current session.'
  signature: peek(count=1, start_from=None)
  parameters:
  - name: count
    description: 'The maximum number of messages to try and peek. The default

      value is 1.'
    defaultValue: '1'
    types:
    - <xref:int>
  - name: start_from
    description: A message sequence number from which to start browsing messages.
    defaultValue: None
    types:
    - <xref:int>
  return:
    types:
    - <xref:list>[<xref:azure.servicebus.common.message.PeekMessage>]
- uid: azure.servicebus.receive_handler.SessionReceiver.receive_deferred_messages
  name: receive_deferred_messages
  summary: 'Receive messages that have previously been deferred.


    This operation can only receive deferred messages from the current session.

    When receiving deferred messages from a partitioned entity, all of the supplied

    sequence numbers must be messages from the same partition.'
  signature: 'receive_deferred_messages(sequence_numbers, mode=<ReceiveSettleMode.PeekLock:
    <ReceiverSettleMode.PeekLock: 1>>)'
  parameters:
  - name: sequence_numbers
    description: 'A list of the sequence numbers of messages that have been

      deferred.'
    isRequired: true
    types:
    - <xref:list>[<xref:int>]
  - name: mode
    description: The receive mode, default value is PeekLock.
    defaultValue: ReceiveSettleMode.PeekLock
    types:
    - <xref:azure.servicebus.common.constants.ReceiveSettleMode>
  return:
    types:
    - <xref:list>[<xref:azure.servicebus.common.message.DeferredMessage>]
- uid: azure.servicebus.receive_handler.SessionReceiver.renew_lock
  name: renew_lock
  summary: 'Renew the session lock.


    This operation must be performed periodically in order to retain a lock on the

    session to continue message processing.

    Once the lock is lost the connection will be closed. This operation can

    also be performed as a threaded background task by registering the session

    with an *azure.servicebus.AutoLockRenew* instance.'
  signature: renew_lock()
- uid: azure.servicebus.receive_handler.SessionReceiver.set_session_state
  name: set_session_state
  summary: Set the session state.
  signature: set_session_state(state)
  parameters:
  - name: state
    description: The state value.
    isRequired: true
    types:
    - <xref:str>, <xref:bytes>
    - <xref:bytearray>
