### YamlMime:PythonClass
uid: azure.servicebus.aio.async_utils.AutoLockRenew
name: AutoLockRenew
fullName: azure.servicebus.aio.async_utils.AutoLockRenew
module: azure.servicebus.aio.async_utils
inheritances:
- builtins.object
summary: 'Auto lock renew.


  An asynchronous AutoLockRenew handler for renewing the lock

  tokens of messages and/or sessions in the background.'
constructor:
  syntax: AutoLockRenew(loop=None)
  parameters:
  - name: loop
    description: An async event loop.
    types:
    - <xref:asyncio.EventLoop>
methods:
- uid: azure.servicebus.aio.async_utils.AutoLockRenew.register
  name: register
  summary: Register a renewable entity for automatic lock renewal.
  signature: register(renewable, timeout=300)
  parameters:
  - name: renewable
    description: A locked entity that needs to be renewed.
    isRequired: true
    types:
    - <xref:azure.servicebus.aio.async_message.Message>
    - <xref:azure.servicebus.aio.async_receive_handler.SessionReceiver>
  - name: timeout
    description: 'A time in seconds that the lock should be maintained for.

      Default value is 300 (5 minutes).'
    defaultValue: '300'
    types:
    - <xref:int>
- uid: azure.servicebus.aio.async_utils.AutoLockRenew.shutdown
  name: shutdown
  summary: Cancel remaining open lock renewal futures.
  signature: shutdown()
