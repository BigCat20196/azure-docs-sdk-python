### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_check_connectivity
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_delete
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_azure_reachability_report
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_flow_log_status
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_network_configuration_diagnostic
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_next_hop
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting_result
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_vm_security_rules
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_list_available_providers
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_set_flow_log_configuration
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_verify_ip_flow
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.create_or_update
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get_topology
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list_all
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.update_tags
  - azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.models
  class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: NetworkWatchersOperations
  summary: 'NetworkWatchersOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: NetworkWatchersOperations(client, config, serializer, deserializer) ->
      None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_check_connectivity
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_check_connectivity(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.ConnectivityParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.ConnectivityInformation'')]'
  namewithoutparameters: begin_check_connectivity
  summary: 'Verifies the possibility of establishing a direct TCP connection from
    a virtual machine to a

    given endpoint including another VM or an arbitrary remote server.'
  syntax:
    content: 'begin_check_connectivity(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.ConnectivityParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.ConnectivityInformation'')]'
    parameters:
    - description: The name of the network watcher resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that determine how the connectivity check will be performed.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.ConnectivityParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either ConnectivityInformation
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.ConnectivityInformation]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_check_connectivity
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_delete(resource_group_name: str, network_watcher_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  namewithoutparameters: begin_delete
  summary: Deletes the specified network watcher resource.
  syntax:
    content: 'begin_delete(resource_group_name: str, network_watcher_name: str, **kwargs)
      -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either None or the result
        of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[None]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_delete
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_azure_reachability_report
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_get_azure_reachability_report(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.AzureReachabilityReportParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.AzureReachabilityReport'')]'
  namewithoutparameters: begin_get_azure_reachability_report
  summary: 'NOTE: This feature is currently in preview and still being tested for
    stability. Gets the

    relative latency score for internet service providers from a specified location
    to Azure

    regions.'
  syntax:
    content: 'begin_get_azure_reachability_report(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.AzureReachabilityReportParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.AzureReachabilityReport'')]'
    parameters:
    - description: The name of the network watcher resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that determine Azure reachability report configuration.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.AzureReachabilityReportParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either AzureReachabilityReport
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.AzureReachabilityReport]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_azure_reachability_report
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_flow_log_status
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_get_flow_log_status(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.FlowLogStatusParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.FlowLogInformation'')]'
  namewithoutparameters: begin_get_flow_log_status
  summary: Queries status of flow log and traffic analytics (optional) on a specified
    resource.
  syntax:
    content: 'begin_get_flow_log_status(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.FlowLogStatusParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.FlowLogInformation'')]'
    parameters:
    - description: The name of the network watcher resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: 'Parameters that define a resource to query flow log and traffic
        analytics

        (optional) status.'
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.FlowLogStatusParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either FlowLogInformation
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.FlowLogInformation]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_flow_log_status
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_network_configuration_diagnostic
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_get_network_configuration_diagnostic(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.NetworkConfigurationDiagnosticParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.NetworkConfigurationDiagnosticResponse'')]'
  namewithoutparameters: begin_get_network_configuration_diagnostic
  summary: 'Gets Network Configuration Diagnostic data to help customers understand
    and debug network

    behavior. It provides detailed information on what security rules were applied
    to a specified

    traffic flow and the result of evaluating these rules. Customers must provide
    details of a flow

    like source, destination, protocol, etc. The API returns whether traffic was allowed
    or denied,

    the rules evaluated for the specified flow and the evaluation results.'
  syntax:
    content: 'begin_get_network_configuration_diagnostic(resource_group_name: str,
      network_watcher_name: str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.NetworkConfigurationDiagnosticParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.NetworkConfigurationDiagnosticResponse'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters to get network configuration diagnostic.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.NetworkConfigurationDiagnosticParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either NetworkConfigurationDiagnosticResponse
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.NetworkConfigurationDiagnosticResponse]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_network_configuration_diagnostic
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_next_hop
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_get_next_hop(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2019_12_01.models._models_py3.NextHopParameters, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.NextHopResult'')]'
  namewithoutparameters: begin_get_next_hop
  summary: Gets the next hop from the specified VM.
  syntax:
    content: 'begin_get_next_hop(resource_group_name: str, network_watcher_name: str,
      parameters: azure.mgmt.network.v2019_12_01.models._models_py3.NextHopParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.NextHopResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the source and destination endpoint.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.NextHopParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either NextHopResult
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.NextHopResult]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_next_hop
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_get_troubleshooting(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.TroubleshootingParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.TroubleshootingResult'')]'
  namewithoutparameters: begin_get_troubleshooting
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: 'begin_get_troubleshooting(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.TroubleshootingParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.TroubleshootingResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the resource to troubleshoot.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.TroubleshootingParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either TroubleshootingResult
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.TroubleshootingResult]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting_result
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_get_troubleshooting_result(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.QueryTroubleshootingParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.TroubleshootingResult'')]'
  namewithoutparameters: begin_get_troubleshooting_result
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: 'begin_get_troubleshooting_result(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.QueryTroubleshootingParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.TroubleshootingResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the resource to query the troubleshooting
        result.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.QueryTroubleshootingParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either TroubleshootingResult
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.TroubleshootingResult]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting_result
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_vm_security_rules
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_get_vm_security_rules(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.SecurityGroupViewParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.SecurityGroupViewResult'')]'
  namewithoutparameters: begin_get_vm_security_rules
  summary: Gets the configured and effective security group rules on the specified
    VM.
  syntax:
    content: 'begin_get_vm_security_rules(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.SecurityGroupViewParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.SecurityGroupViewResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the VM to check security groups for.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.SecurityGroupViewParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either SecurityGroupViewResult
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.SecurityGroupViewResult]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_vm_security_rules
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_list_available_providers
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_list_available_providers(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.AvailableProvidersListParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.AvailableProvidersList'')]'
  namewithoutparameters: begin_list_available_providers
  summary: 'NOTE: This feature is currently in preview and still being tested for
    stability. Lists all

    available internet service providers for a specified Azure region.'
  syntax:
    content: 'begin_list_available_providers(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.AvailableProvidersListParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.AvailableProvidersList'')]'
    parameters:
    - description: The name of the network watcher resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that scope the list of available providers.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.AvailableProvidersListParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either AvailableProvidersList
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.AvailableProvidersList]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_list_available_providers
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_set_flow_log_configuration
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_set_flow_log_configuration(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.FlowLogInformation,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.FlowLogInformation'')]'
  namewithoutparameters: begin_set_flow_log_configuration
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: 'begin_set_flow_log_configuration(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.FlowLogInformation,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.FlowLogInformation'')]'
    parameters:
    - description: The name of the network watcher resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the configuration of flow log.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.FlowLogInformation
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either FlowLogInformation
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.FlowLogInformation]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_set_flow_log_configuration
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_verify_ip_flow
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'begin_verify_ip_flow(resource_group_name: str, network_watcher_name: str,
    parameters: azure.mgmt.network.v2019_12_01.models._models_py3.VerificationIPFlowParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VerificationIPFlowResult'')]'
  namewithoutparameters: begin_verify_ip_flow
  summary: Verify IP flow from the specified VM to a location given the currently
    configured NSG rules.
  syntax:
    content: 'begin_verify_ip_flow(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.VerificationIPFlowParameters,
      **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VerificationIPFlowResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the IP flow to be verified.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.VerificationIPFlowParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: An instance of AsyncLROPoller that returns either VerificationIPFlowResult
        or the result of cls(response)
      type:
      - azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.VerificationIPFlowResult]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_verify_ip_flow
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'create_or_update(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher, **kwargs) ->
    azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
  namewithoutparameters: create_or_update
  summary: Creates or updates a network watcher in the specified resource group.
  syntax:
    content: 'create_or_update(resource_group_name: str, network_watcher_name: str,
      parameters: azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher,
      **kwargs) -> azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the network watcher resource.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.NetworkWatcher
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: NetworkWatcher, or the result of cls(response)
      type:
      - azure.mgmt.network.v2019_12_01.models.NetworkWatcher
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.create_or_update
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'get(resource_group_name: str, network_watcher_name: str, **kwargs) -> azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
  namewithoutparameters: get
  summary: Gets the specified network watcher by resource group.
  syntax:
    content: 'get(resource_group_name: str, network_watcher_name: str, **kwargs) ->
      azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: NetworkWatcher, or the result of cls(response)
      type:
      - azure.mgmt.network.v2019_12_01.models.NetworkWatcher
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get_topology
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'get_topology(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2019_12_01.models._models_py3.TopologyParameters, **kwargs)
    -> azure.mgmt.network.v2019_12_01.models._models_py3.Topology'
  namewithoutparameters: get_topology
  summary: Gets the current network topology by resource group.
  syntax:
    content: 'get_topology(resource_group_name: str, network_watcher_name: str, parameters:
      azure.mgmt.network.v2019_12_01.models._models_py3.TopologyParameters, **kwargs)
      -> azure.mgmt.network.v2019_12_01.models._models_py3.Topology'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the representation of topology.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.TopologyParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Topology, or the result of cls(response)
      type:
      - azure.mgmt.network.v2019_12_01.models.Topology
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get_topology
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.NetworkWatcherListResult'')]'
  namewithoutparameters: list
  summary: Gets all network watchers by resource group.
  syntax:
    content: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.NetworkWatcherListResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either NetworkWatcherListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2019_12_01.models.NetworkWatcherListResult]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list_all
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.NetworkWatcherListResult')]
  namewithoutparameters: list_all
  summary: Gets all network watchers by subscription.
  syntax:
    content: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.NetworkWatcherListResult')]
    parameters:
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either NetworkWatcherListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2019_12_01.models.NetworkWatcherListResult]
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list_all
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.update_tags
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: 'update_tags(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2019_12_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
  namewithoutparameters: update_tags
  summary: Updates a network watcher tags.
  syntax:
    content: 'update_tags(resource_group_name: str, network_watcher_name: str, parameters:
      azure.mgmt.network.v2019_12_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to update network watcher tags.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2019_12_01.models.TagsObject
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: NetworkWatcher, or the result of cls(response)
      type:
      - azure.mgmt.network.v2019_12_01.models.NetworkWatcher
  type: method
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.update_tags
- class: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.models
  langs:
  - python
  module: azure.mgmt.network.v2019_12_01.aio.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.network.v2019_12_01.models' from 'c:\\repo\\venv\\lib\\site-packages\\azure\\mgmt\\network\\v2019_12_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.models
references:
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_check_connectivity
  isExternal: false
  name: 'begin_check_connectivity(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.ConnectivityParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.ConnectivityInformation'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_check_connectivity
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, network_watcher_name: str, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[NoneType]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_delete
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_azure_reachability_report
  isExternal: false
  name: 'begin_get_azure_reachability_report(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.AzureReachabilityReportParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.AzureReachabilityReport'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_azure_reachability_report
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_flow_log_status
  isExternal: false
  name: 'begin_get_flow_log_status(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.FlowLogStatusParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.FlowLogInformation'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_flow_log_status
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_network_configuration_diagnostic
  isExternal: false
  name: 'begin_get_network_configuration_diagnostic(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.NetworkConfigurationDiagnosticParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.NetworkConfigurationDiagnosticResponse'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_network_configuration_diagnostic
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_next_hop
  isExternal: false
  name: 'begin_get_next_hop(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2019_12_01.models._models_py3.NextHopParameters, **kwargs)
    -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.NextHopResult'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_next_hop
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting
  isExternal: false
  name: 'begin_get_troubleshooting(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.TroubleshootingParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.TroubleshootingResult'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting_result
  isExternal: false
  name: 'begin_get_troubleshooting_result(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.QueryTroubleshootingParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.TroubleshootingResult'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_troubleshooting_result
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_vm_security_rules
  isExternal: false
  name: 'begin_get_vm_security_rules(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.SecurityGroupViewParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.SecurityGroupViewResult'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_get_vm_security_rules
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_list_available_providers
  isExternal: false
  name: 'begin_list_available_providers(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.AvailableProvidersListParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.AvailableProvidersList'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_list_available_providers
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_set_flow_log_configuration
  isExternal: false
  name: 'begin_set_flow_log_configuration(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2019_12_01.models._models_py3.FlowLogInformation,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.FlowLogInformation'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_set_flow_log_configuration
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_verify_ip_flow
  isExternal: false
  name: 'begin_verify_ip_flow(resource_group_name: str, network_watcher_name: str,
    parameters: azure.mgmt.network.v2019_12_01.models._models_py3.VerificationIPFlowParameters,
    **kwargs) -> azure.core.polling._async_poller.AsyncLROPoller[ForwardRef(''models.VerificationIPFlowResult'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.begin_verify_ip_flow
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.create_or_update
  isExternal: false
  name: 'create_or_update(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher, **kwargs) ->
    azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.create_or_update
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, network_watcher_name: str, **kwargs) -> azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get_topology
  isExternal: false
  name: 'get_topology(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2019_12_01.models._models_py3.TopologyParameters, **kwargs)
    -> azure.mgmt.network.v2019_12_01.models._models_py3.Topology'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.get_topology
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list
  isExternal: false
  name: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.NetworkWatcherListResult'')]'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list_all
  isExternal: false
  name: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.NetworkWatcherListResult')]
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.list_all
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.update_tags
  isExternal: false
  name: 'update_tags(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2019_12_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2019_12_01.models._models_py3.NetworkWatcher'
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.update_tags
- fullName: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations
  uid: azure.mgmt.network.v2019_12_01.aio.operations.NetworkWatchersOperations.models
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.ConnectivityInformation]
  name: AsyncLROPoller[ConnectivityInformation]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.ConnectivityInformation
    name: ConnectivityInformation
    uid: azure.mgmt.network.v2019_12_01.models.ConnectivityInformation
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.ConnectivityInformation]
- fullName: azure.core.polling.AsyncLROPoller[None]
  name: AsyncLROPoller[None]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[None]
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.AzureReachabilityReport]
  name: AsyncLROPoller[AzureReachabilityReport]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.AzureReachabilityReport
    name: AzureReachabilityReport
    uid: azure.mgmt.network.v2019_12_01.models.AzureReachabilityReport
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.AzureReachabilityReport]
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.FlowLogInformation]
  name: AsyncLROPoller[FlowLogInformation]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.FlowLogInformation
    name: FlowLogInformation
    uid: azure.mgmt.network.v2019_12_01.models.FlowLogInformation
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.FlowLogInformation]
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.NetworkConfigurationDiagnosticResponse]
  name: AsyncLROPoller[NetworkConfigurationDiagnosticResponse]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.NetworkConfigurationDiagnosticResponse
    name: NetworkConfigurationDiagnosticResponse
    uid: azure.mgmt.network.v2019_12_01.models.NetworkConfigurationDiagnosticResponse
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.NetworkConfigurationDiagnosticResponse]
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.NextHopResult]
  name: AsyncLROPoller[NextHopResult]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.NextHopResult
    name: NextHopResult
    uid: azure.mgmt.network.v2019_12_01.models.NextHopResult
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.NextHopResult]
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.TroubleshootingResult]
  name: AsyncLROPoller[TroubleshootingResult]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.TroubleshootingResult
    name: TroubleshootingResult
    uid: azure.mgmt.network.v2019_12_01.models.TroubleshootingResult
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.TroubleshootingResult]
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.SecurityGroupViewResult]
  name: AsyncLROPoller[SecurityGroupViewResult]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.SecurityGroupViewResult
    name: SecurityGroupViewResult
    uid: azure.mgmt.network.v2019_12_01.models.SecurityGroupViewResult
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.SecurityGroupViewResult]
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.AvailableProvidersList]
  name: AsyncLROPoller[AvailableProvidersList]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.AvailableProvidersList
    name: AvailableProvidersList
    uid: azure.mgmt.network.v2019_12_01.models.AvailableProvidersList
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.AvailableProvidersList]
- fullName: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.VerificationIPFlowResult]
  name: AsyncLROPoller[VerificationIPFlowResult]
  spec.python:
  - fullName: azure.core.polling.AsyncLROPoller
    name: AsyncLROPoller
    uid: azure.core.polling.AsyncLROPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.VerificationIPFlowResult
    name: VerificationIPFlowResult
    uid: azure.mgmt.network.v2019_12_01.models.VerificationIPFlowResult
  - fullName: ']'
    name: ']'
  uid: azure.core.polling.AsyncLROPoller[azure.mgmt.network.v2019_12_01.models.VerificationIPFlowResult]
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2019_12_01.models.NetworkWatcherListResult]
  name: AsyncItemPaged[NetworkWatcherListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_12_01.models.NetworkWatcherListResult
    name: NetworkWatcherListResult
    uid: azure.mgmt.network.v2019_12_01.models.NetworkWatcherListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2019_12_01.models.NetworkWatcherListResult]
